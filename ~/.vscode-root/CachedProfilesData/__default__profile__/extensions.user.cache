{"input":{"location":{"$mid":1,"external":"vscode-userdata:/Users/andytran/.vscode/extensions/extensions.json","path":"/Users/andytran/.vscode/extensions/extensions.json","scheme":"vscode-userdata"},"mtime":1733520708161,"profile":true,"profileScanOptions":{"bailOutWhenFileNotFound":true},"type":1,"excludeObsolete":true,"validate":true,"productVersion":"1.95.3","productDate":"2024-11-13T14:50:04.152Z","productCommit":"f1a4fb101478ce6ec82fe9627c43efbf9e98c813","devMode":false,"language":"en","translations":{}},"result":[{"type":1,"identifier":{"id":"ms-vscode.cpptools-extension-pack","uuid":"3957b2f6-f086-49b5-a7b4-5da772123130"},"manifest":{"name":"cpptools-extension-pack","displayName":"C/C++ Extension Pack","description":"Popular extensions for C++ development in Visual Studio Code.","publisher":"ms-vscode","icon":"LanguageCCPP_color_128x.png","readme":"README.md","author":{"name":"Microsoft Corporation"},"license":"SEE LICENSE IN LICENSE.txt","version":"1.3.0","engines":{"vscode":"^1.48.0"},"categories":["Extension Packs"],"activationEvents":["onCommand:ms-vscode.cpptools-extension-pack.unavailableCommand"],"main":"main.js","repository":{"type":"git","url":"https://github.com/microsoft/vscode-cpptools.git","directory":"ExtensionPack"},"keywords":["C","C++","IntelliSense","Microsoft","color-theme","build","cmake"],"extensionPack":["ms-vscode.cpptools","ms-vscode.cpptools-themes","ms-vscode.cmake-tools"]},"location":{"$mid":1,"path":"/Users/andytran/.vscode/extensions/ms-vscode.cpptools-extension-pack-1.3.0","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Microsoft","metadata":{"installedTimestamp":1733083326471,"pinned":false,"source":"gallery","id":"3957b2f6-f086-49b5-a7b4-5da772123130","publisherId":"5f5636e7-69ed-4afe-b5d6-8d231fb3d3ee","publisherDisplayName":"Microsoft","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"ms-vscode.cpptools-themes","uuid":"99b17261-8f6e-45f0-9ad5-a69c6f509a4f"},"manifest":{"name":"cpptools-themes","displayName":"C/C++ Themes","description":"UI Themes for C/C++ extension.","version":"2.0.0","publisher":"ms-vscode","preview":false,"icon":"assets/LanguageCCPP_color_128x.png","readme":"README.md","author":{"name":"Microsoft Corporation"},"license":"SEE LICENSE IN LICENSE.txt","engines":{"vscode":"^1.30.0"},"bugs":{"url":"https://github.com/Microsoft/vscode-cpptools/issues","email":"c_cpp_support@microsoft.com"},"repository":{"type":"git","url":"https://github.com/Microsoft/vscode-cpptools.git"},"homepage":"https://github.com/Microsoft/vscode-cpptools","qna":"https://github.com/Microsoft/vscode-cpptools/issues","keywords":["C","C++","Microsoft","Theme","Themes"],"categories":["Themes"],"contributes":{"themes":[{"id":"Visual Studio Dark - C++","label":"Dark (Visual Studio - C/C++)","uiTheme":"vs-dark","path":"./themes/cpptools_dark_vs_new.json"},{"id":"Visual Studio 2017 Dark - C++","label":"2017 Dark (Visual Studio - C/C++)","uiTheme":"vs-dark","path":"./themes/cpptools_dark_vs.json"},{"id":"Visual Studio Light - C++","label":"Light (Visual Studio - C/C++)","uiTheme":"vs","path":"./themes/cpptools_light_vs_new.json"},{"id":"Visual Studio 2017 Light - C++","label":"2017 Light (Visual Studio - C/C++)","uiTheme":"vs","path":"./themes/cpptools_light_vs.json"}]}},"location":{"$mid":1,"path":"/Users/andytran/.vscode/extensions/ms-vscode.cpptools-themes-2.0.0","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Microsoft","metadata":{"installedTimestamp":1733083326471,"pinned":false,"source":"gallery","id":"99b17261-8f6e-45f0-9ad5-a69c6f509a4f","publisherId":"5f5636e7-69ed-4afe-b5d6-8d231fb3d3ee","publisherDisplayName":"Microsoft","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"ms-python.debugpy","uuid":"4bd5d2c9-9d65-401a-b0b2-7498d9f17615"},"manifest":{"name":"debugpy","displayName":"Python Debugger","description":"Python Debugger extension using debugpy.","version":"2024.12.0","publisher":"ms-python","enabledApiProposals":["portsAttributes","contribIssueReporter","debugVisualization","contribViewsWelcome"],"license":"MIT","homepage":"https://github.com/Microsoft/vscode-python-debugger","repository":{"type":"git","url":"https://github.com/microsoft/vscode-python-debugger.git"},"bugs":{"url":"https://github.com/Microsoft/vscode-python-debugger/issues"},"icon":"icon.png","keywords":["python","debugger","debugpy"],"engines":{"vscode":"^1.92.0"},"categories":["Debuggers"],"activationEvents":["onDebugInitialConfigurations","onDebugDynamicConfigurations:debugpy","onDebugResolve:debugpy","onLanguage:python"],"main":"./dist/extension.js","l10n":"./l10n","contributes":{"commands":[{"category":"Python Debugger","command":"debugpy.debugInTerminal","icon":"$(debug-alt)","title":"Python Debugger: Debug Python File"},{"category":"Python Debugger","command":"debugpy.debugUsingLaunchConfig","icon":"$(debug-alt)","title":"Python Debugger: Debug using launch.json"},{"category":"Python Debugger","command":"debugpy.clearCacheAndReload","title":"Clear Cache and Reload Window"},{"category":"Python Debugger","command":"debugpy.viewOutput","icon":{"dark":"resources/dark/repl.svg","light":"resources/light/repl.svg"},"title":"Show Output"},{"category":"Python Debugger","command":"debugpy.reportIssue","title":"Report Issue..."}],"menus":{"issue/reporter":[{"command":"debugpy.reportIssue"}],"commandPalette":[{"category":"Python Debugger","command":"debugpy.clearCacheAndReload","title":"Clear Cache and Reload Window"},{"category":"Python Debugger","command":"debugpy.debugInTerminal","icon":"$(debug-alt)","title":"Python Debugger: Debug Python File","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python Debugger","command":"debugpy.debugUsingLaunchConfig","icon":"$(debug-alt)","title":"Python Debugger: Debug using launch.json","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python Debugger","command":"debugpy.viewOutput","title":"Show Output"},{"category":"Python Debugger","command":"debugpy.reportIssue","title":"Report Issue...","when":"!virtualWorkspace && shellExecutionSupported"}],"editor/title/run":[{"command":"debugpy.debugInTerminal","title":"Python Debugger: Debug Python File","when":"resourceLangId == python && !isInDiffEditor && !virtualWorkspace && shellExecutionSupported"},{"command":"debugpy.debugUsingLaunchConfig","title":"Python Debugger: Debug using launch.json","when":"resourceLangId == python && !isInDiffEditor && !virtualWorkspace && shellExecutionSupported"}]},"configuration":{"properties":{"debugpy.debugJustMyCode":{"default":true,"description":"When debugging only step through user-written code. Disable this to allow stepping into library code.","scope":"resource","type":"boolean"},"debugpy.showPythonInlineValues":{"default":false,"description":"Whether to display inline values in the editor while debugging.","scope":"resource","type":"boolean","tags":["experimental"]}},"title":"Python Debugger","type":"object"},"debuggers":[{"configurationAttributes":{"attach":{"properties":{"connect":{"label":"Attach by connecting to debugpy over a socket.","properties":{"host":{"default":"127.0.0.1","description":"Hostname or IP address to connect to.","type":"string"},"port":{"description":"Port to connect to.","type":["number","string"]}},"required":["port"],"type":"object"},"debugAdapterPath":{"description":"Path (fully qualified) to the python debug adapter executable.","type":"string"},"django":{"default":false,"description":"Django debugging.","type":"boolean"},"jinja":{"default":null,"description":"Jinja template debugging (e.g. Flask).","enum":[false,null,true]},"justMyCode":{"default":true,"description":"If true, show and debug only user-written code. If false, show and debug all code, including library calls.","type":"boolean"},"listen":{"label":"Attach by listening for incoming socket connection from debugpy","properties":{"host":{"default":"127.0.0.1","description":"Hostname or IP address of the interface to listen on.","type":"string"},"port":{"description":"Port to listen on.","type":["number","string"]}},"required":["port"],"type":"object"},"logToFile":{"default":false,"description":"Enable logging of debugger events to a log file. This file can be found in the debugpy extension install folder.","type":"boolean"},"pathMappings":{"default":[],"items":{"label":"Path mapping","properties":{"localRoot":{"default":"${workspaceFolder}","label":"Local source root.","type":"string"},"remoteRoot":{"default":"","label":"Remote source root.","type":"string"}},"required":["localRoot","remoteRoot"],"type":"object"},"label":"Path mappings.","type":"array"},"processId":{"anyOf":[{"default":"${command:pickProcess}","description":"Use process picker to select a process to attach, or Process ID as integer.","enum":["${command:pickProcess}"]},{"description":"ID of the local process to attach to.","type":"integer"}]},"redirectOutput":{"default":true,"description":"Redirect output.","type":"boolean"},"showReturnValue":{"default":true,"description":"Show return value of functions when stepping.","type":"boolean"},"subProcess":{"default":false,"description":"Whether to enable Sub Process debugging","type":"boolean"},"consoleName":{"default":"Python Debug Console","description":"Display name of the debug console or terminal","type":"string"}}},"launch":{"properties":{"args":{"default":[],"description":"Command line arguments passed to the program. For string type arguments, it will pass through the shell as is, and therefore all shell variable expansions will apply. But for the array type, the values will be shell-escaped.","items":{"type":"string"},"anyOf":[{"default":"${command:pickArgs}","enum":["${command:pickArgs}"]},{"type":["array","string"]}]},"autoReload":{"default":{},"description":"Configures automatic reload of code on edit.","properties":{"enable":{"default":false,"description":"Automatically reload code on edit.","type":"boolean"},"exclude":{"default":["**/.git/**","**/.metadata/**","**/__pycache__/**","**/node_modules/**","**/site-packages/**"],"description":"Glob patterns of paths to exclude from auto reload.","items":{"type":"string"},"type":"array"},"include":{"default":["**/*.py","**/*.pyw"],"description":"Glob patterns of paths to include in auto reload.","items":{"type":"string"},"type":"array"}},"type":"object"},"console":{"default":"integratedTerminal","description":"Where to launch the debug target: internal console, integrated terminal, or external terminal.","enum":["externalTerminal","integratedTerminal","internalConsole"]},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. Default is the root directory of the file (leave empty).","type":"string"},"debugAdapterPath":{"description":"Path (fully qualified) to the Python debug adapter executable.","type":"string"},"autoStartBrowser":{"default":false,"description":"Open external browser to launch the application","type":"boolean"},"django":{"default":false,"description":"Django debugging.","type":"boolean"},"env":{"additionalProperties":{"type":"string"},"default":{},"description":"Environment variables defined as a key value pair. Property ends up being the Environment Variable and the value of the property ends up being the value of the Env Variable.","type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"gevent":{"default":false,"description":"Enable debugging of gevent monkey-patched code.","type":"boolean"},"jinja":{"default":null,"description":"Jinja template debugging (e.g. Flask).","enum":[false,null,true]},"justMyCode":{"default":true,"description":"Debug only user-written code.","type":"boolean"},"logToFile":{"default":false,"description":"Enable logging of debugger events to a log file. This file can be found in the debugpy extension install folder.","type":"boolean"},"module":{"default":"","description":"Name of the module to be debugged.","type":"string"},"pathMappings":{"default":[],"items":{"label":"Path mapping","properties":{"localRoot":{"default":"${workspaceFolder}","label":"Local source root.","type":"string"},"remoteRoot":{"default":"","label":"Remote source root.","type":"string"}},"required":["localRoot","remoteRoot"],"type":"object"},"label":"Path mappings.","type":"array"},"program":{"default":"${file}","description":"Absolute path to the program.","type":"string"},"purpose":{"default":[],"description":"Tells extension to use this configuration for test debugging, or when using debug-in-terminal command.","items":{"enum":["debug-test","debug-in-terminal"],"enumDescriptions":["Use this configuration while debugging tests using test view or test debug commands.","Use this configuration while debugging a file using debug in terminal button in the editor."]},"type":"array"},"pyramid":{"default":false,"description":"Whether debugging Pyramid applications.","type":"boolean"},"python":{"default":"${command:python.interpreterPath}","description":"Absolute path to the Python interpreter executable; overrides workspace configuration if set.","type":"string"},"pythonArgs":{"default":[],"description":"Command-line arguments passed to the Python interpreter. To pass arguments to the debug target, use \"args\".","items":{"type":"string"},"type":"array"},"redirectOutput":{"default":true,"description":"Redirect output.","type":"boolean"},"showReturnValue":{"default":true,"description":"Show return value of functions when stepping.","type":"boolean"},"stopOnEntry":{"default":false,"description":"Automatically stop after launch.","type":"boolean"},"subProcess":{"default":false,"description":"Whether to enable Sub Process debugging.","type":"boolean"},"sudo":{"default":false,"description":"Running debug program under elevated permissions (on Unix).","type":"boolean"},"guiEventLoop":{"default":"matplotlib","description":"The GUI event loop that's going to run. Possible values: \"matplotlib\", \"wx\", \"qt\", \"none\", or a custom function that'll be imported and run.","type":"string"},"consoleName":{"default":"Python Debug Console","description":"Display name of the debug console or terminal","type":"string"}}}},"configurationSnippets":[],"label":"Python Debugger","languages":["python"],"type":"debugpy","variables":{"pickProcess":"debugpy.pickLocalProcess","pickArgs":"debugpy.pickArgs"},"when":"!virtualWorkspace && shellExecutionSupported"}],"debugVisualizers":[{"id":"inlineHexDecoder","when":"debugConfigurationType == 'debugpy' && (variableType == 'float' || variableType == 'int')"}],"viewsWelcome":[{"view":"debug","contents":"\n[Show automatic Python configurations](command:workbench.action.debug.selectandstart?%5B%22debugpy%22%5D)\n","when":"dynamicPythonConfigAvailable"}]},"extensionDependencies":["ms-python.python"],"scripts":{"vscode:prepublish":"npm run package","compile":"webpack","watch":"webpack --watch","package":"webpack --mode production --devtool hidden-source-map","compile-tests":"tsc -p . --outDir out","watch-tests":"tsc -p . -w --outDir out","pretest":"npm run compile-tests && npm run compile && npm run lint","lint":"eslint src --ext ts","format-check":"prettier --check 'src/**/*.ts' 'build/**/*.yml' '.github/**/*.yml'","format-fix":"prettier --write 'src/**/*.ts' 'build/**/*.yml' '.github/**/*.yml'","test":"node ./out/test/runTest.js","vsce-package":"npx @vscode/vsce package -o python-debugger.vsix"},"devDependencies":{"@types/chai":"^4.3.4","@types/chai-as-promised":"^7.1.8","@types/fs-extra":"^11.0.4","@types/glob":"^7.2.0","@types/lodash":"^4.14.191","@types/mocha":"^10.0.7","@types/node":"18.x","@types/semver":"^7.3.13","@types/sinon":"^10.0.13","@types/vscode":"^1.87.0","@typescript-eslint/eslint-plugin":"^5.62.0","@typescript-eslint/parser":"^5.62.0","@vscode/test-electron":"^2.3.9","@vscode/vsce":"^2.24.0","chai":"^4.3.7","chai-as-promised":"^7.1.1","eslint":"^8.50.0","glob":"^8.0.3","mocha":"^10.7.0","prettier":"^3.0.3","semver":"^7.5.4","sinon":"^15.0.2","ts-loader":"^9.3.1","ts-mockito":"^2.6.1","typemoq":"^2.1.0","typescript":"^5.5.4","webpack":"^5.87.0","webpack-cli":"^5.1.4"},"dependencies":{"@vscode/debugadapter":"^1.65.0","@vscode/debugprotocol":"^1.65.0","@vscode/extension-telemetry":"^0.8.5","@vscode/python-extension":"^1.0.5","fs-extra":"^11.2.0","iconv-lite":"^0.6.3","inversify":"^6.0.1","jsonc-parser":"^3.2.0","lodash":"^4.17.21","reflect-metadata":"^0.1.13","vscode-languageclient":"^8.0.2"}},"location":{"$mid":1,"path":"/Users/andytran/.vscode/extensions/ms-python.debugpy-2024.12.0-darwin-arm64","scheme":"file"},"isBuiltin":false,"targetPlatform":"darwin-arm64","publisherDisplayName":"Microsoft","metadata":{"installedTimestamp":1733083310800,"pinned":false,"source":"gallery","id":"4bd5d2c9-9d65-401a-b0b2-7498d9f17615","publisherId":"998b010b-e2af-44a5-a6cd-0b5fd3b9b6f8","publisherDisplayName":"Microsoft","targetPlatform":"darwin-arm64","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"ms-python.python","uuid":"f1f59ae4-9318-4f3c-a9b5-81b2eaa5f8a5"},"manifest":{"name":"python","displayName":"Python","description":"Python language support with extension access points for IntelliSense (Pylance), Debugging (Python Debugger), linting, formatting, refactoring, unit tests, and more.","version":"2024.20.0","featureFlags":{"usingNewInterpreterStorage":true},"capabilities":{"untrustedWorkspaces":{"supported":"limited","description":"Only Partial IntelliSense with Pylance is supported. Cannot execute Python with untrusted files."},"virtualWorkspaces":{"supported":"limited","description":"Only Partial IntelliSense supported."}},"publisher":"ms-python","enabledApiProposals":["contribEditorContentMenu","quickPickSortByLabel","testObserver","quickPickItemTooltip","terminalDataWriteEvent","terminalExecuteCommandEvent","codeActionAI","notebookReplDocument","notebookVariableProvider"],"author":{"name":"Microsoft Corporation"},"license":"MIT","homepage":"https://github.com/Microsoft/vscode-python","repository":{"type":"git","url":"https://github.com/Microsoft/vscode-python"},"bugs":{"url":"https://github.com/Microsoft/vscode-python/issues"},"qna":"https://github.com/microsoft/vscode-python/discussions/categories/q-a","icon":"icon.png","galleryBanner":{"color":"#1e415e","theme":"dark"},"engines":{"vscode":"^1.94.0-20240918"},"enableTelemetry":true,"keywords":["python","django","unittest","multi-root ready"],"categories":["Programming Languages","Debuggers","Other","Data Science","Machine Learning"],"activationEvents":["onDebugInitialConfigurations","onLanguage:python","onDebugResolve:python","onCommand:python.copilotSetupTests","workspaceContains:mspythonconfig.json","workspaceContains:pyproject.toml","workspaceContains:Pipfile","workspaceContains:setup.py","workspaceContains:requirements.txt","workspaceContains:manage.py","workspaceContains:app.py","workspaceContains:.venv","workspaceContains:.conda"],"main":"./out/client/extension","browser":"./dist/extension.browser.js","l10n":"./l10n","contributes":{"problemMatchers":[{"name":"python","owner":"python","source":"python","fileLocation":"autoDetect","pattern":[{"regexp":"^.*File \\\"([^\\\"]|.*)\\\", line (\\d+).*","file":1,"line":2},{"regexp":"^\\s*(.*)\\s*$"},{"regexp":"^\\s*(.*Error.*)$","message":1}]}],"walkthroughs":[{"id":"pythonWelcome","title":"Get Started with Python Development","description":"Your first steps to set up a Python project with all the powerful tools and features that the Python extension has to offer!","when":"workspacePlatform != webworker","steps":[{"id":"python.createPythonFolder","title":"Open a Python project folder","description":"[Open](command:workbench.action.files.openFolder) or create a project folder.\n[Open Project Folder](command:workbench.action.files.openFolder)","media":{"svg":"resources/walkthrough/open-folder.svg","altText":"Open a Python file or a folder with a Python project."},"when":"workspaceFolderCount = 0"},{"id":"python.createPythonFile","title":"Create a Python file","description":"[Open](command:toSide:workbench.action.files.openFile) or [create](command:toSide:workbench.action.files.newUntitledFile?%7B%22languageId%22%3A%22python%22%7D) a Python file - make sure to save it as \".py\".\n[Create Python File](command:toSide:workbench.action.files.newUntitledFile?%7B%22languageId%22%3A%22python%22%7D)","media":{"svg":"resources/walkthrough/open-folder.svg","altText":"Open a Python file or a folder with a Python project."}},{"id":"python.installPythonWin8","title":"Install Python","description":"The Python Extension requires Python to be installed. Install Python [from python.org](https://www.python.org/downloads).\n\n[Install Python](https://www.python.org/downloads)\n","media":{"markdown":"resources/walkthrough/install-python-windows-8.md"},"when":"workspacePlatform == windows && showInstallPythonTile"},{"id":"python.installPythonMac","title":"Install Python","description":"The Python Extension requires Python to be installed. Install Python 3 through the terminal.\n[Install Python via Brew](command:python.installPythonOnMac)\n","media":{"markdown":"resources/walkthrough/install-python-macos.md"},"when":"workspacePlatform == mac && showInstallPythonTile","command":"workbench.action.terminal.new"},{"id":"python.installPythonLinux","title":"Install Python","description":"The Python Extension requires Python to be installed. Install Python 3 through the terminal.\n[Install Python via terminal](command:python.installPythonOnLinux)\n","media":{"markdown":"resources/walkthrough/install-python-linux.md"},"when":"workspacePlatform == linux && showInstallPythonTile","command":"workbench.action.terminal.new"},{"id":"python.createEnvironment","title":"Select or create a Python environment","description":"Create an environment for your Python project or use [Select Python Interpreter](command:python.setInterpreter) to select an existing one.\n[Create Environment](command:python.createEnvironment)\n**Tip**: Run the ``Python: Create Environment`` command in the [Command Palette](command:workbench.action.showCommands).","media":{"svg":"resources/walkthrough/create-environment.svg","altText":"Creating a Python environment from the Command Palette"}},{"id":"python.runAndDebug","title":"Run and debug your Python file","description":"Open your Python file  and click on the play button on the top right of the editor, or press F5 when on the file and select \"Python File\" to run with the debugger. \n  \n[Learn more](https://code.visualstudio.com/docs/python/python-tutorial#_run-hello-world)","media":{"svg":"resources/walkthrough/rundebug2.svg","altText":"How to run and debug in VS Code with F5 or the play button on the top right."}},{"id":"python.learnMoreWithDS","title":"Keep exploring!","description":"🎨 Explore all the features the Python extension has to offer by looking for \"Python\" in the [Command Palette](command:workbench.action.showCommands). \n 📈 Learn more about getting started with [data science](command:workbench.action.openWalkthrough?%7B%22category%22%3A%22ms-python.python%23pythonDataScienceWelcome%22%2C%22step%22%3A%22ms-python.python%23python.createNewNotebook%22%7D) in Python. \n ✨ Take a look at our [Release Notes](https://aka.ms/AA8dxtb) to learn more about the latest features. \n \n[Follow along with the Python Tutorial](https://aka.ms/AA8dqti)","media":{"altText":"Image representing our documentation page and mailing list resources.","svg":"resources/walkthrough/learnmore.svg"}}]},{"id":"pythonDataScienceWelcome","title":"Get Started with Python for Data Science","description":"Your first steps to getting started with a Data Science project with Python!","when":"false","steps":[{"id":"python.installJupyterExt","title":"Install Jupyter extension","description":"If you haven't already, install the [Jupyter extension](command:workbench.extensions.search?\"ms-toolsai.jupyter\") to take full advantage of notebooks experiences in VS Code!\n \n[Search Jupyter extension](command:workbench.extensions.search?\"ms-toolsai.jupyter\")","media":{"svg":"resources/walkthrough/data-science.svg","altText":"Creating a new Jupyter notebook"}},{"id":"python.createNewNotebook","title":"Create or open a Jupyter Notebook","description":"Right click in the file explorer and create a new file with an .ipynb extension. Or, open the [Command Palette](command:workbench.action.showCommands) and run the command \n``Jupyter: Create New Blank Notebook``.\n[Create new Jupyter Notebook](command:toSide:jupyter.createnewnotebook)\n If you have an existing project, you can also [open a folder](command:workbench.action.files.openFolder) and/or clone a project from GitHub: [clone a Git repository](command:git.clone).","media":{"svg":"resources/walkthrough/create-notebook.svg","altText":"Creating a new Jupyter notebook"},"completionEvents":["onCommand:jupyter.createnewnotebook","onCommand:workbench.action.files.openFolder","onCommand:workbench.action.files.openFileFolder"]},{"id":"python.openInteractiveWindow","title":"Open the Python Interactive Window","description":"The Python Interactive Window is a Python shell where you can execute and view the results of your Python code. You can create cells on a Python file by typing ``#%%``.\n \nTo open the interactive window anytime, open the [Command Palette](command:workbench.action.showCommands) and run the command \n``Jupyter: Create Interactive Window``.\n[Open Interactive Window](command:jupyter.createnewinteractive)","media":{"svg":"resources/walkthrough/interactive-window.svg","altText":"Opening Python interactive window"},"completionEvents":["onCommand:jupyter.createnewinteractive"]},{"id":"python.dataScienceLearnMore","title":"Find out more!","description":"📒 Take a look into the [Jupyter extension](command:workbench.extensions.search?\"ms-toolsai.jupyter\") features, by looking for \"Jupyter\" in the [Command Palette](command:workbench.action.showCommands). \n 🏃🏻 Find out more features in our [Tutorials](https://aka.ms/AAdjzpd).  \n[Learn more](https://aka.ms/AAdar6q)","media":{"svg":"resources/walkthrough/learnmore.svg","altText":"Image representing our documentation page and mailing list resources."}}]}],"breakpoints":[{"language":"html"},{"language":"jinja"},{"language":"python"},{"language":"django-html"},{"language":"django-txt"}],"commands":[{"title":"New Python File","shortTitle":"Python File","category":"Python","command":"python.createNewFile"},{"category":"Python","command":"python.analysis.restartLanguageServer","title":"Restart Language Server"},{"category":"Python","command":"python.clearCacheAndReload","title":"Clear Cache and Reload Window"},{"category":"Python","command":"python.clearWorkspaceInterpreter","title":"Clear Workspace Interpreter Setting"},{"category":"Python","command":"python.configureTests","title":"Configure Tests"},{"category":"Python","command":"python.createTerminal","title":"Create Terminal"},{"category":"Python","command":"python.createEnvironment","title":"Create Environment..."},{"category":"Python","command":"python.createEnvironment-button","title":"Create Environment..."},{"category":"Python","command":"python.enableSourceMapSupport","title":"Enable Source Map Support For Extension Debugging"},{"category":"Python","command":"python.execInTerminal","title":"Run Python File in Terminal"},{"category":"Python","command":"python.execInTerminal-icon","icon":"$(play)","title":"Run Python File"},{"category":"Python","command":"python.execInDedicatedTerminal","icon":"$(play)","title":"Run Python File in Dedicated Terminal"},{"category":"Python","command":"python.execSelectionInDjangoShell","title":"Run Selection/Line in Django Shell"},{"category":"Python","command":"python.execSelectionInTerminal","title":"Run Selection/Line in Python Terminal"},{"category":"Python","command":"python.execInREPL","title":"Run Selection/Line in Python REPL"},{"category":"Python","command":"python.launchTensorBoard","title":"Launch TensorBoard"},{"category":"Python","command":"python.refreshTensorBoard","enablement":"python.hasActiveTensorBoardSession","icon":"$(refresh)","title":"Refresh TensorBoard"},{"category":"Python","command":"python.reportIssue","title":"Report Issue..."},{"category":"Test","command":"testing.reRunFailTests","icon":"$(run-errors)","title":"Rerun Failed Tests"},{"category":"Python","command":"python.setInterpreter","title":"Select Interpreter"},{"category":"Python","command":"python.startREPL","title":"Start Terminal REPL"},{"category":"Python","command":"python.startNativeREPL","title":"Start Native Python REPL"},{"category":"Python","command":"python.viewLanguageServerOutput","enablement":"python.hasLanguageServerOutputChannel","title":"Show Language Server Output"},{"category":"Python","command":"python.viewOutput","icon":{"dark":"resources/dark/repl.svg","light":"resources/light/repl.svg"},"title":"Show Output"},{"category":"Python","command":"python.installJupyter","title":"Install the Jupyter extension"}],"configuration":{"properties":{"python.activeStateToolPath":{"default":"state","description":"Path to the State Tool executable for ActiveState runtimes (version 0.36+).","scope":"machine-overridable","type":"string"},"python.autoComplete.extraPaths":{"default":[],"description":"List of paths to libraries and the like that need to be imported by auto complete engine. E.g. when using Google App SDK, the paths are not in system path, hence need to be added into this list.","scope":"resource","type":"array","uniqueItems":true},"python.createEnvironment.contentButton":{"default":"hide","markdownDescription":"Show or hide Create Environment button in the editor for `requirements.txt` or other dependency files.","scope":"machine-overridable","type":"string","enum":["show","hide"]},"python.createEnvironment.trigger":{"default":"prompt","markdownDescription":"Detect if environment creation is required for the current project","scope":"machine-overridable","type":"string","enum":["off","prompt"]},"python.condaPath":{"default":"","description":"Path to the conda executable to use for activation (version 4.4+).","scope":"machine","type":"string"},"python.defaultInterpreterPath":{"default":"python","markdownDescription":"Path to default Python to use when extension loads up for the first time, no longer used once an interpreter is selected for the workspace. See [here](https://aka.ms/AAfekmf) to understand when this is used","scope":"machine-overridable","type":"string"},"python.diagnostics.sourceMapsEnabled":{"default":false,"description":"Enable source map support for meaningful stack traces in error logs.","scope":"application","type":"boolean"},"python.envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","scope":"resource","type":"string"},"python.experiments.enabled":{"default":true,"description":"Enables A/B tests experiments in the Python extension. If enabled, you may get included in proposed enhancements and/or features.","scope":"window","type":"boolean"},"python.experiments.optInto":{"default":[],"markdownDescription":"List of experiments to opt into. If empty, user is assigned the default experiment groups. See [here](https://github.com/microsoft/vscode-python/wiki/AB-Experiments) for more details.","items":{"enum":["All","pythonSurveyNotification","pythonPromptNewToolsExt","pythonTerminalEnvVarActivation","pythonDiscoveryUsingWorkers","pythonTestAdapter","pythonREPLSmartSend","pythonRecommendTensorboardExt"],"enumDescriptions":["Combined list of all experiments.","Denotes the Python Survey Notification experiment.","Denotes the Python Prompt New Tools Extension experiment.","Enables use of environment variables to activate terminals instead of sending activation commands.","Enables use of worker threads to do heavy computation when discovering interpreters.","Denotes the Python Test Adapter experiment.","Denotes the Python REPL Smart Send experiment.","Denotes the Tensorboard Extension recommendation experiment."]},"scope":"window","type":"array","uniqueItems":true},"python.experiments.optOutFrom":{"default":[],"markdownDescription":"List of experiments to opt out of. If empty, user is assigned the default experiment groups. See [here](https://github.com/microsoft/vscode-python/wiki/AB-Experiments) for more details.","items":{"enum":["All","pythonSurveyNotification","pythonPromptNewToolsExt","pythonTerminalEnvVarActivation","pythonDiscoveryUsingWorkers","pythonTestAdapter","pythonREPLSmartSend"],"enumDescriptions":["Combined list of all experiments.","Denotes the Python Survey Notification experiment.","Denotes the Python Prompt New Tools Extension experiment.","Enables use of environment variables to activate terminals instead of sending activation commands.","Enables use of worker threads to do heavy computation when discovering interpreters.","Denotes the Python Test Adapter experiment.","Denotes the Python REPL Smart Send experiment."]},"scope":"window","type":"array","uniqueItems":true},"python.globalModuleInstallation":{"default":false,"description":"Whether to install Python modules globally when not using an environment.","scope":"resource","type":"boolean"},"python.languageServer":{"default":"Default","description":"Defines type of the language server.","enum":["Default","Jedi","Pylance","None"],"enumDescriptions":["Automatically select a language server: Pylance if installed and available, otherwise fallback to Jedi.","Use Jedi behind the Language Server Protocol (LSP) as a language server.","Use Pylance as a language server.","Disable language server capabilities."],"scope":"window","type":"string"},"python.interpreter.infoVisibility":{"default":"onPythonRelated","description":"Controls when to display information of selected interpreter in the status bar.","enum":["never","onPythonRelated","always"],"enumDescriptions":["Never display information.","Only display information if Python-related files are opened.","Always display information."],"scope":"machine","type":"string"},"python.logging.level":{"default":"error","deprecationMessage":"This setting is deprecated. Please use command `Developer: Set Log Level...` to set logging level.","description":"The logging level the extension logs at, defaults to 'error'","enum":["debug","error","info","off","warn"],"scope":"machine","type":"string"},"python.missingPackage.severity":{"default":"Hint","description":"Set severity of missing packages in requirements.txt or pyproject.toml","enum":["Error","Hint","Information","Warning"],"scope":"resource","type":"string"},"python.locator":{"default":"js","description":"[Experimental] Select implementation of environment locators. This is an experimental setting while we test native environment location.","enum":["js","native"],"tags":["onExP","preview"],"scope":"machine","type":"string"},"python.pipenvPath":{"default":"pipenv","description":"Path to the pipenv executable to use for activation.","scope":"machine-overridable","type":"string"},"python.poetryPath":{"default":"poetry","description":"Path to the poetry executable.","scope":"machine-overridable","type":"string"},"python.pixiToolPath":{"default":"pixi","description":"Path to the pixi executable.","scope":"machine-overridable","type":"string"},"python.tensorBoard.logDirectory":{"default":"","description":"Set this setting to your preferred TensorBoard log directory to skip log directory prompt when starting TensorBoard.","scope":"resource","type":"string","markdownDeprecationMessage":"Tensorboard support has been moved to the extension [Tensorboard extension](https://marketplace.visualstudio.com/items?itemName=ms-toolsai.tensorboard). Instead use the setting `tensorBoard.logDirectory`.","deprecationMessage":"Tensorboard support has been moved to the extension Tensorboard extension. Instead use the setting `tensorBoard.logDirectory`."},"python.terminal.activateEnvInCurrentTerminal":{"default":false,"description":"Activate Python Environment in the current Terminal on load of the Extension.","scope":"resource","type":"boolean"},"python.terminal.activateEnvironment":{"default":true,"description":"Activate Python Environment in all Terminals created.","scope":"resource","type":"boolean"},"python.terminal.executeInFileDir":{"default":false,"description":"When executing a file in the terminal, whether to use execute in the file's directory, instead of the current open folder.","scope":"resource","type":"boolean"},"python.terminal.focusAfterLaunch":{"default":false,"description":"When launching a python terminal, whether to focus the cursor on the terminal.","scope":"resource","type":"boolean"},"python.terminal.launchArgs":{"default":[],"description":"Python launch arguments to use when executing a file in the terminal.","scope":"resource","type":"array"},"python.terminal.shellIntegration.enabled":{"default":false,"markdownDescription":"Enable [shell integration](https://code.visualstudio.com/docs/terminal/shell-integration) for the terminals running python. Shell integration enhances the terminal experience by enabling command decorations, run recent command, improving accessibility among other things.","scope":"resource","type":"boolean","tags":["preview"]},"python.REPL.enableREPLSmartSend":{"default":true,"description":"Toggle Smart Send for the Python REPL. Smart Send enables sending the smallest runnable block of code to the REPL on Shift+Enter and moves the cursor accordingly.","scope":"resource","type":"boolean"},"python.REPL.sendToNativeREPL":{"default":false,"description":"Toggle to send code to Python REPL instead of the terminal on execution. Turning this on will change the behavior for both Smart Send and Run Selection/Line in the Context Menu.","scope":"resource","type":"boolean","tags":["onExP","preview"]},"python.REPL.provideVariables":{"default":true,"description":"Toggle to provide variables for the REPL variable view for the native REPL.","scope":"resource","type":"boolean"},"python.testing.autoTestDiscoverOnSaveEnabled":{"default":true,"description":"Enable auto run test discovery when saving a test file.","scope":"resource","type":"boolean"},"python.testing.cwd":{"default":null,"description":"Optional working directory for tests.","scope":"resource","type":"string"},"python.testing.debugPort":{"default":3000,"description":"Port number used for debugging of tests.","scope":"resource","type":"number"},"python.testing.promptToConfigure":{"default":true,"description":"Prompt to configure a test framework if potential tests directories are discovered.","scope":"resource","type":"boolean"},"python.testing.pytestArgs":{"default":[],"description":"Arguments passed in. Each argument is a separate item in the array.","items":{"type":"string"},"scope":"resource","type":"array"},"python.testing.pytestEnabled":{"default":false,"description":"Enable testing using pytest.","scope":"resource","type":"boolean"},"python.testing.pytestPath":{"default":"pytest","description":"Path to pytest (pytest), you can use a custom version of pytest by modifying this setting to include the full path.","scope":"machine-overridable","type":"string"},"python.testing.unittestArgs":{"default":["-v","-s",".","-p","*test*.py"],"description":"Arguments passed in. Each argument is a separate item in the array.","items":{"type":"string"},"scope":"resource","type":"array"},"python.testing.unittestEnabled":{"default":false,"description":"Enable testing using unittest.","scope":"resource","type":"boolean"},"python.venvFolders":{"default":[],"description":"Folders in your home directory to look into for virtual environments (supports pyenv, direnv and virtualenvwrapper by default).","items":{"type":"string"},"scope":"machine","type":"array","uniqueItems":true},"python.venvPath":{"default":"","description":"Path to folder with a list of Virtual Environments (e.g. ~/.pyenv, ~/Envs, ~/.virtualenvs).","scope":"machine","type":"string"}},"title":"Python","type":"object"},"debuggers":[{"configurationAttributes":{"attach":{"properties":{"connect":{"label":"Attach by connecting to debugpy over a socket.","properties":{"host":{"default":"127.0.0.1","description":"Hostname or IP address to connect to.","type":"string"},"port":{"description":"Port to connect to.","type":"number"}},"required":["port"],"type":"object"},"debugAdapterPath":{"description":"Path (fully qualified) to the python debug adapter executable.","type":"string"},"django":{"default":false,"description":"Django debugging.","type":"boolean"},"host":{"default":"127.0.0.1","description":"Hostname or IP address to connect to.","type":"string"},"jinja":{"default":null,"description":"Jinja template debugging (e.g. Flask).","enum":[false,null,true]},"justMyCode":{"default":true,"description":"If true, show and debug only user-written code. If false, show and debug all code, including library calls.","type":"boolean"},"listen":{"label":"Attach by listening for incoming socket connection from debugpy","properties":{"host":{"default":"127.0.0.1","description":"Hostname or IP address of the interface to listen on.","type":"string"},"port":{"description":"Port to listen on.","type":"number"}},"required":["port"],"type":"object"},"logToFile":{"default":false,"description":"Enable logging of debugger events to a log file.","type":"boolean"},"pathMappings":{"default":[],"items":{"label":"Path mapping","properties":{"localRoot":{"default":"${workspaceFolder}","label":"Local source root.","type":"string"},"remoteRoot":{"default":"","label":"Remote source root.","type":"string"}},"required":["localRoot","remoteRoot"],"type":"object"},"label":"Path mappings.","type":"array"},"port":{"description":"Port to connect to.","type":"number"},"processId":{"anyOf":[{"default":"${command:pickProcess}","description":"Use process picker to select a process to attach, or Process ID as integer.","enum":["${command:pickProcess}"]},{"description":"ID of the local process to attach to.","type":"integer"}]},"redirectOutput":{"default":true,"description":"Redirect output.","type":"boolean"},"showReturnValue":{"default":true,"description":"Show return value of functions when stepping.","type":"boolean"},"subProcess":{"default":false,"description":"Whether to enable Sub Process debugging","type":"boolean"}}},"launch":{"properties":{"args":{"default":[],"description":"Command line arguments passed to the program.","items":{"type":"string"},"type":["array","string"]},"autoReload":{"default":{},"description":"Configures automatic reload of code on edit.","properties":{"enable":{"default":false,"description":"Automatically reload code on edit.","type":"boolean"},"exclude":{"default":["**/.git/**","**/.metadata/**","**/__pycache__/**","**/node_modules/**","**/site-packages/**"],"description":"Glob patterns of paths to exclude from auto reload.","items":{"type":"string"},"type":"array"},"include":{"default":["**/*.py","**/*.pyw"],"description":"Glob patterns of paths to include in auto reload.","items":{"type":"string"},"type":"array"}},"type":"object"},"console":{"default":"integratedTerminal","description":"Where to launch the debug target: internal console, integrated terminal, or external terminal.","enum":["externalTerminal","integratedTerminal","internalConsole"]},"consoleTitle":{"default":"Python Debug Console","description":"Display name of the debug console or terminal"},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. Default is the root directory of the file (leave empty).","type":"string"},"debugAdapterPath":{"description":"Path (fully qualified) to the python debug adapter executable.","type":"string"},"django":{"default":false,"description":"Django debugging.","type":"boolean"},"env":{"additionalProperties":{"type":"string"},"default":{},"description":"Environment variables defined as a key value pair. Property ends up being the Environment Variable and the value of the property ends up being the value of the Env Variable.","type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"gevent":{"default":false,"description":"Enable debugging of gevent monkey-patched code.","type":"boolean"},"host":{"default":"localhost","description":"IP address of the of the local debug server (default is localhost).","type":"string"},"jinja":{"default":null,"description":"Jinja template debugging (e.g. Flask).","enum":[false,null,true]},"justMyCode":{"default":true,"description":"Debug only user-written code.","type":"boolean"},"logToFile":{"default":false,"description":"Enable logging of debugger events to a log file.","type":"boolean"},"module":{"default":"","description":"Name of the module to be debugged.","type":"string"},"pathMappings":{"default":[],"items":{"label":"Path mapping","properties":{"localRoot":{"default":"${workspaceFolder}","label":"Local source root.","type":"string"},"remoteRoot":{"default":"","label":"Remote source root.","type":"string"}},"required":["localRoot","remoteRoot"],"type":"object"},"label":"Path mappings.","type":"array"},"port":{"default":0,"description":"Debug port (default is 0, resulting in the use of a dynamic port).","type":"number"},"program":{"default":"${file}","description":"Absolute path to the program.","type":"string"},"purpose":{"default":[],"description":"Tells extension to use this configuration for test debugging, or when using debug-in-terminal command.","items":{"enum":["debug-test","debug-in-terminal"],"enumDescriptions":["Use this configuration while debugging tests using test view or test debug commands.","Use this configuration while debugging a file using debug in terminal button in the editor."]},"type":"array"},"pyramid":{"default":false,"description":"Whether debugging Pyramid applications","type":"boolean"},"python":{"default":"${command:python.interpreterPath}","description":"Absolute path to the Python interpreter executable; overrides workspace configuration if set.","type":"string"},"pythonArgs":{"default":[],"description":"Command-line arguments passed to the Python interpreter. To pass arguments to the debug target, use \"args\".","items":{"type":"string"},"type":"array"},"redirectOutput":{"default":true,"description":"Redirect output.","type":"boolean"},"showReturnValue":{"default":true,"description":"Show return value of functions when stepping.","type":"boolean"},"stopOnEntry":{"default":false,"description":"Automatically stop after launch.","type":"boolean"},"subProcess":{"default":false,"description":"Whether to enable Sub Process debugging","type":"boolean"},"sudo":{"default":false,"description":"Running debug program under elevated permissions (on Unix).","type":"boolean"}}}},"deprecated":"This configuration will be deprecated soon. Please replace `python` with `debugpy` to use the new Python Debugger extension.","configurationSnippets":[],"label":"Python","languages":["python"],"type":"python","variables":{"pickProcess":"python.pickLocalProcess"},"when":"!virtualWorkspace && shellExecutionSupported","hiddenWhen":"true"}],"grammars":[{"language":"pip-requirements","path":"./syntaxes/pip-requirements.tmLanguage.json","scopeName":"source.pip-requirements"}],"jsonValidation":[{"fileMatch":".condarc","url":"./schemas/condarc.json"},{"fileMatch":"environment.yml","url":"./schemas/conda-environment.json"},{"fileMatch":"meta.yaml","url":"./schemas/conda-meta.json"}],"keybindings":[{"command":"python.execSelectionInTerminal","key":"shift+enter","when":"editorTextFocus && editorLangId == python && !findInputFocussed && !replaceInputFocussed && !jupyter.ownsSelection && !notebookEditorFocused && !isCompositeNotebook"},{"command":"python.execInREPL","key":"shift+enter","when":"!accessibilityModeEnabled && config.python.REPL.sendToNativeREPL && editorLangId == python && editorTextFocus && !jupyter.ownsSelection && !notebookEditorFocused && !isCompositeNotebook"},{"command":"python.execInREPLEnter","key":"enter","when":"!config.interactiveWindow.executeWithShiftEnter && activeEditor == 'workbench.editor.repl' && !inlineChatFocused"},{"command":"python.execInInteractiveWindowEnter","key":"enter","when":"!config.interactiveWindow.executeWithShiftEnter && activeEditor == 'workbench.editor.interactive' && !inlineChatFocused"},{"command":"python.refreshTensorBoard","key":"ctrl+r","mac":"cmd+r","when":"python.hasActiveTensorBoardSession"}],"languages":[{"aliases":["Jinja"],"extensions":[".j2",".jinja2"],"id":"jinja"},{"aliases":["pip requirements","requirements.txt"],"configuration":"./languages/pip-requirements.json","filenamePatterns":["**/*requirements*.{txt, in}","**/*constraints*.txt","**/requirements/*.{txt,in}","**/constraints/*.txt"],"filenames":["constraints.txt","requirements.in","requirements.txt"],"id":"pip-requirements"},{"filenames":[".condarc"],"id":"yaml"},{"filenames":[".flake8",".pep8",".pylintrc",".pypirc"],"id":"ini"},{"filenames":["Pipfile","poetry.lock","uv.lock"],"id":"toml"},{"filenames":["Pipfile.lock"],"id":"json"}],"menus":{"issue/reporter":[{"command":"python.reportIssue"}],"commandPalette":[{"category":"Python","command":"python.analysis.restartLanguageServer","title":"Restart Language Server","when":"!virtualWorkspace && shellExecutionSupported && (editorLangId == python || notebookType == jupyter-notebook)"},{"category":"Python","command":"python.clearCacheAndReload","title":"Clear Cache and Reload Window","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.clearWorkspaceInterpreter","title":"Clear Workspace Interpreter Setting","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.configureTests","title":"Configure Tests","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.createEnvironment","title":"Create Environment...","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.createEnvironment-button","title":"Create Environment...","when":"false"},{"category":"Python","command":"python.createTerminal","title":"Create Terminal","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.enableSourceMapSupport","title":"Enable Source Map Support For Extension Debugging","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.execInTerminal","title":"Run Python File in Terminal","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python","command":"python.execInTerminal-icon","icon":"$(play)","title":"Run Python File","when":"false"},{"category":"Python","command":"python.execInDedicatedTerminal","icon":"$(play)","title":"Run Python File in Dedicated Terminal","when":"false"},{"category":"Python","command":"python.execSelectionInDjangoShell","title":"Run Selection/Line in Django Shell","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python","command":"python.execSelectionInTerminal","title":"Run Selection/Line in Python Terminal","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python","command":"python.execInREPL","title":"Run Selection/Line in Python REPL","when":"false"},{"category":"Python","command":"python.launchTensorBoard","title":"Launch TensorBoard","when":"!virtualWorkspace && shellExecutionSupported && !python.tensorboardExtInstalled"},{"category":"Python","command":"python.refreshTensorBoard","enablement":"python.hasActiveTensorBoardSession","icon":"$(refresh)","title":"Refresh TensorBoard","when":"!virtualWorkspace && shellExecutionSupported && !python.tensorboardExtInstalled"},{"category":"Python","command":"python.reportIssue","title":"Report Issue...","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Test","command":"testing.reRunFailTests","icon":"$(run-errors)","title":"Rerun Failed Tests","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.setInterpreter","title":"Select Interpreter","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.startREPL","title":"Start Terminal REPL","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.startNativeREPL","title":"Start Native Python REPL","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.viewLanguageServerOutput","enablement":"python.hasLanguageServerOutputChannel","title":"Show Language Server Output","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.viewOutput","title":"Show Output","when":"!virtualWorkspace && shellExecutionSupported"}],"editor/content":[{"group":"Python","command":"python.createEnvironment-button","when":"showCreateEnvButton && resourceLangId == pip-requirements && !virtualWorkspace && shellExecutionSupported && !inDiffEditor && !isMergeResultEditor && pythonDepsNotInstalled"},{"group":"Python","command":"python.createEnvironment-button","when":"showCreateEnvButton && resourceFilename == pyproject.toml && pipInstallableToml && !virtualWorkspace && shellExecutionSupported  && !inDiffEditor && !isMergeResultEditor && pythonDepsNotInstalled"}],"editor/context":[{"submenu":"python.run","group":"Python","when":"editorLangId == python && !virtualWorkspace && shellExecutionSupported && isWorkspaceTrusted && !inChat  && notebookType != jupyter-notebook"},{"submenu":"python.runFileInteractive","group":"Jupyter2","when":"editorLangId == python && !virtualWorkspace && shellExecutionSupported && !isJupyterInstalled && isWorkspaceTrusted && !inChat"}],"python.runFileInteractive":[{"command":"python.installJupyter","group":"Jupyter2","when":"resourceLangId == python && !virtualWorkspace && shellExecutionSupported"}],"python.run":[{"command":"python.execInTerminal","group":"Python","when":"resourceLangId == python && !virtualWorkspace && shellExecutionSupported"},{"command":"python.execSelectionInDjangoShell","group":"Python","when":"editorHasSelection && editorLangId == python && python.isDjangoProject && !virtualWorkspace && shellExecutionSupported"},{"command":"python.execSelectionInTerminal","group":"Python","when":"!config.python.REPL.sendToNativeREPL && editorFocus && editorLangId == python && !virtualWorkspace && shellExecutionSupported"},{"command":"python.execInREPL","group":"Python","when":"editorFocus && editorLangId == python && !virtualWorkspace && shellExecutionSupported && config.python.REPL.sendToNativeREPL"}],"editor/title":[{"command":"python.refreshTensorBoard","group":"navigation@0","when":"python.hasActiveTensorBoardSession && !virtualWorkspace && shellExecutionSupported"}],"editor/title/run":[{"command":"python.execInTerminal-icon","group":"navigation@0","title":"Run Python File","when":"resourceLangId == python && !isInDiffEditor && !virtualWorkspace && shellExecutionSupported"},{"command":"python.execInDedicatedTerminal","group":"navigation@0","title":"Run Python File in Dedicated Terminal","when":"resourceLangId == python && !isInDiffEditor && !virtualWorkspace && shellExecutionSupported"}],"explorer/context":[{"command":"python.execInTerminal","group":"Python","when":"resourceLangId == python && !virtualWorkspace && shellExecutionSupported"}],"file/newFile":[{"command":"python.createNewFile","group":"file","when":"!virtualWorkspace"}],"view/title":[{"command":"testing.reRunFailTests","when":"view == workbench.view.testing && hasFailedTests && !virtualWorkspace && shellExecutionSupported","group":"navigation@1"}]},"submenus":[{"id":"python.run","label":"Run Python","icon":"$(play)"},{"id":"python.runFileInteractive","label":"Run in Interactive window"}],"viewsWelcome":[{"view":"testing","contents":"Configure a test framework to see your tests here.\n[Configure Python Tests](command:python.configureTests)","when":"!virtualWorkspace && shellExecutionSupported"}],"yamlValidation":[{"fileMatch":".condarc","url":"./schemas/condarc.json"},{"fileMatch":"environment.yml","url":"./schemas/conda-environment.json"},{"fileMatch":"meta.yaml","url":"./schemas/conda-meta.json"}]},"copilot":{"tests":{"getSetupConfirmation":"python.copilotSetupTests"}},"scripts":{"package":"gulp clean && gulp prePublishBundle && vsce package -o ms-python-insiders.vsix","prePublish":"gulp clean && gulp prePublishNonBundle","compile":"tsc -watch -p ./","compileApi":"node ./node_modules/typescript/lib/tsc.js -b ./pythonExtensionApi/tsconfig.json","compiled":"deemon npm run compile","kill-compiled":"deemon --kill npm run compile","checkDependencies":"gulp checkDependencies","test":"node ./out/test/standardTest.js && node ./out/test/multiRootTest.js","test:unittests":"mocha --config ./build/.mocha.unittests.json","test:unittests:cover":"nyc --no-clean --nycrc-path ./build/.nycrc mocha --config ./build/.mocha.unittests.json","test:functional":"mocha --require source-map-support/register --config ./build/.mocha.functional.json","test:functional:perf":"node --inspect-brk ./node_modules/mocha/bin/_mocha --require source-map-support/register --config ./build/.mocha.functional.perf.json","test:functional:memleak":"node --inspect-brk ./node_modules/mocha/bin/_mocha --require source-map-support/register --config ./build/.mocha.functional.json","test:functional:cover":"nyc --no-clean --nycrc-path ./build/.nycrc mocha --require source-map-support/register --config ./build/.mocha.functional.json","test:cover:report":"nyc --nycrc-path ./build/.nycrc  report --reporter=text --reporter=html --reporter=text-summary --reporter=cobertura","testDebugger":"node ./out/test/testBootstrap.js ./out/test/debuggerTest.js","testDebugger:cover":"nyc --no-clean --use-spawn-wrap --nycrc-path ./build/.nycrc --require source-map-support/register node ./out/test/debuggerTest.js","testSingleWorkspace":"node ./out/test/testBootstrap.js ./out/test/standardTest.js","testSingleWorkspace:cover":"nyc --no-clean --use-spawn-wrap --nycrc-path ./build/.nycrc --require source-map-support/register node ./out/test/standardTest.js","preTestJediLSP":"node ./out/test/languageServers/jedi/lspSetup.js","testJediLSP":"node ./out/test/languageServers/jedi/lspSetup.js && cross-env CODE_TESTS_WORKSPACE=src/test VSC_PYTHON_CI_TEST_GREP='Language Server:' node ./out/test/testBootstrap.js ./out/test/standardTest.js && node ./out/test/languageServers/jedi/lspTeardown.js","testMultiWorkspace":"node ./out/test/testBootstrap.js ./out/test/multiRootTest.js","testPerformance":"node ./out/test/testBootstrap.js ./out/test/performanceTest.js","testSmoke":"cross-env INSTALL_JUPYTER_EXTENSION=true \"node ./out/test/smokeTest.js\"","testInsiders":"cross-env VSC_PYTHON_CI_TEST_VSC_CHANNEL=insiders INSTALL_PYLANCE_EXTENSION=true TEST_FILES_SUFFIX=insiders.test CODE_TESTS_WORKSPACE=src/testMultiRootWkspc/smokeTests \"node ./out/test/standardTest.js\"","lint-staged":"node gulpfile.js","lint":"eslint --ext .ts,.js src build pythonExtensionApi","lint-fix":"eslint --fix --ext .ts,.js src build pythonExtensionApi gulpfile.js","format-check":"prettier --check 'src/**/*.ts' 'build/**/*.js' '.github/**/*.yml' gulpfile.js","format-fix":"prettier --write 'src/**/*.ts' 'build/**/*.js' '.github/**/*.yml' gulpfile.js","clean":"gulp clean","addExtensionPackDependencies":"gulp addExtensionPackDependencies","updateBuildNumber":"gulp updateBuildNumber","verifyBundle":"gulp verifyBundle","webpack":"webpack"},"dependencies":{"@iarna/toml":"^2.2.5","@vscode/extension-telemetry":"^0.8.4","arch":"^2.1.0","fs-extra":"^11.2.0","glob":"^7.2.0","hash.js":"^1.1.7","iconv-lite":"^0.6.3","inversify":"^6.0.2","jsonc-parser":"^3.0.0","lodash":"^4.17.21","minimatch":"^5.0.1","named-js-regexp":"^1.3.3","node-stream-zip":"^1.6.0","reflect-metadata":"^0.1.12","rxjs":"^6.5.4","rxjs-compat":"^6.5.4","semver":"^7.5.2","stack-trace":"0.0.10","sudo-prompt":"^9.2.1","tmp":"^0.0.33","uint64be":"^3.0.0","unicode":"^14.0.0","vscode-debugprotocol":"^1.28.0","vscode-jsonrpc":"^9.0.0-next.5","vscode-languageclient":"^10.0.0-next.12","vscode-languageserver-protocol":"^3.17.6-next.10","vscode-tas-client":"^0.1.84","which":"^2.0.2","winreg":"^1.2.4","xml2js":"^0.5.0"},"devDependencies":{"@istanbuljs/nyc-config-typescript":"^1.0.2","@types/bent":"^7.3.0","@types/chai":"^4.1.2","@types/chai-arrays":"^2.0.0","@types/chai-as-promised":"^7.1.0","@types/download":"^8.0.1","@types/fs-extra":"^11.0.4","@types/glob":"^7.2.0","@types/lodash":"^4.14.104","@types/mocha":"^9.1.0","@types/node":"^22.5.0","@types/semver":"^5.5.0","@types/shortid":"^0.0.29","@types/sinon":"^17.0.3","@types/stack-trace":"0.0.29","@types/tmp":"^0.0.33","@types/vscode":"^1.93.0","@types/which":"^2.0.1","@types/winreg":"^1.2.30","@types/xml2js":"^0.4.2","@typescript-eslint/eslint-plugin":"^6.21.0","@typescript-eslint/parser":"^6.21.0","@vscode/test-electron":"^2.3.8","@vscode/vsce":"^2.27.0","bent":"^7.3.12","chai":"^4.1.2","chai-arrays":"^2.0.0","chai-as-promised":"^7.1.1","copy-webpack-plugin":"^9.1.0","cross-env":"^7.0.3","cross-spawn":"^6.0.5","del":"^6.0.0","download":"^8.0.0","eslint":"^7.2.0","eslint-config-airbnb":"^18.2.0","eslint-config-prettier":"^8.3.0","eslint-plugin-import":"^2.29.1","eslint-plugin-jsx-a11y":"^6.3.1","eslint-plugin-no-only-tests":"^3.3.0","eslint-plugin-react":"^7.20.3","eslint-plugin-react-hooks":"^4.0.0","expose-loader":"^3.1.0","flat":"^5.0.2","get-port":"^5.1.1","gulp":"^5.0.0","gulp-typescript":"^5.0.0","mocha":"^9.2.2","mocha-junit-reporter":"^2.0.2","mocha-multi-reporters":"^1.1.7","node-has-native-dependencies":"^1.0.2","node-loader":"^1.0.2","node-polyfill-webpack-plugin":"^1.1.4","nyc":"^15.0.0","prettier":"^2.0.2","rewiremock":"^3.13.0","shortid":"^2.2.8","sinon":"^18.0.0","source-map-support":"^0.5.12","ts-loader":"^9.2.8","ts-mockito":"^2.5.0","ts-node":"^10.7.0","tsconfig-paths-webpack-plugin":"^3.2.0","typemoq":"^2.1.0","typescript":"~5.2","uuid":"^8.3.2","webpack":"^5.76.0","webpack-bundle-analyzer":"^4.5.0","webpack-cli":"^4.9.2","webpack-fix-default-import-plugin":"^1.0.3","webpack-merge":"^5.8.0","webpack-node-externals":"^3.0.0","webpack-require-from":"^1.8.6","worker-loader":"^3.0.8","yargs":"^15.3.1"},"extensionPack":["ms-python.vscode-pylance","ms-python.debugpy"]},"location":{"$mid":1,"path":"/Users/andytran/.vscode/extensions/ms-python.python-2024.20.0-darwin-arm64","scheme":"file"},"isBuiltin":false,"targetPlatform":"darwin-arm64","publisherDisplayName":"Microsoft","metadata":{"installedTimestamp":1733083310800,"pinned":false,"source":"gallery","id":"f1f59ae4-9318-4f3c-a9b5-81b2eaa5f8a5","publisherId":"998b010b-e2af-44a5-a6cd-0b5fd3b9b6f8","publisherDisplayName":"Microsoft","targetPlatform":"darwin-arm64","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"ms-vscode.cmake-tools","uuid":"7c889349-8749-43d4-8b5e-08939936d7f4"},"manifest":{"name":"cmake-tools","displayName":"CMake Tools","description":"Extended CMake support in Visual Studio Code","version":"1.19.52","publisher":"ms-vscode","repository":{"type":"git","url":"https://github.com/microsoft/vscode-cmake-tools"},"license":"MIT","bugs":{"url":"https://github.com/microsoft/vscode-cmake-tools/issues"},"homepage":"https://github.com/microsoft/vscode-cmake-tools","keywords":["cmake","tools","build","c++","native","syntaxes"],"engines":{"vscode":"^1.67.0"},"categories":["Other","Debuggers"],"galleryBanner":{"color":"#13578c","theme":"dark"},"icon":"res/logo.png","activationEvents":["onCommand:cmake.activeFolderName","onCommand:cmake.activeFolderPath","onCommand:cmake.activeConfigurePresetName","onCommand:cmake.activeBuildPresetName","onCommand:cmake.activeTestPresetName","onCommand:cmake.activePackagePresetName","onCommand:cmake.activeWorkflowPresetName","onCommand:cmake.buildTargetName","onCommand:cmake.launchTargetPath","onCommand:cmake.launchTargetDirectory","onCommand:cmake.launchTargetFilename","onCommand:cmake.getLaunchTargetPath","onCommand:cmake.getLaunchTargetDirectory","onCommand:cmake.getLaunchTargetFilename","onCommand:cmake.buildType","onCommand:cmake.buildDirectory","onCommand:cmake.executableTargets","onCommand:cmake.buildKit","onCommand:cmake.tasksBuildCommand","onDebugResolve:cmake","onDebugInitialConfigurations","onDebugDynamicConfigurations:cmake","workspaceContains:CMakeLists.txt","workspaceContains:*/CMakeLists.txt","workspaceContains:*/*/CMakeLists.txt","workspaceContains:*/*/*/CMakeLists.txt","workspaceContains:.vscode/cmake-kits.json","onFileSystem:cmake-tools-schema"],"main":"./dist/main","contributes":{"commands":[{"command":"cmake.openCMakePresets","title":"Open CMakePresets.json","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.addConfigurePreset","title":"Add Configure Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.addBuildPreset","title":"Add Build Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.addTestPreset","title":"Add Test Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.addPackagePreset","title":"Add Package Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.addWorkflowPreset","title":"Add Workflow Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.selectConfigurePreset","title":"Select Configure Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.projectStatus.viewConfigureSettings","title":"View the settings overriding your Configure Preset","when":"cmake:enabelFullFeatureSet && useCMakePresets","category":"CMake","icon":"$(settings-gear)"},{"command":"cmake.projectStatus.selectConfigurePreset","title":"Select Configure Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake","icon":"$(edit)"},{"command":"cmake.selectBuildPreset","title":"Select Build Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.projectStatus.viewBuildSettings","title":"View the settings overriding your Build Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake","icon":"$(settings-gear)"},{"command":"cmake.projectStatus.selectBuildPreset","title":"Select Build Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake","icon":"$(edit)"},{"command":"cmake.projectStatus.viewTestSettings","title":"View the settings overriding your Test Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake","icon":"$(settings-gear)"},{"command":"cmake.projectStatus.viewPackageSettings","title":"View the settings overriding your Package Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake","icon":"$(settings-gear)"},{"command":"cmake.selectTestPreset","title":"Select Test Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.projectStatus.selectTestPreset","title":"Select Test Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake","icon":"$(edit)"},{"command":"cmake.projectStatus.setTestTarget","title":"Set Test Target","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake","icon":"$(edit)"},{"command":"cmake.selectPackagePreset","title":"Select Package Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.projectStatus.selectPackagePreset","title":"Select Package Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake","icon":"$(edit)"},{"command":"cmake.selectWorkflowPreset","title":"Select Workflow Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.projectStatus.selectWorkflowPreset","title":"Select Workflow Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake","icon":"$(edit)"},{"command":"cmake.viewLog","title":"Open the CMake Tools Log File","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.logDiagnostics","title":"Log Diagnostics","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.selectActiveFolder","title":"Select Active Folder","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.projectStatus.selectActiveProject","title":"Select Active Folder","when":"cmake:enableFullFeatureSet","category":"CMake","icon":"$(edit)"},{"command":"cmake.outline.selectWorkspace","when":"cmake:enableFullFeatureSet","title":"Select Active Folder","icon":"$(gear)"},{"command":"cmake.editKits","title":"Edit User-Local CMake Kits","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.scanForKits","title":"Scan for Kits","when":"cmake:enableFullFeatureSet && !useCMakePresets","category":"CMake"},{"command":"cmake.scanForCompilers","title":"Scan for Compilers","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.selectKit","title":"Select a Kit","when":"cmake:enableFullFeatureSet && !useCMakePresets","category":"CMake"},{"command":"cmake.projectStatus.selectKit","title":"Select a Kit","when":"cmake:enableFullFeatureSet","category":"CMake","icon":"$(edit)"},{"command":"cmake.setVariant","title":"Select Variant","when":"cmake:enableFullFeatureSet && !useCMakePresets","category":"CMake"},{"command":"cmake.projectStatus.setVariant","title":"Select Variant","when":"cmake:enableFullFeatureSet && !useCMakePresets","category":"CMake","icon":"$(edit)"},{"command":"cmake.setVariantAll","title":"Select Variant for All Projects","when":"cmake:enableFullFeatureSet && !useCMakePresets","category":"CMake"},{"command":"cmake.configure","title":"Configure","category":"CMake"},{"command":"cmake.configureWithDebugger","title":"Configure with CMake Debugger","category":"CMake","enablement":"cmake:cmakeDebuggerAvailable"},{"command":"cmake.outline.configure","title":"Configure","icon":{"dark":"res/dark/configure-icon.svg","light":"res/light/configure-icon.svg"}},{"command":"cmake.projectStatus.configure","title":"Configure","icon":{"dark":"res/dark/configure-icon.svg","light":"res/light/configure-icon.svg"},"when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.outline.configureWithDebugger","title":"Configure with CMake Debugger","icon":"$(debug)","enablement":"cmake:cmakeDebuggerAvailable"},{"command":"cmake.showConfigureCommand","title":"Show Configure Command","category":"CMake"},{"command":"cmake.configureAll","title":"Configure All Projects","category":"CMake"},{"command":"cmake.configureAllWithDebugger","title":"Configure All Projects with CMake Debugger","category":"CMake","enablement":"cmake:cmakeDebuggerAvailable"},{"command":"cmake.outline.configureAll","title":"Configure All Projects","icon":{"dark":"res/dark/configure-icon.svg","light":"res/light/configure-icon.svg"}},{"command":"cmake.outline.configureAllWithDebugger","title":"Configure All Projects with CMake Debugger","icon":"$(debug)","enablement":"cmake:cmakeDebuggerAvailable"},{"command":"cmake.build","title":"Build","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.outline.build","title":"Build","when":"cmake:enableFullFeatureSet","icon":{"dark":"res/dark/build-icon.svg","light":"res/light/build-icon.svg"}},{"command":"cmake.projectStatus.build","title":"Build","when":"cmake:enableFullFeatureSet","icon":{"dark":"res/dark/build-icon.svg","light":"res/light/build-icon.svg"}},{"command":"cmake.outline.buildTarget","title":"Build","when":"cmake:enableFullFeatureSet","icon":{"dark":"res/dark/build-icon.svg","light":"res/light/build-icon.svg"}},{"command":"cmake.showBuildCommand","title":"Show Build Command","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.buildAll","title":"Build All Projects","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.outline.buildAll","title":"Build All Projects","when":"cmake:enableFullFeatureSet","icon":{"dark":"res/dark/build-icon.svg","light":"res/light/build-icon.svg"}},{"command":"cmake.compileFile","title":"Compile Active File","category":"CMake","when":"cmake:enableFullFeatureSet","icon":{"dark":"res/dark/build-icon.svg","light":"res/light/build-icon.svg"}},{"command":"cmake.outline.compileFile","title":"Compile File","when":"cmake:enableFullFeatureSet","icon":{"dark":"res/dark/build-icon.svg","light":"res/light/build-icon.svg"}},{"command":"cmake.install","title":"Install","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.installAll","title":"Install All Projects","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.buildWithTarget","title":"Build Target","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.setDefaultTarget","title":"Set Build Target","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.outline.setDefaultTarget","when":"cmake:enableFullFeatureSet","title":"Set as Build Target"},{"command":"cmake.projectStatus.setDefaultTarget","title":"Set Build Target","when":"cmake:enableFullFeatureSet","category":"CMake","icon":"$(edit)"},{"command":"cmake.cleanConfigure","title":"Delete Cache and Reconfigure","category":"CMake"},{"command":"cmake.outline.cleanConfigure","title":"Clean Reconfigure"},{"command":"cmake.projectStatus.cleanConfigure","title":"Delete Cache and Reconfigure","when":"cmake:enableFullFeatureSet","category":"CMake","icon":{"dark":"res/dark/clean-configure-icon.svg","light":"res/light/clean-configure-icon.svg"}},{"command":"cmake.projectStatus.openSettings","title":"Open CMake Tools Extension Settings","when":"cmake:enableFullFeatureSet","category":"CMake","icon":{"dark":"res/dark/settings-icon.svg","light":"res/light/settings-icon.svg"}},{"command":"cmake.projectStatus.openVisibilitySettings","title":"Open Visibility Settings","when":"cmake:enabelFullFeatureSet","category":"CMake","icon":{"dark":"res/dark/json-icon.svg","light":"res/light/json-icon.svg"}},{"command":"cmake.cleanConfigureWithDebugger","title":"Delete Cache and Reconfigure with CMake Debugger","category":"CMake","enablement":"cmake:cmakeDebuggerAvailable"},{"command":"cmake.outline.cleanConfigureWithDebugger","title":"Clean Reconfigure with CMake Debugger","enablement":"cmake:cmakeDebuggerAvailable"},{"command":"cmake.cleanConfigureAll","title":"Delete Cache and Reconfigure All Projects","category":"CMake"},{"command":"cmake.outline.cleanConfigureAll","title":"Clean Reconfigure All Projects"},{"command":"cmake.cleanConfigureAllWithDebugger","title":"Delete Cache and Reconfigure All Projects with CMake Debugger","category":"CMake","enablement":"cmake:cmakeDebuggerAvailable"},{"command":"cmake.outline.cleanConfigureAllWithDebugger","title":"Clean Reconfigure All Projects with CMake Debugger","enablement":"cmake:cmakeDebuggerAvailable"},{"command":"cmake.clean","title":"Clean","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.outline.clean","when":"cmake:enableFullFeatureSet","title":"Clean","icon":{"dark":"res/dark/clean-icon.svg","light":"res/light/clean-icon.svg"}},{"command":"cmake.cleanAll","title":"Clean All Projects","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.outline.cleanAll","when":"cmake:enableFullFeatureSet","title":"Clean All Projects"},{"command":"cmake.cleanRebuild","title":"Clean Rebuild","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.outline.cleanRebuild","when":"cmake:enableFullFeatureSet","title":"Clean Rebuild"},{"command":"cmake.cleanRebuildAll","title":"Clean Rebuild All Projects","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.outline.cleanRebuildAll","when":"cmake:enableFullFeatureSet","title":"Clean Rebuild All Projects"},{"command":"cmake.editCacheUI","when":"cmake:enableFullFeatureSet","title":"Edit CMake Cache (UI)","category":"CMake"},{"command":"cmake.outline.editCacheUI","when":"cmake:enableFullFeatureSet","title":"Edit CMake Cache (UI)"},{"command":"cmake.ctest","title":"Run Tests","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.projectStatus.ctest","title":"Run Tests","when":"cmake:enableFullFeatureSet","icon":"$(beaker)","category":"CMake"},{"command":"cmake.ctestAll","title":"Run Tests for All Projects","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.revealTestExplorer","title":"Reveal Test Explorer","when":"cmake:enableFullFeatureSet && cmake:testExplorerIntegrationEnabled","category":"CMake"},{"command":"cmake.refreshTests","title":"Refresh Tests","when":"cmake:enableFullFeatureSet && cmake:testExplorerIntegrationEnabled","category":"CMake"},{"command":"cmake.refreshTestsAll","title":"Refresh Tests for All Projects","when":"cmake:enableFullFeatureSet && cmake:testExplorerIntegrationEnabled","category":"CMake"},{"command":"cmake.cpack","title":"Run CPack","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.projectStatus.cpack","title":"Run CPack","when":"cmake:enableFullFeatureSet && useCMakePresets","icon":"$(package)","category":"CMake"},{"command":"cmake.workflow","title":"Run Workflow","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.projectStatus.workflow","title":"Run Workflow","when":"cmake:enableFullFeatureSet && useCMakePresets","icon":"$(run)","category":"CMake"},{"command":"cmake.cpackAll","title":"Run CPack for All Projects","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.workflowAll","title":"Run Workflow for All Projects","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.editCache","title":"Edit CMake Cache","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.quickStart","title":"Quick Start","category":"CMake"},{"command":"cmake.debugTarget","title":"Debug","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.outline.debugTarget","when":"cmake:enableFullFeatureSet","title":"Debug"},{"command":"cmake.projectStatus.debugTarget","when":"cmake:enableFullFeatureSet","title":"Debug","category":"CMake","icon":"$(debug-alt)"},{"command":"cmake.debugTargetAll","title":"Debug All Projects","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.projectStatus.setDebugTarget","when":"cmake:enableFullFeatureSet","title":"Set Launch/Debug Target","icon":"$(edit)"},{"command":"cmake.launchTarget","title":"Run Without Debugging","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.outline.launchTarget","when":"cmake:enableFullFeatureSet","title":"Run in Terminal"},{"command":"cmake.projectStatus.launchTarget","when":"cmake:enableFullFeatureSet","title":"Run in Terminal","category":"CMake","icon":"$(run)"},{"command":"cmake.launchTargetAll","title":"Run All Projects Without Debugging","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.selectLaunchTarget","title":"Set Launch/Debug Target","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.outline.setLaunchTarget","when":"cmake:enableFullFeatureSet","title":"Set as Launch/Debug Target"},{"command":"cmake.projectStatus.setLaunchTarget","when":"cmake:enableFullFeatureSet","title":"Set as Launch/Debug Target","icon":"$(edit)"},{"command":"cmake.stop","title":"Cancel Build","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.projectStatus.stop","title":"Cancel Build","when":"cmake:enableFullFeatureSet","category":"CMake","icon":"$(x)"},{"command":"cmake.outline.stop","title":"Cancel Build","when":"cmake:enableFullFeatureSet","icon":"$(x)"},{"command":"cmake.stopAll","title":"Cancel Build for All Projects","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.outline.stopAll","title":"Cancel Build for All Projects","when":"cmake:enableFullFeatureSet","icon":"$(x)"},{"command":"cmake.resetState","title":"Reset CMake Tools Extension State (For troubleshooting)","category":"CMake"},{"command":"cmake.openSettings","title":"Open CMake Tools Extension Settings","category":"CMake"},{"command":"cmake.outline.runUtilityTarget","when":"cmake:enableFullFeatureSet","title":"Run Utility"},{"command":"cmake.outline.revealInCMakeLists","when":"cmake:enableFullFeatureSet","title":"Open CMakeLists.txt"},{"command":"cmake.projectStatus.update","when":"cmake:enableFullFeatureSet","title":"Refresh the project status","category":"CMake","icon":"$(refresh)"},{"command":"cmake.pinnedCommands.add","when":"cmake:enableFullFeatureSet","title":"Add a CMake command to pin","category":"CMake","icon":"$(add)"},{"command":"cmake.pinnedCommands.remove","when":"cmake:enableFullFeatureSet","title":"Unpin Command","category":"CMake","icon":"$(remove)"},{"command":"cmake.pinnedCommands.run","when":"cmake:enableFullFeatureSet","title":"Run Command","category":"CMake","icon":"$(play-circle)"},{"command":"cmake.appendBuildDirectoryToWorkspace","when":"cmake:enableFullFeatureSet","title":"Append Build Directory to Current Workspace","category":"CMake"}],"taskDefinitions":[{"type":"cmake","required":["command"],"properties":{"label":{"type":"string","description":"The name of the task"},"command":{"type":"string","enum":["build","configure","install","test","clean","cleanRebuild"],"description":"CMake command"},"targets":{"type":"array","items":{"type":"string"},"description":"CMake build targets"},"preset":{"type":"string","description":"CMake preset name. This is a configuration, build or test preset, based on the CMake command"},"options":{"type":"object","description":"Additional command options","properties":{"cwd":{"type":"string","description":"The current working directory of the executed program or script. If omitted Code's current workspace root is used."},"environment":{"type":"object","markdownDescription":"Environment variables in the format of \"name\": \"value\"."}}},"detail":{"type":"string","description":"Additional details of the task"}}}],"breakpoints":[{"language":"cmake"}],"debuggers":[{"type":"cmake","label":"CMake Debugger","languages":["cmake"],"configurationAttributes":{"launch":{"properties":{"scriptPath":{"type":"string","descripttion":"The path to the script to debug.","default":"script.cmake"},"scriptArgs":{"type":"array","items":{"type":"string"},"default":[],"description":"Arguments for the script to debug."},"scriptEnv":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","description":"Name"},"value":{"type":"string","description":"Value"}}},"default":[],"description":"Environment for the script to use."},"dapLog":{"type":"string","description":"Where the debugger DAP log should be logged.","default":""},"pipeName":{"type":"string","description":"Name of the pipe (on Windows) or domain socket (on Unix) to use for debugger communication.","default":""},"clean":{"type":"boolean","description":"Clean prior to configuring.","default":false},"configureAll":{"type":"boolean","description":"Configure for all projects.","default":false},"cmakeDebugType":{"type":"string","enum":["configure","external","script"],"description":"The type of the CMake debug session. Available options are: \"configure\", \"external\", \"script\"."}},"required":["cmakeDebugType"],"oneOf":[{"properties":{"cmakeDebugType":{"enum":["script"]},"scriptPath":{"type":"string","description":"The path to the script to debug.","default":""},"scriptArgs":{"type":"array","items":{"type":"string"},"default":[],"description":"Arguments for the script to debug."},"scriptEnv":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","description":"Name"},"value":{"type":"string","description":"Value"}}},"default":[],"description":"Environment for the script to use."},"dapLog":{"type":"string","description":"Where the debugger DAP log should be logged.","default":""}},"required":["scriptPath"]},{"properties":{"cmakeDebugType":{"enum":["configure"]},"clean":{"type":"boolean","description":"Clean prior to configuring.","default":false},"configureAll":{"type":"boolean","description":"Configure for all projects.","default":false},"dapLog":{"type":"string","description":"Where the debugger DAP log should be logged.","default":""}}},{"properties":{"cmakeDebugType":{"enum":["external"]}},"required":["pipeName"]}]}},"initialConfigurations":[],"configurationSnippets":[{"label":"CMake: Configure","description":"Debug a CMake project configuration","body":{"type":"cmake","request":"launch","name":"CMake: Configure project","cmakeDebugType":"configure","clean":false,"configureAll":false}},{"label":"CMake: Script","description":"Debug a CMake script","body":{"type":"cmake","request":"launch","name":"CMake: Script debugging","cmakeDebugType":"script","scriptPath":"^\"\\${workspaceFolder}/<...>.cmake\""}},{"label":"CMake: External","description":"Connect to an externally launched CMake invocation","body":{"type":"cmake","request":"launch","name":"CMake: Externally launched","cmakeDebugType":"external","pipeName":"<...>"}}]}],"menus":{"commandPalette":[{"command":"cmake.openCMakePresets","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.addConfigurePreset","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.addBuildPreset","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.addTestPreset","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.addPackagePreset","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.addWorkflowPreset","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.selectConfigurePreset","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.selectBuildPreset","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.selectTestPreset","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.selectPackagePreset","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.selectWorkflowPreset","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.viewLog","when":"cmake:enableFullFeatureSet"},{"command":"cmake.configure"},{"command":"cmake.configureWithDebugger","when":"cmake:cmakeDebuggerAvailable"},{"command":"cmake.showConfigureCommand"},{"command":"cmake.scanForKits","when":"cmake:enableFullFeatureSet && !useCMakePresets"},{"command":"cmake.scanForCompilers","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.selectKit","when":"cmake:enableFullFeatureSet && !useCMakePresets"},{"command":"cmake.editKits","when":"cmake:enableFullFeatureSet && !useCMakePresets"},{"command":"cmake.quickStart"},{"command":"cmake.selectActiveFolder","when":"cmake:enableFullFeatureSet"},{"command":"cmake.resetState"},{"command":"cmake.openSettings"},{"command":"cmake.configureAll","when":"cmake:multiProject"},{"command":"cmake.configureAllWithDebugger","when":"cmake:multiProject && cmake:cmakeDebuggerAvailable"},{"command":"cmake.build","when":"cmake:enableFullFeatureSet"},{"command":"cmake.showBuildCommand","when":"cmake:enableFullFeatureSet"},{"command":"cmake.buildAll","when":"cmake:multiProject && cmake:enableFullFeatureSet"},{"command":"cmake.install","when":"cmake:enableFullFeatureSet"},{"command":"cmake.installAll","when":"cmake:multiProject && cmake:enableFullFeatureSet"},{"command":"cmake.buildWithTarget","when":"cmake:enableFullFeatureSet"},{"command":"cmake.compileFile","when":"cmake:enableFullFeatureSet"},{"command":"cmake.setVariant","when":"cmake:enableFullFeatureSet && !useCMakePresets"},{"command":"cmake.setVariantAll","when":"cmake:multiProject && cmake:enableFullFeatureSet && !useCMakePresets"},{"command":"cmake.setDefaultTarget","when":"cmake:enableFullFeatureSet"},{"command":"cmake.cleanConfigure"},{"command":"cmake.cleanConfigureAll","when":"cmake:multiProject"},{"command":"cmake.cleanConfigureWithDebugger","when":"cmake:cmakeDebuggerAvailable"},{"command":"cmake.cleanConfigureAllWithDebugger","when":"cmake:multiProject && cmake:cmakeDebuggerAvailable"},{"command":"cmake.clean","when":"cmake:enableFullFeatureSet"},{"command":"cmake.cleanAll","when":"cmake:multiProject && cmake:enableFullFeatureSet"},{"command":"cmake.cleanRebuild","when":"cmake:enableFullFeatureSet"},{"command":"cmake.cleanRebuildAll","when":"cmake:multiProject && cmake:enableFullFeatureSet"},{"command":"cmake.editCacheUI","when":"cmake:enableFullFeatureSet"},{"command":"cmake.ctest","when":"cmake:enableFullFeatureSet"},{"command":"cmake.cpack","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.workflow","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.ctestAll","when":"cmake:multiProject && cmake:enableFullFeatureSet"},{"command":"cmake.cpackAll","when":"cmake:multiProject && cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.workflowAll","when":"cmake:multiProject && cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.revealTestExplorer","when":"cmake:enableFullFeatureSet && cmake:testExplorerIntegrationEnabled"},{"command":"cmake.refreshTests","when":"cmake:enableFullFeatureSet && cmake:testExplorerIntegrationEnabled"},{"command":"cmake.refreshTestsAll","when":"cmake:multiProject && cmake:enableFullFeatureSet && cmake:testExplorerIntegrationEnabled"},{"command":"cmake.editCache","when":"cmake:enableFullFeatureSet"},{"command":"cmake.debugTarget","when":"!cmake:hideDebugCommand && cmake:enableFullFeatureSet"},{"command":"cmake.debugTargetAll","when":"cmake:multiProject && !cmake:hideDebugCommand && cmake:enableFullFeatureSet"},{"command":"cmake.launchTarget","when":"!cmake:hideLaunchCommand && cmake:enableFullFeatureSet"},{"command":"cmake.launchTargetAll","when":"cmake:multiProject && !cmake:hideLaunchCommand && cmake:enableFullFeatureSet"},{"command":"cmake.selectLaunchTarget","when":"cmake:enableFullFeatureSet"},{"command":"cmake.stop","when":"cmake:enableFullFeatureSet"},{"command":"cmake.stopAll","when":"cmake:multiProject && cmake:enableFullFeatureSet"},{"command":"cmake.logDiagnostics","when":"cmake:enableFullFeatureSet"},{"command":"cmake.outline.configure","when":"never"},{"command":"cmake.outline.configureAll","when":"never"},{"command":"cmake.outline.configureWithDebugger","when":"never"},{"command":"cmake.outline.configureAllWithDebugger","when":"never"},{"command":"cmake.outline.build","when":"never"},{"command":"cmake.outline.buildAll","when":"never"},{"command":"cmake.outline.compileFile","when":"never"},{"command":"cmake.outline.selectWorkspace","when":"never"},{"command":"cmake.outline.cleanConfigure","when":"never"},{"command":"cmake.outline.cleanConfigureAll","when":"never"},{"command":"cmake.outline.cleanConfigureWithDebugger","when":"never"},{"command":"cmake.outline.cleanConfigureAllWithDebugger","when":"never"},{"command":"cmake.outline.clean","when":"never"},{"command":"cmake.outline.cleanAll","when":"never"},{"command":"cmake.outline.cleanRebuild","when":"never"},{"command":"cmake.outline.cleanRebuildAll","when":"never"},{"command":"cmake.outline.editCacheUI","when":"never"},{"command":"cmake.outline.stop","when":"never"},{"command":"cmake.outline.stopAll","when":"never"},{"command":"cmake.outline.buildTarget","when":"never"},{"command":"cmake.outline.runUtilityTarget","when":"never"},{"command":"cmake.outline.debugTarget","when":"never"},{"command":"cmake.outline.launchTarget","when":"never"},{"command":"cmake.outline.setDefaultTarget","when":"never"},{"command":"cmake.outline.setLaunchTarget","when":"never"},{"command":"cmake.outline.revealInCMakeLists","when":"never"},{"command":"cmake.projectStatus.update","when":"never"},{"command":"cmake.pinnedCommands.add","when":"never"},{"command":"cmake.pinnedCommands.remove","when":"never"},{"command":"cmake.pinnedCommands.run","when":"never"},{"command":"cmake.projectStatus.stop","when":"never"},{"command":"cmake.projectStatus.selectKit","when":"never"},{"command":"cmake.projectStatus.configure","when":"never"},{"command":"cmake.projectStatus.cleanConfigure","when":"never"},{"command":"cmake.projectStatus.openSettings","when":"never"},{"command":"cmake.projectStatus.openVisibilitySettings","when":"never"},{"command":"cmake.projectStatus.setVariant","when":"never"},{"command":"cmake.projectStatus.selectConfigurePreset","when":"never"},{"command":"cmake.projectStatus.viewConfigureSettings","when":"never"},{"command":"cmake.projectStatus.build","when":"never"},{"command":"cmake.projectStatus.viewBuildSettings","when":"never"},{"command":"cmake.projectStatus.setDefaultTarget","when":"never"},{"command":"cmake.projectStatus.selectBuildPreset","when":"never"},{"command":"cmake.projectStatus.viewTestSettings","when":"never"},{"command":"cmake.projectStatus.viewPackageSettings","when":"never"},{"command":"cmake.projectStatus.selectPackagePreset","when":"never"},{"command":"cmake.projectStatus.selectWorkflowPreset","when":"never"},{"command":"cmake.projectStatus.ctest","when":"never"},{"command":"cmake.projectStatus.cpack","when":"never"},{"command":"cmake.projectStatus.workflow","when":"never"},{"command":"cmake.projectStatus.debugTarget","when":"never"},{"command":"cmake.projectStatus.launchTarget","when":"never"},{"command":"cmake.projectStatus.setDebugTarget","when":"never"},{"command":"cmake.projectStatus.setLaunchTarget","when":"never"},{"command":"cmake.projectStatus.selectActiveProject","when":"never"},{"command":"cmake.projectStatus.selectTestPreset","when":"never"},{"command":"cmake.projectStatus.setTestTarget","when":"never"}],"view/title":[{"command":"cmake.projectStatus.update","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet","group":"navigation@1"},{"command":"cmake.projectStatus.cleanConfigure","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet","group":"navigation@2"},{"command":"cmake.projectStatus.stop","when":"view == cmake.projectStatus && cmake:isBuilding && cmake:enableFullFeatureSet","group":"navigation@3"},{"command":"cmake.projectStatus.openVisibilitySettings","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet","group":"navigation@4"},{"command":"cmake.projectStatus.openSettings","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet","group":"navigation@4"},{"command":"cmake.outline.configureAll","when":"view == cmake.outline && !cmake:isBuilding","group":"navigation@1"},{"command":"cmake.outline.configureAllWithDebugger","when":"view == cmake.outline && !cmake:isBuilding && cmake:cmakeDebuggerAvailable","group":"navigation@2"},{"command":"cmake.outline.buildAll","when":"view == cmake.outline && !cmake:isBuilding && cmake:enableFullFeatureSet","group":"navigation@3"},{"command":"cmake.outline.stopAll","when":"view == cmake.outline && cmake:isBuilding && cmake:enableFullFeatureSet","group":"navigation@4"},{"command":"cmake.outline.cleanAll","when":"view == cmake.outline && cmake:enableFullFeatureSet","group":"1_cmakeOutline"},{"command":"cmake.outline.cleanConfigureAll","when":"view == cmake.outline","group":"1_cmakeOutline"},{"command":"cmake.outline.cleanConfigureAllWithDebugger","when":"view == cmake.outline && cmake:cmakeDebuggerAvailable","group":"1_cmakeOutline"},{"command":"cmake.outline.cleanRebuildAll","when":"view == cmake.outline && cmake:enableFullFeatureSet","group":"1_cmakeOutline"},{"command":"cmake.outline.editCacheUI","when":"view == cmake.outline && cmake:enableFullFeatureSet","group":"1_cmakeOutline"},{"command":"cmake.pinnedCommands.add","when":"view == cmake.pinnedCommands && cmake:enableFullFeatureSet","group":"navigation@1"}],"view/item/context":[{"command":"cmake.projectStatus.stop","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'stop'","group":"inline"},{"command":"cmake.projectStatus.selectKit","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'kit'","group":"inline"},{"command":"cmake.projectStatus.configure","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'configure'","group":"inline"},{"command":"cmake.projectStatus.cleanConfigure","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'cleanConfigure'","group":"inline"},{"command":"cmake.projectStatus.openSettings","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'openSettings'","group":"inline"},{"command":"cmake.projectStatus.openVisibilitySettings","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'openVisibilitySettings'","group":"inline"},{"command":"cmake.projectStatus.setVariant","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'variant'","group":"inline"},{"command":"cmake.projectStatus.selectConfigurePreset","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem =~ /configPreset/","group":"inline"},{"command":"cmake.projectStatus.viewConfigureSettings","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'configPreset - overrides present'","group":"inline"},{"command":"cmake.projectStatus.build","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'build'","group":"inline"},{"command":"cmake.projectStatus.setDefaultTarget","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'buildTarget'","group":"inline"},{"command":"cmake.projectStatus.selectBuildPreset","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem =~ /buildPreset/","group":"inline"},{"command":"cmake.projectStatus.viewBuildSettings","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'buildPreset - overrides present'","group":"inline"},{"command":"cmake.projectStatus.ctest","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'test'","group":"inline"},{"command":"cmake.projectStatus.cpack","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'package' && useCMakePresets","group":"inline"},{"command":"cmake.projectStatus.workflow","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'workflow' && useCMakePresets","group":"inline"},{"command":"cmake.projectStatus.setTestTarget","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'testTarget'","group":"inline"},{"command":"cmake.projectStatus.selectTestPreset","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem =~ /testPreset/","group":"inline"},{"command":"cmake.projectStatus.viewTestSettings","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'testPreset - overrides present'","group":"inline"},{"command":"cmake.projectStatus.viewPackageSettings","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'packagePreset - overrides present'","group":"inline"},{"command":"cmake.projectStatus.selectPackagePreset","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem =~ /packagePreset/","group":"inline"},{"command":"cmake.projectStatus.selectWorkflowPreset","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'workflowPreset'","group":"inline"},{"command":"cmake.projectStatus.debugTarget","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'debug'","group":"inline"},{"command":"cmake.projectStatus.setDebugTarget","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'debugTarget'","group":"inline"},{"command":"cmake.projectStatus.launchTarget","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'launch'","group":"inline"},{"command":"cmake.projectStatus.setLaunchTarget","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'launchTarget'","group":"inline"},{"command":"cmake.projectStatus.selectActiveProject","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'activeProject'","group":"inline"},{"command":"cmake.outline.buildTarget","when":"view == cmake.outline && cmake:enableFullFeatureSet && viewItem =~ /canBuild=true|canRun=true/","group":"inline"},{"command":"cmake.outline.buildTarget","when":"view == cmake.outline && cmake:enableFullFeatureSet && viewItem =~ /canBuild=true/","group":"1_targetActions@1"},{"command":"cmake.outline.runUtilityTarget","when":"view == cmake.outline && cmake:enableFullFeatureSet && viewItem =~ /canRun=true/","group":"1_targetActions@2"},{"command":"cmake.outline.debugTarget","when":"view == cmake.outline && cmake:enableFullFeatureSet && viewItem =~ /type=EXECUTABLE/","group":"1_targetActions@3"},{"command":"cmake.outline.launchTarget","when":"view == cmake.outline && cmake:enableFullFeatureSet && viewItem =~ /type=EXECUTABLE/","group":"1_targetActions@4"},{"command":"cmake.outline.revealInCMakeLists","when":"view == cmake.outline && cmake:enableFullFeatureSet && viewItem =~ /nodeType=target/","group":"1_targetActions@5"},{"command":"cmake.outline.setDefaultTarget","when":"view == cmake.outline && cmake:enableFullFeatureSet && viewItem =~ /canRun=true|canBuild=true/ && viewItem =~ /isDefault=false/","group":"2_targetState@1"},{"command":"cmake.outline.setLaunchTarget","when":"view == cmake.outline && cmake:enableFullFeatureSet && viewItem =~ /type=EXECUTABLE/ && viewItem =~ /isLaunch=false/","group":"2_targetState@2"},{"command":"cmake.outline.configureAll","when":"view == cmake.outline && viewItem =~ /nodeType=file/ && viewItem =~ /cmakelists=true/","group":"1_fileActions@1"},{"command":"cmake.outline.configureAllWithDebugger","when":"view == cmake.outline && viewItem =~ /nodeType=file/ && viewItem =~ /cmakelists=true/ && cmake:cmakeDebuggerAvailable","group":"1_fileActions@2"},{"command":"cmake.outline.buildAll","when":"cmake:enableFullFeatureSet && view == cmake.outline && viewItem =~ /nodeType=file/ && viewItem =~ /cmakelists=true/","group":"1_fileActions@3"},{"command":"cmake.outline.cleanAll","when":"cmake:enableFullFeatureSet && view == cmake.outline && viewItem =~ /nodeType=file/ && viewItem =~ /cmakelists=true/","group":"1_fileActions@4"},{"command":"cmake.outline.cleanConfigureAll","when":"view == cmake.outline && viewItem =~ /nodeType=file/ && viewItem =~ /cmakelists=true/","group":"1_fileActions@5"},{"command":"cmake.outline.cleanConfigureAllWithDebugger","when":"view == cmake.outline && viewItem =~ /nodeType=file/ && viewItem =~ /cmakelists=true/ && cmake:cmakeDebuggerAvailable","group":"1_fileActions@5"},{"command":"cmake.outline.cleanRebuildAll","when":"cmake:enableFullFeatureSet && view == cmake.outline && viewItem =~ /nodeType=file/ && viewItem =~ /cmakelists=true/","group":"1_fileActions@6"},{"command":"cmake.outline.compileFile","when":"cmake:enableFullFeatureSet && view == cmake.outline && viewItem =~ /nodeType=file/ && viewItem =~ /compilable=true/","group":"1_fileActions@7"},{"command":"cmake.outline.configure","when":"view == cmake.outline && viewItem =~ /nodeType=project/","group":"inline@1"},{"command":"cmake.outline.build","when":"cmake:enableFullFeatureSet && view == cmake.outline && viewItem =~ /nodeType=project/","group":"inline@2"},{"command":"cmake.outline.clean","when":"cmake:enableFullFeatureSet && view == cmake.outline && viewItem =~ /nodeType=project/","group":"inline@3"},{"command":"cmake.outline.compileFile","when":"cmake:enableFullFeatureSet && view == cmake.outline && viewItem =~ /nodeType=file/ && viewItem =~ /compilable=true/","group":"inline"},{"command":"cmake.outline.configure","when":"view == cmake.outline && viewItem =~ /nodeType=file/ && viewItem =~ /cmakelists=true/","group":"inline"},{"command":"cmake.outline.configureWithDebugger","when":"view == cmake.outline && viewItem =~ /nodeType=file/ && viewItem =~ /cmakelists=true/ && cmake:cmakeDebuggerAvailable","group":"inline"},{"command":"cmake.outline.selectWorkspace","when":"cmake:enableFullFeatureSet && view == cmake.outline && viewItem =~ /nodeType=workspace/ && viewItem =~ /selected=false/","group":"inline"},{"command":"cmake.pinnedCommands.remove","when":"view == cmake.pinnedCommands && cmake:enableFullFeatureSet","group":"pinnedCommands@1"},{"command":"cmake.pinnedCommands.run","when":"view == cmake.pinnedCommands && cmake:enableFullFeatureSet","group":"inline"}],"editor/title/context":[{"command":"cmake.compileFile","when":"resourceLangId == cpp && cmake:enableFullFeatureSet"},{"command":"cmake.compileFile","when":"resourceLangId == c && cmake:enableFullFeatureSet"}],"editor/title":[{"command":"cmake.compileFile","when":"resourceLangId == cpp && cmake:enableFullFeatureSet","group":"navigation"},{"command":"cmake.compileFile","when":"resourceLangId == c && cmake:enableFullFeatureSet","group":"navigation"}],"explorer/context":[{"command":"cmake.compileFile","when":"resourceLangId == cpp && cmake:enableFullFeatureSet"},{"command":"cmake.compileFile","when":"resourceLangId == c && cmake:enableFullFeatureSet"},{"command":"cmake.outline.configureAll","when":"resourceFilename == CMakeLists.txt"},{"command":"cmake.outline.configureAllWithDebugger","when":"resourceFilename == CMakeLists.txt && cmake:cmakeDebuggerAvailable"},{"command":"cmake.outline.buildAll","when":"resourceFilename == CMakeLists.txt && cmake:enableFullFeatureSet"},{"command":"cmake.outline.cleanAll","when":"resourceFilename == CMakeLists.txt && cmake:enableFullFeatureSet"},{"command":"cmake.outline.cleanConfigureAll","when":"resourceFilename == CMakeLists.txt"},{"command":"cmake.outline.cleanConfigureAllWithDebugger","when":"resourceFilename == CMakeLists.txt && cmake:cmakeDebuggerAvailable"},{"command":"cmake.outline.cleanRebuildAll","when":"resourceFilename == CMakeLists.txt && cmake:enableFullFeatureSet"}],"touchBar":[{"command":"cmake.quickStart","when":"cmake:enableTouchBar && !cmake:enableFullFeatureSet","group":"CMake:start"},{"command":"cmake.configure","when":"cmake:enableTouchBar.configure && !cmake:isBuilding && !cmake:isConfiguring","group":"CMake:build"},{"command":"cmake.build","alt":"cmake.configure","when":"cmake:enableTouchBar.build && cmake:enableFullFeatureSet && !cmake:isBuilding && !cmake:isConfiguring","group":"CMake:build"},{"command":"cmake.stop","when":"cmake:enableTouchBar.build && cmake:enableFullFeatureSet && cmake:isBuilding","group":"CMake:build"},{"command":"cmake.debugTarget","alt":"cmake.selectLaunchTarget","when":"cmake:enableTouchBar.debug && cmake:enableFullFeatureSet && !cmake:hideDebugCommand","group":"CMake:run"},{"command":"cmake.launchTarget","when":"cmake:enableTouchBar.launch && cmake:enableFullFeatureSet && !cmake:hideLaunchCommand","group":"CMake:run"}]},"configuration":{"type":"object","title":"CMake Tools","properties":{"cmake.autoSelectActiveFolder":{"type":"boolean","default":true,"description":"Select active folder automatically.","scope":"window"},"cmake.cmakePath":{"type":"string","default":"cmake","description":"Name/path of the CMake executable to use.","scope":"resource"},"cmake.buildDirectory":{"type":"string","default":"${workspaceFolder}/build","description":"The directory where CMake build files will go.","scope":"resource"},"cmake.installPrefix":{"type":"string","default":null,"description":"The directory where CMake installed files will go.","scope":"resource"},"cmake.sourceDirectory":{"oneOf":[{"type":"string"},{"type":"array","items":{"type":"string"}}],"description":"Path or array of paths to the CMakeLists.txt root directory/directories.","default":"${workspaceFolder}","scope":"resource"},"cmake.saveBeforeBuild":{"type":"boolean","default":true,"description":"Save open files before building.","scope":"resource"},"cmake.buildBeforeRun":{"type":"boolean","default":true,"description":"Build the target before running it.","scope":"resource"},"cmake.clearOutputBeforeBuild":{"type":"boolean","default":true,"description":"Clear build output before each build.","scope":"resource"},"cmake.configureSettings":{"type":"object","default":{},"additionalProperties":{"oneOf":[{"type":"string"},{"type":"boolean"},{"type":"number"},{"type":"array","items":{"type":"string"}},{"type":"object","properties":{"type":{"type":"string","enum":["","BOOL","STRING","FILEPATH","PATH"]},"value":{}},"additionalProperties":false,"required":["type","value"]}]},"description":"CMake variables to set on the command line. This setting is specific to kits and will not be used for CMake Presets.","scope":"resource"},"cmake.cacheInit":{"oneOf":[{"type":"string","description":"Path to a cache-initializing CMake file."},{"type":"array","description":"List of cache initializer files.","items":{"type":"string","description":"A cache initializing CMake file."}}],"description":"Provide cache-initializing CMake file(s).","scope":"resource"},"cmake.preferredGenerators":{"type":"array","default":[],"description":"The preferred CMake generator(s) to use when configuring (tried in order of listing).","scope":"resource"},"cmake.generator":{"type":"string","default":null,"description":"The CMake generator to use.","scope":"resource"},"cmake.toolset":{"type":"string","default":null,"description":"The CMake toolset to use when configuring.","scope":"resource"},"cmake.platform":{"type":"string","default":null,"description":"The CMake platform to use when configuring.","scope":"resource"},"cmake.configureArgs":{"type":"array","description":"Additional arguments to pass to CMake when configuring. When using CMake Presets, these arguments are temporarily appended to the arguments provided by the active configure preset.","items":{"type":"string","title":"CMake Arguments"},"default":[],"scope":"resource"},"cmake.buildArgs":{"type":"array","description":"Additional arguments to pass to CMake when building. When using CMake Presets, these arguments are temporarily appended to the arguments provided by the active build preset.","items":{"type":"string"},"default":[],"scope":"resource"},"cmake.buildToolArgs":{"type":"array","description":"Additional arguments to pass to the underlying build tool when building. When using CMake Presets, these arguments are temporarily appended to the arguments provided by the active build preset to invoke the build tool.","items":{"type":"string"},"default":[],"scope":"resource"},"cmake.parallelJobs":{"type":"number","default":0,"description":"The number of parallel build jobs. Use zero to automatically detect the number of CPUs. Setting this to 1 will omit the parallelism flag (-j) from the underlying build command, which has a generator-dependent effect on build parallelism.","scope":"resource"},"cmake.ctestPath":{"type":"string","default":null,"description":"Path to CTest executable. If null, will be inferred from cmake.cmakePath (recommended to leave null).","scope":"resource"},"cmake.cpackPath":{"type":"string","default":null,"when":"useCMakePresets == true","description":"Path to CPack executable. If null, will be inferred from cmake.cmakePath (recommended to leave null). Will be ignored when kits are used instead of presets.","scope":"resource"},"cmake.ctest.parallelJobs":{"type":"number","default":0,"markdownDescription":"The number of parallel test jobs. Use zero to use the value of `#cmake.parallelJobs#`. This only applies when `#cmake.ctest.allowParallelJobs#` is set to `true`.","scope":"resource"},"cmake.ctest.allowParallelJobs":{"type":"boolean","default":false,"description":"Allows ctests to be run in parallel, however the result output may be garbled as a result and the Test Explorer may not accurately reflect test progress.","scope":"resource"},"cmake.ctest.testExplorerIntegrationEnabled":{"type":"boolean","default":true,"description":"Whether or not the integration with the test explorer is enabled. This is helpful to disable if you prefer using a different extension for test integration.","scope":"machine-overridable"},"cmake.ctest.testSuiteDelimiter":{"type":"string","default":null,"markdownDescription":"Optional delimiter used to separate test suite names and group tests hierarchically in the Test Explorer. This string is used in a Regular Expression, so some delimiters may need escaping. Examples: `-` ( One delimiter: `-`), `\\.|::` (Two delimiters: `.` or `::`. Note that `.` needs to be escaped.)","scope":"machine-overridable"},"cmake.parseBuildDiagnostics":{"type":"boolean","default":true,"description":"Parse compiler output for warnings and errors.","scope":"resource"},"cmake.enabledOutputParsers":{"type":"array","markdownDescription":"Output parsers to use. Supported parsers `cmake`, `gcc`, `gnuld` for GNULD-style linker output, `msvc` for Microsoft Visual C++, `ghs` for the Green Hills compiler with --no_wrap_diagnostics --brief_diagnostics, and `diab` for the Wind River Diab compiler.","items":{"type":"string","enum":["cmake","gcc","gnuld","msvc","ghs","diab","iar"]},"default":["cmake","gcc","gnuld","msvc","ghs","diab"],"scope":"resource"},"cmake.debugConfig":{"type":"object","description":"The debug configuration to use when debugging a target.","properties":{"symbolSearchPath":{"type":"string","description":"Visual Studio debugger symbol search paths."},"additionalSOLibSearchPath":{"type":"string","description":"Paths for GDB or LLDB to search for .so files."},"externalConsole":{"type":"boolean","description":"Launch an external console for the program."},"console":{"type":"string","enum":["internalConsole","integratedTerminal","externalTerminal","newExternalWindow"],"enumDescriptions":["Output to the VS Code Debug Console. This doesn't support reading console input (ex:`std::cin` or `scanf`).","VS Code's integrated terminal.","Console applications will be launched in an external terminal window. The window will be reused in relaunch scenarios and will not automatically disappear when the application exits.","Console applications will be launched in their own external console window which will end when the application stops. Non-console applications will run without a terminal, and stdout/stderr will be ignored."],"markdownDescription":"Where to launch the debug target. Defaults to `internalConsole` if not defined."},"logging":{"type":"object","description":"Tell what types of messages should be logged to the console.","properties":{"exceptions":{"type":"boolean","default":true},"moduleLoad":{"type":"boolean","default":true},"programOutput":{"type":"boolean","default":true},"engineLogging":{"type":"boolean","default":false},"trace":{"type":"boolean","default":false},"traceResponse":{"type":"boolean","default":false}}},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging."},"args":{"type":"array","description":"Arguments to pass to program command line.","items":{"type":"string"},"default":[]},"cwd":{"type":"string","description":"Set the working directory for the program."},"environment":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","description":"Name of environment variable."},"value":{"type":"string","description":"Value for the environment variable."}}}},"MIMode":{"type":"string","enum":["gdb","lldb"]},"miDebuggerPath":{"type":"string","description":"Path to gdb or lldb debugger."},"stopAtEntry":{"type":"boolean","description":"Stop at the entry point of the target.","default":false},"setupCommands":{"type":"array","description":"Command to set up gdb or lldb.","items":{"type":"object","properties":{"text":{"type":"string","description":"Command to run."},"description":{"type":"string","description":"Description of the command."},"ignoreFailures":{"type":"boolean","default":false}}}},"customLaunchSetupCommands":{"type":"array","description":"Command to set up gdb or lldb.","items":{"type":"object","properties":{"text":{"type":"string","description":"Command to run."},"description":{"type":"string","description":"Description of the command."},"ignoreFailures":{"type":"boolean","default":false}}}},"launchCompleteCommand":{"type":"string"},"dumpPath":{"type":"string"},"coreDumpPath":{"type":"string"}},"scope":"resource"},"cmake.defaultVariants":{"type":"object","$schema":"cmake-tools-schema://schemas/variants-schema.json","description":"Configure the default variant settings.","default":{"buildType":{"default":"debug","description":"The build type.","choices":{"debug":{"short":"Debug","long":"Disable optimizations - include debug information.","buildType":"Debug"},"release":{"short":"Release","long":"Optimize for speed - exclude debug information.","buildType":"Release"},"minsize":{"short":"MinSizeRel","long":"Optimize for smallest binary size - exclude debug information.","buildType":"MinSizeRel"},"reldeb":{"short":"RelWithDebInfo","long":"Optimize for speed - include debug information.","buildType":"RelWithDebInfo"},"unspecified":{"short":"Unspecified","long":"Let CMake pick the default build type.","buildType":"Unspecified"}}}},"scope":"resource"},"cmake.ctestArgs":{"type":"array","items":{"type":"string"},"description":"Additional arguments to pass to CTest. When using CMake Presets, these arguments are temporarily added to the arguments provided by the active test preset.","default":[],"scope":"resource"},"cmake.ctestDefaultArgs":{"type":"array","items":{"type":"string"},"description":"Arguments passed by default to CTest.","default":["-T","test","--output-on-failure"],"scope":"machine-overridable"},"cmake.cpackArgs":{"type":"array","when":"useCMakePresets == true","items":{"type":"string"},"description":"Additional arguments to pass to CPack (only when using presets, not supported for kits). These arguments are temporarily added to the arguments provided by the active package preset.","default":[],"scope":"resource"},"cmake.environment":{"type":"object","default":{},"description":"Environment variables to set when running CMake commands. When using CMake Presets, these are temporarily added to the environment used for CMake commands.","additionalProperties":{"type":"string","description":"Value for the environment variable."},"scope":"resource"},"cmake.configureEnvironment":{"type":"object","default":{},"description":"Environment variables to pass to CMake during configure. When using CMake Presets, these are temporarily added to the environment provided by the active configure preset.","additionalProperties":{"type":"string","description":"Value for the environment variable."},"scope":"resource"},"cmake.buildEnvironment":{"type":"object","default":{},"description":"Environment variables to pass to CMake during build. When using CMake Presets, these are temporarily added to the environment provided by the active build preset.","additionalProperties":{"type":"string","description":"Value for the environment variable."},"scope":"resource"},"cmake.testEnvironment":{"type":"object","default":{},"description":"Environment variables to pass to CTest. When using CMake Presets, these are temporarily added to the environment provided by the active test preset.","additionalProperties":{"type":"string","description":"Value for the environment variable."},"scope":"resource"},"cmake.cpackEnvironment":{"type":"object","default":{},"when":"useCMakePresets == true","description":"Environment variables to set when packaging with CPack (only when using presets, not supported for kits). These are temporarily added to the environment used for CPack runs.","additionalProperties":{"type":"string","description":"Value for the environment variable."},"scope":"resource"},"cmake.mingwSearchDirs":{"type":"array","items":{"type":"string","description":"Path to a directory."},"default":[],"description":"Directories where MinGW may be installed.","scope":"window","markdownDeprecationMessage":"**Deprecated**: Please use `#cmake.additionalCompilerSearchDirs#` instead."},"cmake.additionalCompilerSearchDirs":{"type":"array","items":{"type":"string","description":"Path to a directory."},"default":[],"description":"Additional directories to search for compilers.","scope":"window"},"cmake.emscriptenSearchDirs":{"type":"array","items":{"type":"string","description":"Path to a directory."},"default":[],"description":"Directories where Emscripten may be installed.","scope":"window"},"cmake.mergedCompileCommands":{"type":"string","default":null,"description":"Recursively collect and merge all compile_commands.json found in the cmake.buildDirectory.","scope":"resource"},"cmake.copyCompileCommands":{"type":"string","default":null,"description":"Copy compile_commands.json to this location after a successful configure.","scope":"resource"},"cmake.configureOnOpen":{"type":"boolean","default":true,"description":"Automatically configure CMake project directories when they are opened.","scope":"resource","tags":["experimental"]},"cmake.configureOnEdit":{"type":"boolean","default":true,"description":"Automatically configure CMake project directories when cmake.sourceDirectory or CMakeLists.txt content are saved.","scope":"resource"},"cmake.deleteBuildDirOnCleanConfigure":{"type":"boolean","default":false,"description":"Delete the entire build directory when a clean configure is invoked.","scope":"resource"},"cmake.setBuildTypeOnMultiConfig":{"type":"boolean","default":false,"description":"Set CMAKE_BUILD_TYPE also on multi config generators.","scope":"resource"},"cmake.skipConfigureIfCachePresent":{"type":"boolean","default":null,"description":"Skip over the configure process if cache is present.","scope":"resource"},"cmake.cmakeCommunicationMode":{"type":"string","default":"automatic","enum":["legacy","serverApi","fileApi","automatic"],"description":"The protocol used to communicate between the extension and CMake.","scope":"resource"},"cmake.showSystemKits":{"type":"boolean","default":true,"description":"Include system kits in kit selection.","scope":"resource"},"cmake.ignoreKitEnv":{"type":"boolean","default":false,"description":"Do not use the kit environment variables when running CMake commands.","scope":"resource"},"cmake.buildTask":{"type":"boolean","default":false,"description":"Build using tasks.json instead of internal process.","scope":"resource"},"cmake.outputLogEncoding":{"type":"string","default":"auto","description":"Encoding of the output from external commands (eg.cmake -- build).","scope":"window"},"cmake.enableTraceLogging":{"type":"boolean","default":false,"description":"Enable trace logging to file and console (very noisy).","scope":"window"},"cmake.loggingLevel":{"type":"string","default":"info","description":"Tell what types of messages should be logged to the console.","enum":["trace","debug","info","note","warning","error","fatal"],"scope":"window"},"cmake.touchbar.visibility":{"type":"string","default":"default","description":"Configures how the extension displays the buttons on a MacBook Touch Bar.","enum":["default","hidden"],"enumDescriptions":["Show Touch Bar buttons on supported systems.","Do not show Touch Bar buttons."],"scope":"window"},"cmake.touchbar.advanced":{"type":"object","scope":"window","description":"Configures advanced settings for how the extension displays buttons on a MacBook Touch Bar.","properties":{"build":{"type":"string","default":"default","description":"Configures how the extension displays the buttons on a MacBook Touch Bar.","enum":["default","hidden"],"enumDescriptions":["Show Touch Bar buttons on supported systems.","Do not show Touch Bar buttons."]},"configure":{"type":"string","default":"default","description":"Configures how the extension displays the buttons on a MacBook Touch Bar.","enum":["default","hidden"],"enumDescriptions":["Show Touch Bar buttons on supported systems.","Do not show Touch Bar buttons."]},"debug":{"type":"string","default":"default","description":"Configures how the extension displays the buttons on a MacBook Touch Bar.","enum":["default","hidden"],"enumDescriptions":["Show Touch Bar buttons on supported systems.","Do not show Touch Bar buttons."]},"launch":{"type":"string","default":"default","description":"Configures how the extension displays the buttons on a MacBook Touch Bar.","enum":["default","hidden"],"enumDescriptions":["Show Touch Bar buttons on supported systems.","Do not show Touch Bar buttons."]}}},"cmake.showOptionsMovedNotification":{"type":"boolean","default":true,"description":"Enables the notification regarding the status bar options moving to the Project Status View to show when the extension starts.","scope":"application"},"cmake.showConfigureWithDebuggerNotification":{"type":"boolean","default":true,"description":"Enables the pop-up that asks the user if, upon a failed configure, they want to configure with the CMake Debugger.","scope":"application"},"cmake.showNotAllDocumentsSavedQuestion":{"type":"boolean","default":true,"description":"Enables the pop-up that asks the user if they want to continue the build despite some files possibly not being saved. If not enabled, the build will be continued.","scope":"application"},"cmake.options.statusBarVisibility":{"type":"string","default":"hidden","markdownDescription":"Configures how the extension displays the options in the Status Bar. These settings may be overwritten by the more specific `#cmake.options.advanced.statusBarVisibility#` setting. [More info](https://aka.ms/cmaketoolsoptionsconfiguration).","enum":["visible","compact","icon","hidden"],"scope":"window"},"cmake.options.advanced":{"type":"object","default":{"build":{"statusBarVisibility":"inherit","inheritDefault":"visible"},"launch":{"statusBarVisibility":"inherit","inheritDefault":"visible"},"debug":{"statusBarVisibility":"inherit","inheritDefault":"visible"}},"markdownDescription":"Configures the settings for individual Project Status View and status bar options. These settings may overwrite the more general `#cmake.options.statusBarVisibility#` setting. [More info](https://aka.ms/cmaketoolsoptionsconfiguration).","properties":{"configure":{"type":"object","properties":{"projectStatusVisibility":{"type":"string","description":"Configures how the extension displays this option the Project Status View.","enum":["visible","hidden"],"enumDescriptions":["Show the node in the Project Status View.","Hide the node and its children in the Project Status View."]}}},"configurePreset":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","compact","icon","hidden","inherit"],"markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option's icon only.","Show the status bar option with the text truncated to the length specified in `#cmake.status.advanced.statusBarLength#` (default is 20).","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","compact","icon","hidden"]},"statusBarLength":{"description":"Configures the maximum length of visible text in the Status Bar when set to `compact` mode.","type":"integer","default":20}}},"buildPreset":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","compact","icon","hidden","inherit"],"markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option's icon only.","Show the status bar option with the text truncated to the length specified in `#cmake.status.advanced.statusBarLength#` (default is 20).","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","compact","icon","hidden"]},"statusBarLength":{"description":"Configures the maximum length of visible text in the Status Bar when set to `compact` mode.","type":"integer","default":20}}},"testPreset":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","compact","icon","hidden","inherit"],"markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option's icon only.","Show the status bar option with the text truncated to the length specified in `#cmake.status.advanced.statusBarLength#` (default is 20).","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","compact","icon","hidden"]},"statusBarLength":{"description":"Configures the maximum length of visible text in the Status Bar when set to `compact` mode.","type":"integer","default":20}}},"packagePreset":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","compact","icon","hidden","inherit"],"markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option's icon only.","Show the status bar option with the text truncated to the length specified in `#cmake.status.advanced.statusBarLength#` (default is 20).","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","compact","icon","hidden"]},"statusBarLength":{"description":"Configures the maximum length of visible text in the Status Bar when set to `compact` mode.","type":"integer","default":20}}},"workflowPreset":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","compact","icon","hidden","inherit"],"markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option's icon only.","Show the status bar option with the text truncated to the length specified in `#cmake.status.advanced.statusBarLength#` (default is 20).","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","compact","icon","hidden"]},"statusBarLength":{"description":"Configures the maximum length of visible text in the Status Bar when set to `compact` mode.","type":"integer","default":20}}},"kit":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","compact","icon","hidden","inherit"],"markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option's icon only.","Show the status bar option with the text truncated to the length specified in `#cmake.status.advanced.statusBarLength#` (default is 20).","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","compact","icon","hidden"]},"statusBarLength":{"description":"Configures the maximum length of visible text in the Status Bar when set to `compact` mode.","type":"integer","default":20}}},"variant":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","compact","icon","hidden","inherit"],"markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option's icon only.","Show the status bar option with the status message removed.","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","compact","icon","hidden"]}}},"folder":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","compact","icon","hidden","inherit"],"markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option's icon only.","Show the status bar option with the text truncated to the length specified in `#cmake.status.advanced.statusBarLength#` (default is 20).","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","compact","icon","hidden"]},"statusBarLength":{"description":"Configures the maximum length of visible text in the Status Bar when set to `compact` mode.","type":"integer","default":20},"projectStatusVisibility":{"type":"string","description":"Configures how the extension displays this option the Project Status View.","enum":["visible","hidden"],"enumDescriptions":["Show the node in the Project Status View.","Hide the node and its children in the Project Status View."]}}},"buildTarget":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","compact","hidden","inherit"],"markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option with the text truncated to the length specified in `#cmake.status.advanced.statusBarLength#` (default is 20).","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","compact","hidden"]},"statusBarLength":{"description":"Configures the maximum length of visible text in the Status Bar when set to `compact` mode.","type":"integer","default":20}}},"build":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","icon","hidden","inherit"],"markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option's icon only.","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","icon","hidden"]},"projectStatusVisibility":{"type":"string","description":"Configures how the extension displays this option the Project Status View.","enum":["visible","hidden"],"enumDescriptions":["Show the node in the Project Status View.","Hide the node and its children in the Project Status View."]}}},"launchTarget":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","compact","hidden","inherit"],"markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option with the text truncated to the length specified in `#cmake.status.advanced.statusBarLength#` (default is 20).","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","compact","hidden"]},"statusBarLength":{"description":"Configures the maximum length of visible text in the Status Bar when set to `compact` mode.","type":"integer","default":20}}},"debug":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","icon","hidden","inherit"],"markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option's icon only.","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","icon","hidden"]},"projectStatusVisibility":{"type":"string","description":"Configures how the extension displays this option the Project Status View.","enum":["visible","hidden"],"enumDescriptions":["Show the node in the Project Status View.","Hide the node and its children in the Project Status View."]}}},"launch":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","icon","hidden","inherit"],"markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option's icon only.","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","icon","hidden"]},"projectStatusVisibility":{"type":"string","description":"Configures how the extension displays this option the Project Status View.","enum":["visible","hidden"],"enumDescriptions":["Show the node in the Project Status View.","Hide the node and its children in the Project Status View."]}}},"ctest":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","compact","icon","hidden","inherit"],"markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option's icon only.","Show the status bar option with the text truncated to the length specified in `#cmake.status.advanced.statusBarLength#` (default is 20).","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","compact","icon","hidden"]},"color":{"type":"boolean","default":false,"description":"Enables a change in color for this option depending on test results."},"statusBarLength":{"description":"Configures the maximum length of visible text in the Status Bar when set to `compact` mode.","type":"integer","default":20},"projectStatusVisibility":{"type":"string","description":"Configures how the extension displays this option the Project Status View.","enum":["visible","hidden"],"enumDescriptions":["Show the node in the Project Status View.","Hide the node and its children in the Project Status View."]}}},"cpack":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","compact","icon","hidden","inherit"],"default":"hidden","markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option's icon only.","Show the status bar option with the text truncated to the length specified in `#cmake.status.advanced.statusBarLength#` (default is 20).","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","compact","icon","hidden"]},"color":{"type":"boolean","default":false,"description":"Enables a change in color for this option depending on cpack results."},"statusBarLength":{"description":"Configures the maximum length of visible text in the Status Bar when set to `compact` mode.","type":"integer","default":20},"projectStatusVisibility":{"type":"string","description":"Configures how the extension displays this option the Project Status View.","enum":["visible","hidden"],"enumDescriptions":["Show the node in the Project Status View.","Hide the node and its children in the Project Status View."]}}},"workflow":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","compact","icon","hidden","inherit"],"default":"hidden","markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option's icon only.","Show the status bar option with the text truncated to the length specified in `#cmake.status.advanced.statusBarLength#` (default is 20).","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","compact","icon","hidden"]},"color":{"type":"boolean","default":false,"description":"Enables a change in color for this option depending on workflow run results."},"statusBarLength":{"description":"Configures the maximum length of visible text in the Status Bar when set to `compact` mode.","type":"integer","default":20},"projectStatusVisibility":{"type":"string","description":"Configures how the extension displays this option the Project Status View.","enum":["visible","hidden"],"enumDescriptions":["Show the node in the Project Status View.","Hide the node and its children in the Project Status View."]}}}}},"cmake.additionalKits":{"type":"array","default":[],"description":"Array of paths to custom kit files.","items":{"type":"string"},"scope":"resource"},"cmake.revealLog":{"type":"string","default":"always","enum":["focus","always","never","error"],"enumDescriptions":["The log appears and the output channel takes the cursor focus.","The log appears but the output channel doesn't take the cursor focus.","The log neither appears nor takes the focus.","The log appears only when the build or the configuration fails."],"description":"Configures the settings for showing the log and focusing on the output channel."},"cmake.exportCompileCommandsFile":{"type":"boolean","default":true,"description":"Enables exporting compile_commands.json. This only is used in Kits scenarios. In Presets scenarios, please set this by using CMakePresets.json","scope":"resource"},"cmake.useCMakePresets":{"type":"string","enum":["always","never","auto"],"default":"auto","description":"Use CMakePresets.json to configure drive CMake configure, build, and test. When using CMakePresets.json, kits, variants, and some settings in settings.json will be ignored.","scope":"resource"},"cmake.useVsDeveloperEnvironment":{"type":"string","enum":["always","never","auto"],"default":"auto","description":"When using CMake Presets on Windows, use the Visual Studio environment as the parent environment. Selecting auto will only apply the Visual Studio environment when we detect a supported compiler (cl, clang, clang-cl, clang-cpp, clang++), or the Ninja generator is being used.","scope":"resource"},"cmake.allowCommentsInPresetsFile":{"type":"boolean","default":false,"description":"Allow the use of JSON extensions such as comments in CMakePresets.json. Please note that your CMakePresets.json file may be considered invalid by other IDEs or on the command line if you use non-standard JSON.","scope":"resource"},"cmake.allowUnsupportedPresetsVersions":{"type":"boolean","default":false,"description":"Enables the use of presets files that are using features from the versions that CMake Tools extension doesn't currently support. Unknown properties and macros will be ignored.","scope":"resource"},"cmake.launchBehavior":{"type":"string","enum":["reuseTerminal","breakAndReuseTerminal","newTerminal"],"markdownEnumDescriptions":["The launch terminal instance is reused and the target will launch as soon as the terminal is idle.","The launch terminal instance is reused and a `break` command is sent to terminate any active foreground process before launching the target.","A new terminal instance is created and the target is launched in it. Existing terminals are not automatically cleaned up."],"description":"Controls what happens with the launch terminal when you launch a target.","default":"reuseTerminal"},"cmake.ignoreCMakeListsMissing":{"type":"boolean","default":false,"markdownDescription":"If `true`, the extension will not ask the user to select a CMakeLists.txt file for configuration when one is found in the workspace but not in the root folder.","scope":"resource"},"cmake.loadCompileCommands":{"type":"boolean","default":true,"description":"Controls whether the extension reads compile_commands.json to enable single file compilation.","scope":"resource"},"cmake.automaticReconfigure":{"type":"boolean","default":true,"description":"Automatically configure CMake project directories when the kit or the configuration preset is changed.","scope":"resource"},"cmake.pinnedCommands":{"type":"array","items":{"type":"string"},"description":"List of CMake commands to pin.","default":[],"scope":"resource"},"cmake.enableAutomaticKitScan":{"type":"boolean","default":true,"description":"Enable automatic scanning for kits when a kit isn't selected. This will only take affect when CMake Presets aren't being used.","scope":"resource"}}},"keybindings":[{"key":"f7","when":"!cmake:hideBuildCommand && cmake:enableFullFeatureSet","command":"cmake.build"},{"key":"shift+f7","when":"!cmake:hideBuildCommand && cmake:enableFullFeatureSet","command":"cmake.buildWithTarget"},{"key":"shift+f5","command":"cmake.debugTarget","when":"!inDebugMode && inCMakeProject && !cmake:hideDebugCommand && cmake:enableFullFeatureSet"},{"key":"ctrl+f5","command":"cmake.launchTarget","when":"!inDebugMode && !cmake:hideDebugCommand && cmake:enableFullFeatureSet"}],"viewsContainers":{"activitybar":[{"id":"cmake-view","title":"CMake","icon":"res/cmake-view-icon2.svg","when":"cmake:enableFullFeatureSet"}]},"views":{"cmake-view":[{"id":"cmake.projectStatus","name":"Project Status","when":"cmake:enableFullFeatureSet"},{"id":"cmake.outline","name":"Project Outline","when":"cmake:enableFullFeatureSet"},{"id":"cmake.pinnedCommands","name":"Pinned Commands","when":"cmake:enableFullFeatureSet"}]},"viewsWelcome":[{"view":"cmake.pinnedCommands","contents":"No CMake commands have been pinned yet.\n[Add Command](command:cmake.pinnedCommands.add)","when":"cmake:enableFullFeatureSet"}],"yamlValidation":[{"fileMatch":"cmake-variants.yaml","url":"cmake-tools-schema://schemas/variants-schema.json"}],"jsonValidation":[{"fileMatch":"cmake-variants.json","url":"cmake-tools-schema://schemas/variants-schema.json"},{"fileMatch":"cmake-variants.yaml","url":"cmake-tools-schema://schemas/variants-schema.json"},{"fileMatch":"cmake-kits.json","url":"cmake-tools-schema://schemas/kits-schema.json"},{"fileMatch":"CMakePresets.json","url":"cmake-tools-schema://schemas/CMakePresets-v8-schema.json"},{"fileMatch":"CMakeUserPresets.json","url":"cmake-tools-schema://schemas/CMakePresets-v8-schema.json"}]},"_moduleAliases":{"@cmt":"out/src/","@test":"out/test/"},"scripts":{"vscode:prepublish":"yarn run compile-production","compile":"yarn install && webpack --mode development","compile-watch":"yarn install && webpack --mode development --watch --progress","compile-production":"yarn install && yarn run translations-generate && webpack --env BUILD_VSCODE_NLS=true --mode production","translations-export":"gulp translations-export","translations-generate":"gulp translations-generate","translations-import":"gulp translations-import","package":"vsce package --yarn -o cmake-tools.vsix","pretest":"tsc -p test.tsconfig.json","lint":"gulp lint","smokeTests":"yarn run pretest && node ./out/test/smoke/badProject/runTest.js && node ./out/test/smoke/goodProject/runTest.js && node ./out/test/smoke/noCtest/runTest.js","unitTests":"yarn run pretest && node ./out/test/unit-tests/runTest.js","extensionTestsSuccessfulBuild":"yarn run pretest && node ./out/test/extension-tests/successful-build/runTest.js","extensionTestsSingleRoot":"yarn run pretest && node ./out/test/extension-tests/single-root-UI/runTest.js","extensionTestsMultiRoot":"yarn run pretest && node ./out/test/extension-tests/multi-root-UI/runTest.js","backendTests":"node ./node_modules/mocha/bin/_mocha -u tdd --timeout 999999 --colors -r ts-node/register -r tsconfig-paths/register ./test/backend-unit-tests/**/*.test.ts"},"devDependencies":{"@octokit/rest":"^18.1.1","@types/ajv":"^0.0.5","@types/chai":"^4.2.15","@types/chai-as-promised":"^7.1.3","@types/chai-string":"^1.4.2","@types/js-yaml":"^4.0.0","@types/json5":"~0.0.30","@types/lodash":"4.14.202","@types/mocha":"^8.2.2","@types/node":"^20.14.2","@types/rimraf":"^3.0.0","@types/sinon":"~9.0.10","@types/tmp":"^0.2.0","@types/vscode":"1.63.0","@types/which":"~2.0.0","@types/xml2js":"^0.4.8","@types/uuid":"~8.3.3","@typescript-eslint/eslint-plugin":"^5.25.0","@typescript-eslint/eslint-plugin-tslint":"^5.25.0","@typescript-eslint/parser":"^5.25.0","@vscode/test-electron":"^2.3.8","@vscode/vsce":"^3.1.0","chai":"^4.3.0","chai-as-promised":"^7.1.1","chai-string":"^1.5.0","eslint":"^8.15.0","eslint-plugin-import":"^2.29.1","eslint-plugin-jsdoc":"^48.2.8","event-stream":"^4.0.1","fs-extra":"^9.1.0","glob":"^7.1.6","gulp":"^4.0.2","gulp-eslint":"^6.0.0","gulp-filter":"^6.0.0","gulp-mocha":"^8.0.0","gulp-sourcemaps":"^3.0.0","gulp-typescript":"^5.0.1","husky":"^4.3.8","jsonc-parser":"^3.0.0","mocha":"^8.3.2","module-alias":"^2.2.2","node-loader":"^1.0.2","parse-git-config":"^3.0.0","sinon":"~9.2.4","ts-loader":"^8.0.17","ts-node":"^9.1.1","tsconfig-paths":"^3.11.0","tslint":"^6.1.3","typescript":"^4.1.5","vscode-cmake-tools":"^1.2.0","vscode-nls-dev":"^3.3.2","webpack":"^5.76.0","webpack-cli":"^4.5.0"},"dependencies":{"@types/string.prototype.matchall":"^4.0.4","ajv":"^7.1.0","chokidar":"^3.5.1","handlebars":"^4.7.7","iconv-lite":"^0.6.2","js-yaml":"^4.0.0","json5":"^2.2.2","minimist":"^1.2.6","open":"^7.4.1","p-limit":"^3.1.0","rimraf":"^3.0.2","string.prototype.matchall":"^4.0.10","tmp":"^0.2.1","vscode-cpptools":"^6.1.0","@vscode/extension-telemetry":"^0.9.6","vscode-nls":"^5.0.0","vscode-tas-client":"^0.1.45","which":"~2.0.2","xml2js":"^0.5.0","uuid":"~8.3.2","lodash":"^4.17.21"},"resolutions":{"ansi-regex":"^5.0.1","chokidar":"^3.5.1","glob-parent":"^5.1.2","hosted-git-info":"^3.0.8","https-proxy-agent":"^5.0.0","**/minimist":"^1.2.5","nanoid":"^3.1.31","postcss":"^8.2.10","yargs-parser":"^20.2.4","xml2js":"^0.5.0","tsconfig-paths*/json5":"^1.0.2","minimatch":"^3.0.5","**/braces":"^3.0.3"},"extensionPack":["twxs.cmake"],"packageManager":"yarn@1.22.19"},"location":{"$mid":1,"path":"/Users/andytran/.vscode/extensions/ms-vscode.cmake-tools-1.19.52","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Microsoft","metadata":{"installedTimestamp":1733083326471,"pinned":false,"source":"gallery","id":"7c889349-8749-43d4-8b5e-08939936d7f4","publisherId":"5f5636e7-69ed-4afe-b5d6-8d231fb3d3ee","publisherDisplayName":"Microsoft","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"vscjava.vscode-java-pack","uuid":"96f11e1f-1a46-4592-b084-f025b2c2a81f"},"manifest":{"name":"vscode-java-pack","displayName":"Extension Pack for Java","description":"Popular extensions for Java development that provides Java IntelliSense, debugging, testing, Maven/Gradle support, project management and more","license":"MIT","version":"0.29.0","publisher":"vscjava","preview":false,"engines":{"vscode":"^1.74.0"},"aiKey":"0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255","icon":"logo.png","keywords":["java","debugger","junit","maven","spring"],"categories":["Programming Languages","Linters","Debuggers","Formatters","Snippets","Extension Packs"],"repository":{"type":"git","url":"https://github.com/Microsoft/vscode-java-pack"},"homepage":"https://github.com/Microsoft/vscode-java-pack","bugs":{"url":"https://github.com/Microsoft/vscode-java-pack"},"main":"./out/extension","capabilities":{"virtualWorkspaces":false},"activationEvents":["onLanguage:java","workspaceContains:pom.xml","workspaceContains:*/pom.xml","workspaceContains:build.gradle","workspaceContains:*/build.gradle","workspaceContains:settings.gradle","workspaceContains:*/settings.gradle","workspaceContains:build.gradle.kts","workspaceContains:*/build.gradle.kts","workspaceContains:settings.gradle.kts","workspaceContains:*/settings.gradle.kts","workspaceContains:.classpath","workspaceContains:*/.classpath","onCommand:java.overview","onCommand:java.showReleaseNotes","onWebviewPanel:java.overview","onCommand:java.runtime","onCommand:java.gettingStarted","onWebviewPanel:java.gettingStarted","onCommand:java.extGuide","onWebviewPanel:java.extGuide","onCommand:java.welcome","onWebviewPanel:java.welcome","onCommand:java.installJdk","onWebviewPanel:java.installJdk","onCommand:java.classpathConfiguration","onCommand:java.projectSettings","onWebviewPanel:java.projectSettings","onCommand:java.formatterSettings","onWalkthrough:javaWelcome"],"contributes":{"javaShortcuts":[{"title":"$(project) Open Project Settings","command":"java.projectSettings"},{"title":"$(info) Open Help Center","command":"java.welcome"}],"walkthroughs":[{"id":"javaWelcome","title":"Get Started with Java Development","description":"Your first steps to set up powerful Java tools in a lightweight, performant editor!","steps":[{"id":"java.runtime","title":"Get your runtime ready","description":"The Extension Pack for Java requires at least one Java runtime to be installed.\n[Install JDK](command:toSide:java.installJdk.fromWalkthrough)","media":{"markdown":"walkthrough/runtime.md"}},{"id":"java.showProjectExplorer","title":"Explore your projects","description":"Java Project Explorer helps you to manage your projects and dependencies. It also helps you to create new Java project, classes and packages. \n[View Java Projects](command:javaProjectExplorer.focus)","media":{"svg":"walkthrough/projects.svg","altText":"Project Explorer"},"when":"java:projectManagerActivated && workspaceFolderCount > 0"},{"id":"java.showProjectExplorer.inactive","title":"Explore your project","description":"Java Project Explorer helps you to manage your projects and dependencies. Create a new project or open an existing folder to see the full features.\n[Open Command Palette](command:workbench.action.quickOpen?%22>java%22)\n__Try searching for 'Create Java Project' or 'Open Folder'__","media":{"svg":"walkthrough/projects.svg","altText":"Project Explorer"},"when":"!java:projectManagerActivated || workspaceFolderCount == 0"},{"id":"java.codeActions","title":"View code actions and source actions","description":"Find available actions for your code in the editor:\n  - Open the right-click menu then select \"Refactor...\" or \"Source Action...\".\n  - Click on the light bulb💡.","media":{"svg":"walkthrough/codeAction.svg","altText":"Code actions and source actions"}},{"id":"java.debugAndTest","title":"Launch, debug and test","description":"Run and debug your application using the debugger. [Learn More...](https://aka.ms/java-walkthrough-debug)\nThe [Testing Explorer](command:workbench.view.testing.focus) allows you to view, run and manage all test cases in your project. [Learn More...](https://aka.ms/java-walkthrough-test)\n[Show Run and Debug View](command:workbench.view.debug)","media":{"svg":"walkthrough/debugAndTest.svg","altText":"Launch, debug and test"}},{"id":"java.extensions","title":"Extensions for additional tools and frameworks","description":"Install extensions to support additional frameworks such as Spring Boot, Application Servers, key mappings and so on.\n[Browse Recommended Extensions](command:toSide:java.extGuide)","media":{"svg":"walkthrough/extensions.svg","altText":"Extensions"}},{"id":"java.more","title":"Explore more Java resources","description":"✨ Help Center provides tips, resources and links to help you get answers to the most common questions to learn Java on VS Code.\n[Open Help Center](command:java.welcome)","media":{"svg":"walkthrough/helpCenter.svg","altText":"Explore more Java resources"},"when":"!isMac"},{"id":"java.moreForMac","title":"Explore more Java resources","description":"✨ Help Center provides tips, resources and links to help you get answers to the most common questions to learn Java on VS Code.\n[Open Help Center](command:java.welcome)","media":{"svg":"walkthrough/helpCenterMac.svg","altText":"Explore more Java resources"},"when":"isMac"}]}],"commands":[{"command":"java.installJdk","category":"Java","title":"Install New JDK"},{"command":"java.installJdk.fromWalkthrough","category":"Java","title":"Install New JDK"},{"command":"java.welcome","category":"Java","title":"Help Center"},{"command":"java.welcome.fromWalkthrough","category":"Java","title":"Help Center"},{"command":"java.classpathConfiguration","category":"Java","title":"Configure Classpath"},{"command":"java.projectSettings","category":"Java","title":"Open Project Settings"},{"command":"java.overview","category":"Java","title":"Overview"},{"command":"java.showReleaseNotes","category":"Java","title":"Show Release Notes"},{"command":"java.runtime","title":"Configure Java Runtime","category":"Java"},{"command":"java.gettingStarted","category":"Java","title":"Tips for Beginners"},{"command":"java.extGuide","category":"Java","title":"Extensions Guide"},{"command":"java.formatterSettings","category":"Java","title":"Open Java Formatter Settings with Preview"},{"command":"java.formatterSettings.showTextEditor","category":"Java","title":"Open Text Editor","icon":"$(go-to-file)"}],"configuration":{"title":"Extension Pack for Java","properties":{"java.help.firstView":{"type":["string"],"enum":["auto","overview","gettingStarted","welcome","none"],"enumDescriptions":["Automatically pick the first experience view","Present the Java Overview page","Present the Java Beginner Tips page","Present the Java Help Center page","Do not show any view"],"default":"auto","description":"Sets the default view which is presented during the first use.","scope":"window"},"java.help.showReleaseNotes":{"type":"boolean","default":true,"description":"Show release notes of Extension Pack for Java on startup.","scope":"window"},"java.help.collectErrorLog":{"type":"boolean","default":false,"description":"Whether to send back detailed information from error logs for diagnostic purpose.","scope":"window"}}},"menus":{"commandPalette":[{"command":"java.formatterSettings.showTextEditor","when":"false"},{"command":"java.welcome.fromWalkthrough","when":"false"},{"command":"java.installJdk.fromWalkthrough","when":"false"}],"view/title":[{"command":"java.runtime","group":"overflow_30@10","when":"view == javaProjectExplorer"},{"command":"java.classpathConfiguration","group":"overflow_30@20","when":"view == javaProjectExplorer"}],"view/item/context":[{"command":"java.classpathConfiguration","group":"9_configuration@20","when":"view == javaProjectExplorer && viewItem =~ /java:project(?=.*?\\b\\+unmanagedFolder\\b)(?=.*?\\b\\+uri\\b)/"}],"editor/title":[{"command":"java.formatterSettings.showTextEditor","when":"activeCustomEditorId == java.formatterSettingsEditor","group":"navigation"}]},"customEditors":[{"viewType":"java.formatterSettingsEditor","displayName":"Java Formatter Settings Editor","selector":[{"filenamePattern":"*.xml"}],"priority":"option"}],"keybindings":[{"command":"java.welcome","key":"shift+f1"}]},"scripts":{"vscode:prepublish":"npm run build","compile":"webpack --config webpack.config.js","watch":"webpack --config webpack.config.js --watch","build":"webpack --config webpack.config.js --mode=\"production\"","update-tpn":"node scripts/update-third-party-notice.js"},"devDependencies":{"@types/bytes":"^3.1.1","@types/expand-tilde":"^2.0.0","@types/fs-extra":"^9.0.13","@types/lodash":"^4.14.186","@types/node":"20.x","@types/path-exists":"^3.0.0","@types/react":"^17.0.50","@types/react-dom":"^16.9.16","@types/react-redux":"^7.1.24","@types/semver":"^7.3.12","@types/vscode":"^1.74.0","@types/winreg":"^1.2.31","@types/xmldom":"^0.1.31","autoprefixer":"^10.4.12","bytes":"^3.1.2","css-loader":"^6.7.1","file-loader":"^6.2.0","postcss":"^8.4.31","postcss-loader":"^6.2.1","process":"0.11.10","sass":"^1.55.0","sass-loader":"^12.6.0","style-loader":"^3.3.1","ts-loader":"^9.4.1","tslint":"^5.20.1","typescript":"^5.3.2","webpack":"^5.89.0","webpack-cli":"^5.1.4"},"extensionPack":["redhat.java","vscjava.vscode-java-debug","vscjava.vscode-java-test","vscjava.vscode-maven","vscjava.vscode-gradle","vscjava.vscode-java-dependency","VisualStudioExptTeam.vscodeintellicode"],"dependencies":{"@iconify-icons/codicon":"1.2.8","@iconify/react":"^1.1.4","@reduxjs/toolkit":"^1.8.6","@vscode/codicons":"^0.0.35","@vscode/webview-ui-toolkit":"1.4.0","@xmldom/xmldom":"^0.8.3","axios":"^1.6.0","bootstrap":"^4.6.2","compare-versions":"^3.6.0","expand-home-dir":"0.0.3","expand-tilde":"^2.0.2","fs-extra":"^9.1.0","hdr-histogram-js":"^3.0.0","highlight.js":"10.5.0","jdk-utils":"^0.4.4","jquery":"^3.6.1","lodash":"^4.17.21","react":"^16.14.0","react-bootstrap":"^1.6.6","react-dom":"^16.14.0","react-redux":"^7.2.9","semver":"^7.5.2","vscode-extension-telemetry-wrapper":"^0.14.0","vscode-tas-client":"^0.1.75"}},"location":{"$mid":1,"path":"/Users/andytran/.vscode/extensions/vscjava.vscode-java-pack-0.29.0","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Microsoft","metadata":{"installedTimestamp":1733083352906,"pinned":false,"source":"gallery","id":"96f11e1f-1a46-4592-b084-f025b2c2a81f","publisherId":"bae08b87-578e-41ec-ab1c-0b036e7add88","publisherDisplayName":"Microsoft","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"twxs.cmake","uuid":"2be7cf14-2603-402e-9771-fd79df83cdf8"},"manifest":{"name":"cmake","version":"0.0.17","publisher":"twxs","displayName":"CMake","description":"CMake langage support for Visual Studio Code","author":{"name":"Nicolas Martin"},"repository":{"type":"git","url":"https://github.com/twxs/vs.language.cmake.git"},"bugs":{"url":"https://github.com/twxs/vs.language.cmake/issues"},"homepage":"https://github.com/twxs/vs.language.cmake/blob/master/README.md","keywords":["CMake","Syntax"],"categories":["Languages","Snippets","Other"],"icon":"images/icon.png","galleryBanner":{"color":"#5c2d91","theme":"dark"},"license":"MIT","activationEvents":["onLanguage:cmake"],"engines":{"vscode":"^1.10.0"},"main":"./out/extension","contributes":{"languages":[{"id":"cmake","extensions":[".cmake"],"filenames":["CMakelists.txt"],"aliases":["CMake"]},{"id":"cmake-cache","filenames":["CMakeCache.txt"],"aliases":["CMake Cache"]}],"commands":[{"command":"cmake.onlineHelp","title":"CMake: Online Help"}],"grammars":[{"language":"cmake","scopeName":"source.cmake","path":"./syntaxes/CMake.tmLanguage"},{"language":"cmake-cache","scopeName":"source.cmakecache","path":"./syntaxes/CMakeCache.tmLanguage"}],"configuration":{"title":"CMake configuration","properties":{"cmake.cmakePath":{"type":"string","default":"cmake","description":"The path to CMake generator executable"}}}},"scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install"},"dependencies":{"opener":"^1.4.2"},"devDependencies":{"typescript":"^2.0.9","vscode":"^1.0.3","@types/node":"^6.0.47","mocha":"^3.1.2","@types/mocha":"^2.2.33"}},"location":{"$mid":1,"path":"/Users/andytran/.vscode/extensions/twxs.cmake-0.0.17","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"twxs","metadata":{"installedTimestamp":1733083326471,"pinned":false,"source":"gallery","id":"2be7cf14-2603-402e-9771-fd79df83cdf8","publisherId":"b5ab7991-81a8-4557-af54-4cb8e01e85c1","publisherDisplayName":"twxs","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"vscjava.vscode-java-dependency","uuid":"7865e561-1c83-410e-9b99-aabada597a7e"},"manifest":{"name":"vscode-java-dependency","displayName":"Project Manager for Java","description":"Manage Java projects in Visual Studio Code","version":"0.24.1","publisher":"vscjava","preview":false,"aiKey":"0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255","keywords":["java","project","explorer"],"engines":{"vscode":"^1.83.1"},"repository":{"type":"git","url":"https://github.com/Microsoft/vscode-java-dependency.git"},"homepage":"https://github.com/Microsoft/vscode-java-dependency/blob/main/README.md","icon":"logo.png","capabilities":{"virtualWorkspaces":false,"untrustedWorkspaces":{"supported":false}},"activationEvents":["onLanguage:java","workspaceContains:pom.xml","workspaceContains:*/pom.xml","workspaceContains:build.gradle","workspaceContains:*/build.gradle","workspaceContains:settings.gradle","workspaceContains:*/settings.gradle","workspaceContains:build.gradle.kts","workspaceContains:*/build.gradle.kts","workspaceContains:settings.gradle.kts","workspaceContains:*/settings.gradle.kts","workspaceContains:.classpath","workspaceContains:*/.classpath","onCommand:_java.project.open"],"license":"MIT","main":"./main.js","contributes":{"javaExtensions":["./server/com.microsoft.jdtls.ext.core-0.24.1.jar"],"commands":[{"command":"java.project.create","title":"Create Java Project...","category":"Java","icon":"$(add)"},{"command":"_java.project.create.from.menus.file","title":"New Java Project...","category":"Java","icon":"$(add)"},{"command":"_java.project.create.from.fileexplorer.menu","title":"New Java Project...","category":"Java","icon":"$(add)"},{"command":"_java.project.create.from.fileexplorer.welcome","title":"Create Java Project...","category":"Java","icon":"$(add)"},{"command":"_java.project.create.from.javaprojectexplorer.welcome","title":"Create Java Project...","category":"Java","icon":"$(add)"},{"command":"_java.project.create.from.javaprojectexplorer","title":"Create Java Project...","category":"Java","icon":"$(add)"},{"command":"java.project.addLibraries","title":"Add Jar Libraries to Project Classpath...","category":"Java","icon":"$(add)"},{"command":"java.project.addLibraryFolders","title":"Add Library Folders to Project Classpath...","category":"Java","icon":"$(new-folder)"},{"command":"java.project.removeLibrary","title":"Remove from Project Classpath","category":"Java","icon":"$(remove)"},{"command":"java.project.refreshLibraries","title":"Refresh","category":"Java","icon":"$(refresh)"},{"command":"java.project.build.workspace","title":"Rebuild All","icon":"$(tools)"},{"command":"java.project.clean.workspace","title":"Clean Workspace"},{"command":"java.project.update","title":"Reload Project"},{"command":"java.project.reloadProjectFromActiveFile","title":"Reload Java Project","category":"Java","icon":"$(sync)"},{"command":"java.project.rebuild","title":"Rebuild Project"},{"command":"java.view.package.revealInProjectExplorer","title":"Reveal in Java Project Explorer","category":"Java"},{"command":"java.view.package.refresh","title":"Refresh","category":"Java","icon":"$(refresh)"},{"command":"java.view.package.changeToHierarchicalPackageView","title":"Hierarchical View","category":"Java","icon":"$(list-tree)"},{"command":"java.view.package.changeToFlatPackageView","title":"Flat View","category":"Java","icon":"$(list-flat)"},{"command":"java.view.package.linkWithFolderExplorer","title":"Link with Editor","category":"Java","icon":{"dark":"icons/dark/icon-unlink.svg","light":"icons/light/icon-unlink.svg"}},{"command":"java.view.package.unlinkWithFolderExplorer","title":"Unlink with Editor","category":"Java","icon":{"dark":"icons/dark/icon-link.svg","light":"icons/light/icon-link.svg"}},{"command":"java.project.explorer.showNonJavaResources","title":"Show Non-Java Resources","category":"Java"},{"command":"java.project.explorer.hideNonJavaResources","title":"Hide Non-Java Resources","category":"Java"},{"command":"java.view.package.revealFileInOS","title":"Reveal in Explorer","category":"Java"},{"command":"java.view.package.exportJar","title":"Export Jar...","category":"Java","icon":"$(export)"},{"command":"java.view.package.copyFilePath","title":"Copy Path","category":"Java"},{"command":"java.view.package.copyRelativeFilePath","title":"Copy Relative Path","category":"Java"},{"command":"java.view.package.new","title":"New...","category":"Java","icon":"$(add)"},{"command":"java.view.menus.file.newJavaClass","title":"New Java File","category":"Java","icon":"$(add)"},{"command":"java.view.package.newJavaClass","title":"Class...","category":"Java","icon":"$(add)"},{"command":"java.view.package.newJavaInterface","title":"Interface...","category":"Java","icon":"$(add)"},{"command":"java.view.package.newJavaEnum","title":"Enum...","category":"Java","icon":"$(add)"},{"command":"java.view.package.newJavaRecord","title":"Record...","category":"Java","icon":"$(add)"},{"command":"java.view.package.newJavaAnnotation","title":"Annotation...","category":"Java","icon":"$(add)"},{"command":"java.view.package.newJavaAbstractClass","title":"Abstract Class...","category":"Java","icon":"$(add)"},{"command":"java.view.package.newPackage","title":"Package...","category":"Java"},{"command":"java.view.fileExplorer.newPackage","title":"New Java Package...","category":"Java"},{"command":"java.view.package.newFile","title":"File...","category":"Java","icon":"$(new-file)"},{"command":"java.view.package.newFolder","title":"Folder...","category":"Java","icon":"$(new-folder)"},{"command":"java.view.package.moveFileToTrash","title":"Delete","category":"Java"},{"command":"java.view.package.deleteFilePermanently","title":"Delete Permanently","category":"Java"},{"command":"java.view.package.renameFile","title":"Rename","category":"Java"}],"configuration":{"type":"object","title":"Java Project Manager","properties":{"java.dependency.showMembers":{"type":"boolean","description":"Show the members in the explorer","default":false},"java.dependency.syncWithFolderExplorer":{"type":"boolean","description":"Link Java Projects Explorer with the active editor","default":true},"java.dependency.autoRefresh":{"type":"boolean","description":"Synchronize Java Projects explorer with changes","default":true},"java.dependency.refreshDelay":{"type":"number","description":"The delay time (ms) the auto refresh is invoked when changes are detected","default":2000},"java.dependency.packagePresentation":{"type":"string","enum":["flat","hierarchical"],"description":"Package presentation mode: flat or hierarchical","default":"flat"},"java.project.exportJar.targetPath":{"type":"string","anyOf":[{"enum":["${workspaceFolder}/${workspaceFolderBasename}.jar",""],"enumDescriptions":["Export the jar file into the workspace folder. Its name is the same as the folder's.","Select output location manually when exporting the jar file."]},"string"],"markdownDescription":"The output path of the exported jar. Leave it empty if you want to manually pick the output location.","default":"${workspaceFolder}/${workspaceFolderBasename}.jar"},"java.project.explorer.showNonJavaResources":{"type":"boolean","description":"When enabled, the explorer shows non-Java resources.","default":true}}},"keybindings":[{"command":"java.view.package.revealFileInOS","key":"ctrl+alt+r","win":"shift+alt+r","mac":"cmd+alt+r","when":"java:serverMode == Standard && focusedView == javaProjectExplorer"},{"command":"java.view.package.copyFilePath","key":"ctrl+alt+c","win":"shift+alt+c","mac":"cmd+alt+c","when":"java:serverMode == Standard && focusedView == javaProjectExplorer"},{"command":"java.view.package.copyRelativeFilePath","key":"ctrl+shift+alt+c","win":"ctrl+k ctrl+shift+c","mac":"cmd+shift+alt+c","when":"java:serverMode == Standard && focusedView == javaProjectExplorer"},{"command":"java.view.package.renameFile","key":"F2","mac":"enter","when":"java:serverMode == Standard && focusedView == javaProjectExplorer"},{"command":"java.view.package.moveFileToTrash","key":"delete","mac":"cmd+backspace","when":"java:serverMode == Standard && focusedView == javaProjectExplorer && explorerResourceMoveableToTrash"},{"command":"java.view.package.deleteFilePermanently","key":"delete","mac":"cmd+backspace","when":"java:serverMode == Standard && focusedView == javaProjectExplorer && !explorerResourceMoveableToTrash"}],"menus":{"file/newFile":[{"command":"java.view.menus.file.newJavaClass"},{"command":"_java.project.create.from.menus.file"}],"commandPalette":[{"command":"java.project.reloadProjectFromActiveFile","when":"false"},{"command":"java.view.package.exportJar","when":"java:serverMode == Standard && !java:noJavaProjects"},{"command":"java.view.package.refresh","when":"false"},{"command":"java.view.package.changeToHierarchicalPackageView","when":"false"},{"command":"java.view.package.changeToFlatPackageView","when":"false"},{"command":"java.view.package.linkWithFolderExplorer","when":"false"},{"command":"java.view.package.unlinkWithFolderExplorer","when":"false"},{"command":"java.view.package.revealFileInOS","when":"false"},{"command":"java.view.package.copyFilePath","when":"false"},{"command":"java.view.package.copyRelativeFilePath","when":"false"},{"command":"java.project.addLibraries","when":"false"},{"command":"java.project.addLibraryFolders","when":"false"},{"command":"java.project.removeLibrary","when":"false"},{"command":"java.project.refreshLibraries","when":"false"},{"command":"java.view.package.new","when":"false"},{"command":"java.view.package.newJavaClass","when":"false"},{"command":"java.view.package.newJavaInterface","when":"false"},{"command":"java.view.package.newJavaEnum","when":"false"},{"command":"java.view.package.newJavaRecord","when":"false"},{"command":"java.view.package.newJavaAnnotation","when":"false"},{"command":"java.view.package.newJavaAbstractClass","when":"false"},{"command":"java.view.package.newPackage","when":"false"},{"command":"java.view.package.newFile","when":"false"},{"command":"java.view.package.newFolder","when":"false"},{"command":"java.view.package.renameFile","when":"false"},{"command":"java.view.package.moveFileToTrash","when":"false"},{"command":"java.view.package.deleteFilePermanently","when":"false"},{"command":"java.view.fileExplorer.newPackage","when":"false"},{"command":"java.project.build.workspace","when":"false"},{"command":"java.project.clean.workspace","when":"false"},{"command":"java.project.update","when":"false"},{"command":"java.project.rebuild","when":"false"},{"command":"java.view.package.revealInProjectExplorer","when":"false"},{"command":"_java.project.create.from.menus.file","when":"false"},{"command":"_java.project.create.from.fileexplorer.menu","when":"false"},{"command":"_java.project.create.from.fileexplorer.welcome","when":"false"},{"command":"_java.project.create.from.javaprojectexplorer.welcome","when":"false"},{"command":"_java.project.create.from.javaprojectexplorer","when":"false"}],"explorer/context":[{"submenu":"javaProject.newJavaFile","when":"explorerResourceIsFolder","group":"1_javaactions@10"},{"command":"java.view.fileExplorer.newPackage","when":"explorerResourceIsFolder","group":"1_javaactions@20"},{"command":"_java.project.create.from.fileexplorer.menu","when":"explorerResourceIsFolder","group":"1_javaactions@30"},{"command":"java.view.package.revealInProjectExplorer","when":"resourceFilename =~ /(.*\\.gradle)|(.*\\.gradle\\.kts)|(pom\\.xml)$/ && java:serverMode == Standard","group":"1_javaactions@40"},{"command":"java.view.package.revealInProjectExplorer","when":"resourceExtname == .java && java:serverMode == Standard","group":"1_javaactions@40"}],"editor/title":[{"command":"java.project.reloadProjectFromActiveFile","when":"java:reloadProjectActive && javaLSReady","group":"navigation"}],"editor/title/context":[{"command":"java.view.package.revealInProjectExplorer","when":"resourceFilename =~ /(.*\\.gradle)|(.*\\.gradle\\.kts)|(pom\\.xml)$/ && java:serverMode == Standard","group":"2_files@100"},{"command":"java.view.package.revealInProjectExplorer","when":"resourceExtname == .java && java:serverMode == Standard","group":"2_files@100"}],"view/title":[{"command":"_java.project.create.from.javaprojectexplorer","when":"view == javaProjectExplorer","group":"navigation@10"},{"command":"java.view.package.exportJar","when":"view == javaProjectExplorer && java:serverMode == Standard && !java:noJavaProjects && !java:importFailed","group":"navigation@20"},{"command":"java.project.build.workspace","when":"view == javaProjectExplorer && java:serverMode == Standard && !java:noJavaProjects && !java:importFailed","group":"navigation@30"},{"command":"java.view.package.changeToHierarchicalPackageView","when":"view == javaProjectExplorer && java:serverMode == Standard && config.java.dependency.packagePresentation == flat","group":"overflow_10@10"},{"command":"java.view.package.changeToFlatPackageView","when":"view == javaProjectExplorer && java:serverMode == Standard && config.java.dependency.packagePresentation != flat","group":"overflow_10@10"},{"command":"java.view.package.linkWithFolderExplorer","when":"view == javaProjectExplorer && java:serverMode == Standard && config.java.dependency.syncWithFolderExplorer != true","group":"overflow_10@20"},{"command":"java.view.package.unlinkWithFolderExplorer","when":"view == javaProjectExplorer && java:serverMode == Standard && config.java.dependency.syncWithFolderExplorer == true","group":"overflow_10@20"},{"command":"java.project.explorer.showNonJavaResources","when":"view == javaProjectExplorer && java:serverMode == Standard && !config.java.project.explorer.showNonJavaResources","group":"overflow_10@30"},{"command":"java.project.explorer.hideNonJavaResources","when":"view == javaProjectExplorer && java:serverMode == Standard && config.java.project.explorer.showNonJavaResources","group":"overflow_10@30"},{"command":"java.project.clean.workspace","when":"view == javaProjectExplorer && java:serverMode == Standard && !java:noJavaProjects","group":"overflow_20@10"},{"command":"java.view.package.refresh","when":"view == javaProjectExplorer && java:serverMode == Standard && !java:noJavaProjects","group":"overflow_50@10"}],"view/item/context":[{"command":"java.view.package.revealFileInOS","when":"view == javaProjectExplorer && viewItem =~ /java:(?=.*?\\b\\+uri\\b)/","group":"6_copypath@10"},{"command":"java.view.package.copyFilePath","when":"view == javaProjectExplorer && viewItem =~ /java:(?=.*?\\b\\+uri\\b)/","group":"6_copypath@20"},{"command":"java.view.package.copyRelativeFilePath","when":"view == javaProjectExplorer && viewItem =~ /java:(?=.*?\\b\\+uri\\b)/","group":"6_copypath@25"},{"command":"java.view.package.renameFile","when":"view == javaProjectExplorer && viewItem =~ /java:(package|packageRoot)(?=.*?\\b\\+(source|resource)\\b)(?=.*?\\b\\+uri\\b)/","group":"7_modification@10"},{"command":"java.view.package.renameFile","when":"view == javaProjectExplorer && viewItem =~ /java:(file|type|folder)(?=.*?\\b\\+uri\\b)/","group":"7_modification@10"},{"command":"java.view.package.moveFileToTrash","when":"view == javaProjectExplorer && explorerResourceMoveableToTrash && viewItem =~ /java:(package|packageRoot)(?=.*?\\b\\+(source|resource)\\b)(?=.*?\\b\\+uri\\b)/","group":"7_modification@20"},{"command":"java.view.package.moveFileToTrash","when":"view == javaProjectExplorer && explorerResourceMoveableToTrash && viewItem =~ /java:(file|type|folder)(?=.*?\\b\\+uri\\b)/","group":"7_modification@20"},{"command":"java.view.package.deleteFilePermanently","when":"view == javaProjectExplorer && !explorerResourceMoveableToTrash && viewItem =~ /java:(package|packageRoot)(?=.*?\\b\\+(source|resource)\\b)(?=.*?\\b\\+uri\\b)/","group":"7_modification@20"},{"command":"java.view.package.deleteFilePermanently","when":"view == javaProjectExplorer && !explorerResourceMoveableToTrash && viewItem =~ /java:(file|type|folder)(?=.*?\\b\\+uri\\b)/","group":"7_modification@20"},{"command":"java.project.build.workspace","when":"view == javaProjectExplorer && viewItem =~ /java:project(?=.*?\\b\\+java\\b)(?=.*?\\b\\+uri\\b)/","group":"8_execution@5"},{"command":"java.project.rebuild","when":"view == javaProjectExplorer && viewItem =~ /java:project(?=.*?\\b\\+java\\b)(?=.*?\\b\\+uri\\b)/","group":"8_execution@6"},{"submenu":"javaProject.new","when":"view == javaProjectExplorer && viewItem =~ /java(?!:container)(?!:jar)(?!.*?\\b\\+binary\\b)(?=.*?\\b\\+uri\\b)/","group":"1_new@10"},{"command":"java.view.package.new","when":"view == javaProjectExplorer && viewItem =~ /java(?!:container)(?!:jar)(?!.*?\\b\\+binary\\b)(?=.*?\\b\\+uri\\b)/","group":"inline@add_0"},{"command":"java.project.addLibraries","alt":"java.project.addLibraryFolders","when":"view == javaProjectExplorer && viewItem =~ /java:container(?=.*?\\b\\+referencedLibrary\\b)/","group":"inline@0"},{"command":"java.project.removeLibrary","when":"view == javaProjectExplorer && viewItem =~ /java:jar(?=.*?\\b\\+referencedLibrary\\b)(?=.*?\\b\\+uri\\b)/","group":"inline"},{"command":"java.project.refreshLibraries","when":"view == javaProjectExplorer && viewItem =~ /java:container(?=.*?\\b\\+referencedLibrary\\b)/","group":"inline@1"},{"command":"java.view.package.exportJar","when":"view == javaProjectExplorer && viewItem =~ /java:workspace(?=.*?\\b\\+uri\\b)/ && java:serverMode == Standard","group":"inline"},{"submenu":"javaProject.maven","when":"view == javaProjectExplorer && viewItem =~ /java:project(?=.*?\\b\\+uri\\b)(?=.*?\\b\\+maven\\b)/","group":"9_configuration@10"},{"submenu":"javaProject.gradle","when":"view == javaProjectExplorer && viewItem =~ /java:project(?=.*?\\b\\+uri\\b)(?=.*?\\b\\+(?:bsp-)?gradle\\b)/","group":"9_configuration@10"}],"javaProject.maven":[{"command":"java.project.update","group":"maven@10"}],"javaProject.gradle":[{"command":"java.project.update","group":"gradle@10"}],"javaProject.new":[{"command":"java.view.package.newJavaClass","group":"new1@10","when":"view == javaProjectExplorer && (viewItem =~ /java:(package|packageRoot)(?=.*?\\b\\+source\\b)/ || viewItem =~ /java:project(?=.*?\\b\\+java\\b)/ || viewItem =~ /java:type/)"},{"command":"java.view.package.newJavaInterface","group":"new1@11","when":"view == javaProjectExplorer && (viewItem =~ /java:(package|packageRoot)(?=.*?\\b\\+source\\b)/ || viewItem =~ /java:project(?=.*?\\b\\+java\\b)/ || viewItem =~ /java:type/)"},{"command":"java.view.package.newJavaEnum","group":"new1@12","when":"view == javaProjectExplorer && (viewItem =~ /java:(package|packageRoot)(?=.*?\\b\\+source\\b)/ || viewItem =~ /java:project(?=.*?\\b\\+java\\b)/ || viewItem =~ /java:type/)"},{"command":"java.view.package.newJavaRecord","group":"new1@13","when":"view == javaProjectExplorer && (viewItem =~ /java:(package|packageRoot)(?=.*?\\b\\+source\\b)/ || viewItem =~ /java:project(?=.*?\\b\\+java\\b)/ || viewItem =~ /java:type/) && viewItem =~ /java:.*\\+allowRecord\\b/"},{"command":"java.view.package.newJavaAnnotation","group":"new1@14","when":"view == javaProjectExplorer && (viewItem =~ /java:(package|packageRoot)(?=.*?\\b\\+source\\b)/ || viewItem =~ /java:project(?=.*?\\b\\+java\\b)/ || viewItem =~ /java:type/)"},{"command":"java.view.package.newJavaAbstractClass","group":"new1@15","when":"view == javaProjectExplorer && (viewItem =~ /java:(package|packageRoot)(?=.*?\\b\\+source\\b)/ || viewItem =~ /java:project(?=.*?\\b\\+java\\b)/ || viewItem =~ /java:type/)"},{"command":"java.view.package.newPackage","group":"new1@20","when":"view == javaProjectExplorer && (viewItem =~ /java:(package|packageRoot)(?=.*?\\b\\+source\\b)/ || viewItem =~ /java:project(?=.*?\\b\\+java\\b)/ || viewItem =~ /java:type/)"},{"command":"java.view.package.newFile","group":"new2@30"},{"command":"java.view.package.newFolder","group":"new2@40","when":"view == javaProjectExplorer && (viewItem =~ /java:(file|folder|project)/ || viewItem =~ /java:(packageRoot)(?=.*?\\b\\+resource\\b)/)"}],"javaProject.newJavaFile":[{"command":"java.view.package.newJavaClass","group":"new@10","when":"explorerResourceIsFolder"},{"command":"java.view.package.newJavaInterface","group":"new@20","when":"explorerResourceIsFolder"},{"command":"java.view.package.newJavaEnum","group":"new@30","when":"explorerResourceIsFolder"},{"command":"java.view.package.newJavaRecord","group":"new@40","when":"explorerResourceIsFolder"},{"command":"java.view.package.newJavaAnnotation","group":"new@50","when":"explorerResourceIsFolder"},{"command":"java.view.package.newJavaAbstractClass","group":"new@60","when":"explorerResourceIsFolder"}]},"submenus":[{"id":"javaProject.maven","label":"Maven"},{"id":"javaProject.gradle","label":"Gradle"},{"id":"javaProject.new","label":"New"},{"id":"javaProject.newJavaFile","label":"New Java File"}],"views":{"explorer":[{"id":"javaProjectExplorer","name":"Java Projects","contextualTitle":"Java Projects","icon":"$(project)","when":"java:projectManagerActivated"}]},"viewsWelcome":[{"view":"explorer","contents":"You can also [open a Java project folder](command:_java.project.open), or create a new Java project by clicking the button below.\n[Create Java Project](command:_java.project.create.from.fileexplorer.welcome)","when":"workspaceFolderCount == 0"},{"view":"javaProjectExplorer","contents":"No Java projects found in the current workspace. You can [open a Java project folder](command:_java.project.open), or create a new Java project by clicking the button below.\n[Create Java Project](command:_java.project.create.from.javaprojectexplorer.welcome)","when":"java:noJavaProjects"},{"view":"javaProjectExplorer","contents":"To view the projects, you can import the projects into workspace.\n[Import Projects](command:java.server.mode.switch?%5B%22Standard%22,true%5D)","when":"java:serverMode == LightWeight"},{"view":"javaProjectExplorer","contents":"The Java Projects explorer requires [Extension Pack for Java](command:extension.open?%5B%22vscjava.vscode-java-pack%22%5D) to provide full features.\n[Install](command:java.project.installExtension?%5B%22vscjava.vscode-java-pack%22%5D)","when":"java:projectManagerActivated && !java:languageSupportInstalled"},{"view":"javaProjectExplorer","contents":"Oops, something went wrong when opening Java projects. Please use the following action for troubleshooting:\n[Open Problems View](command:workbench.panel.markers.view.focus)","when":"java:importFailed"}],"taskDefinitions":[{"type":"java (buildArtifact)","properties":{"label":{"type":"string","description":"The label of export jar task."},"mainClass":{"type":"string","description":"The main class in the manifest of the exported jar."},"targetPath":{"type":"string","anyOf":[{"type":"string"},{"enum":["${workspaceFolder}/${workspaceFolderBasename}.jar",""],"enumDescriptions":["Export the jar file into the workspace folder. Its name is the same as the folder's.","Select output location manually when exporting the jar file."]}],"description":"The output path of the exported jar. Leave it empty if you want to manually pick the output location."},"elements":{"type":"array","items":{"anyOf":[{"type":"string"},{"enum":["${compileOutput}","${testCompileOutput}","${dependencies}","${testDependencies}"],"enumDescriptions":["The folders containing output class files in the runtime scope.","The folders containing output class files in the test scope.","The artifact dependencies in the runtime scope.","The artifact dependencies in the test scope."]}]},"description":"The content list of the exported jar."}}},{"type":"java (build)","properties":{"paths":{"type":"array","items":{"anyOf":[{"type":"string"},{"enum":["${workspace}","!<path>"],"enumDescriptions":["All the projects in workspace.","The path after '!' will be excluded from the paths to be built."]}]},"default":["${workspace}"],"description":"The project root paths that will be built. Both absolute path and relative path to the workspace folder are supported."},"isFullBuild":{"type":"boolean","default":"true","description":"Whether to execute a clean build or not."}}},{"type":"java","when":"java:showDeprecatedTasks","properties":{"label":{"type":"string","description":"The label of export jar task."},"mainClass":{"type":"string","description":"The main class in the manifest of the exported jar."},"targetPath":{"type":"string","anyOf":[{"type":"string"},{"enum":["${workspaceFolder}/${workspaceFolderBasename}.jar",""],"enumDescriptions":["Export the jar file into the workspace folder. Its name is the same as the folder's.","Select output location manually when exporting the jar file."]}],"description":"The output path of the exported jar. Leave it empty if you want to manually pick the output location."},"elements":{"type":"array","items":{"anyOf":[{"type":"string"},{"enum":["${compileOutput}","${testCompileOutput}","${dependencies}","${testDependencies}"],"enumDescriptions":["The folders containing output class files in the runtime scope.","The folders containing output class files in the test scope.","The artifact dependencies in the runtime scope.","The artifact dependencies in the test scope."]}]},"description":"The content list of the exported jar."}}}]},"scripts":{"compile":"tsc -p . && webpack --config webpack.config.js --mode development","watch":"webpack --mode development --watch","test":"tsc -p . && webpack --config webpack.config.js --mode development && node ./dist/test/index.js","test-ui":"tsc -p . && webpack --config webpack.config.js --mode development && node ./dist/test/ui/index.js","build-server":"node scripts/buildJdtlsExt.js","vscode:prepublish":"tsc -p ./ && webpack --mode production","tslint":"tslint -t verbose --project tsconfig.json"},"devDependencies":{"@types/fs-extra":"^9.0.13","@types/glob":"^7.2.0","@types/lodash":"^4.14.191","@types/minimatch":"^3.0.3","@types/mocha":"^9.1.1","@types/node":"20.x","@types/semver":"^7.3.13","@types/vscode":"1.83.1","@vscode/test-electron":"^2.4.1","copy-webpack-plugin":"^11.0.0","glob":"^7.2.3","mocha":"^9.2.2","ts-loader":"^9.4.2","tslint":"^6.1.3","typescript":"^4.9.4","vscode-extension-tester":"^7.0.0","webpack":"^5.94.0","webpack-cli":"^4.10.0"},"dependencies":{"await-lock":"^2.2.2","fmtr":"^1.1.4","fs-extra":"^10.1.0","globby":"^13.1.3","lodash":"^4.17.21","minimatch":"^5.1.6","semver":"^7.3.8","vscode-extension-telemetry-wrapper":"^0.14.0","vscode-tas-client":"^0.1.75"}},"location":{"$mid":1,"path":"/Users/andytran/.vscode/extensions/vscjava.vscode-java-dependency-0.24.1","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Microsoft","metadata":{"installedTimestamp":1733083352909,"pinned":false,"source":"gallery","id":"7865e561-1c83-410e-9b99-aabada597a7e","publisherId":"bae08b87-578e-41ec-ab1c-0b036e7add88","publisherDisplayName":"Microsoft","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"vscjava.vscode-java-debug","uuid":"61fcd0cf-64d7-4836-8d6b-d55f4fb83281"},"manifest":{"name":"vscode-java-debug","displayName":"Debugger for Java","description":"A lightweight Java debugger for Visual Studio Code","version":"0.58.1","publisher":"vscjava","preview":false,"aiKey":"0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255","icon":"logo.png","workspaceTrust":{"request":"onDemand","description":"Extension may require your trust on workspace for code execution."},"capabilities":{"virtualWorkspaces":false},"keywords":["java","debug","debugging","debugger"],"engines":{"vscode":"^1.75.0"},"license":"SEE LICENSE IN LICENSE.txt","repository":{"type":"git","url":"https://github.com/Microsoft/vscode-java-debug.git"},"bugs":{"url":"https://github.com/Microsoft/vscode-java-debug/issues"},"homepage":"https://github.com/Microsoft/vscode-java-debug/blob/master/README.md","categories":["Debuggers","Programming Languages","Other"],"activationEvents":["onLanguage:java","onDebugInitialConfigurations","onDebugResolve:java","onCommand:JavaDebug.SpecifyProgramArgs","onCommand:JavaDebug.PickJavaProcess"],"main":"./dist/extension","contributes":{"breakpoints":[{"language":"java"}],"javaExtensions":["./server/com.microsoft.java.debug.plugin-0.53.1.jar"],"commands":[{"command":"java.debug.hotCodeReplace","title":"Hot Code Replace","icon":{"dark":"images/commands/hot_code_replace.svg","light":"images/commands/hot_code_replace.svg"}},{"command":"java.debug.runJavaFile","title":"Run Java","icon":"$(play)"},{"command":"java.debug.debugJavaFile","title":"Debug Java","icon":"$(debug-alt-small)"},{"command":"java.debug.runFromProjectView","title":"Run","icon":"$(play)"},{"command":"java.debug.debugFromProjectView","title":"Debug","icon":"$(debug-alt-small)"},{"command":"java.debug.continueAll","title":"Continue All"},{"command":"java.debug.continueOthers","title":"Continue Others"},{"command":"java.debug.pauseAll","title":"Pause All"},{"command":"java.debug.pauseOthers","title":"Pause Others"},{"command":"java.debug.variables.showHex","title":"Show as Hex"},{"command":"java.debug.variables.notShowHex","title":"Show as Dec"},{"command":"java.debug.variables.showQualifiedNames","title":"Show Qualified Names"},{"command":"java.debug.variables.notShowQualifiedNames","title":"Show Simple Names"},{"command":"java.debug.variables.showStaticVariables","title":"Show Static Variables"},{"command":"java.debug.variables.notShowStaticVariables","title":"Hide Static Variables"},{"command":"java.debug.variables.showLogicalStructure","title":"Enable Logical Structure View"},{"command":"java.debug.variables.notShowLogicalStructure","title":"Disable Logical Structure View"},{"command":"java.debug.variables.showToString","title":"Enable 'toString()' Object View"},{"command":"java.debug.variables.notShowToString","title":"Disable 'toString()' Object View"},{"command":"java.debug.variables.autoExpandLazyVariables","title":"Auto Expand Lazy Variables"},{"command":"java.debug.variables.manualExpandLazyVariables","title":"Manual Expand Lazy Variables"}],"menus":{"view/item/context":[{"command":"java.debug.debugFromProjectView","when":"view == javaProjectExplorer && viewItem =~ /java:project(?=.*?\\b\\+java\\b)(?=.*?\\b\\+uri\\b)/","group":"inline@100"},{"command":"java.debug.runFromProjectView","when":"view == javaProjectExplorer && viewItem =~ /java:project(?=.*?\\b\\+java\\b)(?=.*?\\b\\+uri\\b)/","group":"8_execution@10"},{"command":"java.debug.debugFromProjectView","when":"view == javaProjectExplorer && viewItem =~ /java:project(?=.*?\\b\\+java\\b)(?=.*?\\b\\+uri\\b)/","group":"8_execution@20"}],"explorer/context":[{"command":"java.debug.runJavaFile","when":"resourceExtname == .java","group":"1_javaactions@90"},{"command":"java.debug.debugJavaFile","when":"resourceExtname == .java","group":"1_javaactions@91"}],"editor/context":[{"command":"java.debug.runJavaFile","when":"editorLangId == java && resourceExtname == .java","group":"javadebug@1"},{"command":"java.debug.debugJavaFile","when":"editorLangId == java && resourceExtname == .java","group":"javadebug@2"}],"editor/title/run":[{"command":"java.debug.runJavaFile","when":"resourceExtname == .java","group":"1_javadebug@10"},{"command":"java.debug.debugJavaFile","when":"resourceExtname == .java","group":"1_javadebug@20"}],"debug/toolBar":[{"command":"java.debug.hotCodeReplace","group":"navigation@100","when":"inDebugMode && debugType == java && javaHotReload == 'manual' && javaHotReloadOn"}],"debug/callstack/context":[{"command":"java.debug.continueAll","when":"inDebugMode && debugType == java && callStackItemType == 'thread'"},{"command":"java.debug.continueOthers","when":"inDebugMode && debugType == java && callStackItemType == 'thread'"},{"command":"java.debug.pauseAll","when":"inDebugMode && debugType == java && callStackItemType == 'thread'"},{"command":"java.debug.pauseOthers","when":"inDebugMode && debugType == java && callStackItemType == 'thread'"}],"commandPalette":[{"command":"java.debug.hotCodeReplace","when":"false"},{"command":"java.debug.runJavaFile","when":"false"},{"command":"java.debug.debugJavaFile","when":"false"},{"command":"java.debug.continueAll","when":"false"},{"command":"java.debug.continueOthers","when":"false"},{"command":"java.debug.pauseAll","when":"false"},{"command":"java.debug.pauseOthers","when":"false"},{"command":"java.debug.runFromProjectView","when":"false"},{"command":"java.debug.debugFromProjectView","when":"false"},{"command":"java.debug.variables.showHex","when":"false"},{"command":"java.debug.variables.notShowHex","when":"false"},{"command":"java.debug.variables.showQualifiedNames","when":"false"},{"command":"java.debug.variables.notShowQualifiedNames","when":"false"},{"command":"java.debug.variables.showStaticVariables","when":"false"},{"command":"java.debug.variables.notShowStaticVariables","when":"false"},{"command":"java.debug.variables.showLogicalStructure","when":"false"},{"command":"java.debug.variables.notShowLogicalStructure","when":"false"},{"command":"java.debug.variables.showToString","when":"false"},{"command":"java.debug.variables.notShowToString","when":"false"},{"command":"java.debug.variables.autoExpandLazyVariables","when":"false"},{"command":"java.debug.variables.manualExpandLazyVariables","when":"false"}],"debug/variables/context":[{"command":"java.debug.variables.showHex","when":"debugType == 'java' && javadebug:showHex == 'off'","group":"1_view@1"},{"command":"java.debug.variables.notShowHex","when":"debugType == 'java' && javadebug:showHex == 'on'","group":"1_view@1"},{"command":"java.debug.variables.showQualifiedNames","when":"debugType == 'java' && javadebug:showQualifiedNames == 'off'","group":"1_view@2"},{"command":"java.debug.variables.notShowQualifiedNames","when":"debugType == 'java' && javadebug:showQualifiedNames == 'on'","group":"1_view@2"},{"command":"java.debug.variables.showStaticVariables","when":"debugType == 'java' && javadebug:showStaticVariables == 'off'","group":"1_view@3"},{"command":"java.debug.variables.notShowStaticVariables","when":"debugType == 'java' && javadebug:showStaticVariables == 'on'","group":"1_view@3"},{"command":"java.debug.variables.showLogicalStructure","when":"debugType == 'java' && javadebug:showLogicalStructure == 'off'","group":"1_view@4"},{"command":"java.debug.variables.notShowLogicalStructure","when":"debugType == 'java' && javadebug:showLogicalStructure == 'on'","group":"1_view@4"},{"command":"java.debug.variables.autoExpandLazyVariables","when":"debugType == 'java' && javadebug:expandLazyVariable == 'off'","group":"1_view@6"},{"command":"java.debug.variables.manualExpandLazyVariables","when":"debugType == 'java' && javadebug:expandLazyVariable == 'on'","group":"1_view@6"}]},"debuggers":[{"type":"java","label":"Java","languages":["java"],"variables":{"SpecifyProgramArgs":"JavaDebug.SpecifyProgramArgs","PickJavaProcess":"JavaDebug.PickJavaProcess"},"configurationAttributes":{"launch":{"required":["mainClass"],"properties":{"projectName":{"type":"string","description":"The preferred project in which the debugger searches for classes. There could be duplicated class names in different projects. This setting also works when the debugger looks for the specified main class when launching a program. It is required for expression evaluation.","default":""},"mainClass":{"type":"string","description":"The fully qualified class name (e.g. [java module name/]com.xyz.MainApp) or the java file path of the program entry.","default":""},"javaExec":{"type":"string","description":"The path to java executable to use. If unset project JDK's java executable is used.","default":""},"args":{"type":["array","string"],"description":"The command line arguments passed to the program.","default":""},"vmArgs":{"type":["array","string"],"description":"The extra options and system properties for the JVM (e.g. -Xms<size> -Xmx<size> -D<name>=<value>).","default":""},"modulePaths":{"type":"array","items":{"anyOf":[{"enum":["$Auto","$Runtime","$Test","!<path>"],"enumDescriptions":["Automatically resolve the module paths of current project.","The module paths within 'runtime' scope of current project.","The module paths within 'test' scope of current project.","The path after '!' will be excluded from the modulePaths."]},"string"]},"description":"The modulepaths for launching the JVM. If not specified, the debugger will automatically resolve from current project.","default":[]},"classPaths":{"type":"array","items":{"anyOf":[{"enum":["$Auto","$Runtime","$Test","!<path>"],"enumDescriptions":["Automatically resolve the classpaths of current project.","The classpaths within 'runtime' scope of current project.","The classpaths within 'test' scope of current project.","The path after '!' will be excluded from the classpaths."]},"string"]},"description":"The classpaths for launching the JVM. If not specified, the debugger will automatically resolve from current project.","default":[]},"sourcePaths":{"type":"array","items":{"type":"string"},"description":"The extra source directories of the program. The debugger looks for source code from project settings by default. This option allows the debugger to look for source code in extra directories.","default":[]},"encoding":{"type":"string","description":"The file.encoding setting for the JVM. Possible values can be found in https://docs.oracle.com/javase/8/docs/technotes/guides/intl/encoding.doc.html.","default":"UTF-8"},"cwd":{"type":"string","description":"The working directory of the program. Defaults to the current workspace root.","default":"${workspaceFolder}"},"env":{"type":"object","description":"The extra environment variables for the program.","default":{}},"envFile":{"type":["array","string"],"description":"Absolute path to a file containing environment variable definitions. Multiple files can be specified by providing an array of absolute paths.","default":"${workspaceFolder}/.env"},"stopOnEntry":{"type":"boolean","description":"Automatically pause the program after launching.","default":true},"console":{"type":"string","enum":["internalConsole","integratedTerminal","externalTerminal"],"enumDescriptions":["VS Code debug console (input stream not supported).","VS Code integrated terminal.","External terminal that can be configured in user settings."],"description":"The specified console to launch the program.","default":"integratedTerminal"},"shortenCommandLine":{"type":"string","enum":["none","jarmanifest","argfile","auto"],"enumDescriptions":["Launch the program with the standard command line 'java [options] classname [args]'.","Generate the classpath parameters to a temporary classpath.jar file, and launch the program with the command line 'java -cp classpath.jar classname [args]'.","Generate the classpath parameters to a temporary argument file, and launch the program with the command line 'java @argfile [args]'. This value only applies to Java 9 and higher.","Automatically detect the command line length and determine whether to shorten the command line via an appropriate approach."],"description":"When the project has long classpath or big VM arguments, the command line to launch the program may exceed the maximum command line string limitation allowed by the OS. This configuration item provides multiple approaches to shorten the command line.","default":"auto"},"stepFilters":{"type":"object","description":"Skip specified classes or methods when stepping.","default":{"skipClasses":["$JDK","junit.*"],"skipSynthetics":false,"skipStaticInitializers":false,"skipConstructors":false},"properties":{"skipClasses":{"type":"array","description":"Skip the specified classes when stepping. You could use the built-in variables such as '$JDK' and '$Libraries' to skip a group of classes, or add a specific class name expression, e.g. java.*, *.Foo","items":{"anyOf":[{"enum":["$JDK","$Libraries","java.lang.ClassLoader",""],"enumDescriptions":["Skip the JDK classes from the default system bootstrap classpath, such as rt.jar, jrt-fs.jar.","Skip the classes from application libraries, such as Maven, Gradle dependencies.","Skip the class loaders.","Skip the specified classes. Class names should be fully qualified. Wildcard is supported, e.g. java.*, *.Foo"]},"string"]},"default":["$JDK","junit.*"]},"skipSynthetics":{"type":"boolean","description":"Skip synthetic methods when stepping.","default":true},"skipStaticInitializers":{"type":"boolean","description":"Skip static initializer methods when stepping.","default":true},"skipConstructors":{"type":"boolean","description":"Skip constructor methods when stepping.","default":true}}}}},"attach":{"properties":{"hostName":{"type":"string","default":"localhost","description":"The host name or ip address of remote debuggee."},"port":{"type":["number","string"],"description":"The debug port of remote debuggee."},"processId":{"anyOf":[{"enum":["${command:PickJavaProcess}"],"description":"Use process picker to select a process to attach, or Process ID as integer.","default":"${command:PickJavaProcess}"},{"type":"integer","description":"ID of the local process to attach to."}]},"timeout":{"type":"number","default":30000,"description":"Timeout value before reconnecting, in milliseconds (default to 30000ms)."},"sourcePaths":{"type":"array","items":{"type":"string"},"default":[],"description":"The extra source directories of the program. The debugger looks for source code from project settings by default. This option allows the debugger to look for source code in extra directories."},"projectName":{"type":"string","description":"The preferred project in which the debugger searches for classes. There could be duplicated class names in different projects.","default":""},"stepFilters":{"type":"object","description":"Skip specified classes or methods when stepping.","default":{"skipClasses":["$JDK","junit.*"],"skipSynthetics":false,"skipStaticInitializers":false,"skipConstructors":false},"properties":{"skipClasses":{"type":"array","description":"Skip the specified classes when stepping. You could use the built-in variables such as '$JDK' and '$Libraries' to skip a group of classes, or add a specific class name expression, e.g. java.*, *.Foo","items":{"anyOf":[{"enum":["$JDK","$Libraries","java.lang.ClassLoader",""],"enumDescriptions":["Skip the JDK classes from the default system bootstrap classpath, such as rt.jar, jrt-fs.jar.","Skip the classes from application libraries, such as Maven, Gradle dependencies.","Skip the class loaders.","Skip the specified classes. Class names should be fully qualified. Wildcard is supported, e.g. java.*, *.Foo"]},"string"]},"default":["$JDK","junit.*"]},"skipSynthetics":{"type":"boolean","description":"Skip synthetic methods when stepping.","default":false},"skipStaticInitializers":{"type":"boolean","description":"Skip static initializer methods when stepping.","default":false},"skipConstructors":{"type":"boolean","description":"Skip constructor methods when stepping.","default":false}}}}}},"configurationSnippets":[{"label":"Java: Launch Program","description":"Add a new configuration for launching a java program.","body":{"type":"java","name":"Launch Java Program","request":"launch","mainClass":""}},{"label":"Java: Launch Program in External Terminal","description":"Add a new configuration for launching a java program in the external terminal.","body":{"type":"java","name":"Launch External Terminal","request":"launch","console":"externalTerminal","mainClass":""}},{"label":"Java: Launch Program in Current File","description":"Add a new configuration for launching current java file.","body":{"type":"java","name":"Launch Current File","request":"launch","mainClass":"^\"\\${file}\""}},{"label":"Java: Launch Program with Arguments Prompt","description":"Add a new configuration for launching a java program with arguments prompt.","body":{"type":"java","name":"Launch with Arguments Prompt","request":"launch","mainClass":"","args":"^\"\\${command:SpecifyProgramArgs}\""}},{"label":"Java: Attach","description":"Add a new configuration for attaching to a running java program.","body":{"type":"java","name":"Attach","request":"attach","hostName":"localhost","port":"<debug port of the debuggee>"}},{"label":"Java: Attach to Process","description":"Use process picker to select a Java process to attach to.","body":{"type":"java","request":"attach","name":"Attach by Process ID","processId":"^\"\\${command:PickJavaProcess}\""}},{"label":"Java: Attach to Remote Program","description":"Add a new configuration for attaching to a remote java program.","body":{"type":"java","name":"Attach to Remote Program","request":"attach","hostName":"<The host name or ip address of remote debuggee>","port":"<debug port of remote debuggee>"}}]}],"configuration":{"type":"object","title":"Java Debugger","properties":{"java.debug.logLevel":{"type":"string","default":"warn","description":"Minimum level of debugger logs that are sent to VS Code.","enum":["error","warn","info","verbose"]},"java.debug.settings.showHex":{"type":"boolean","description":"Show numbers in hex format in \"Variables\" viewlet.","default":false},"java.debug.settings.showStaticVariables":{"type":"boolean","description":"Show static variables in \"Variables\" viewlet.","default":false},"java.debug.settings.showQualifiedNames":{"type":"boolean","description":"Show fully qualified class names in \"Variables\" viewlet.","default":false},"java.debug.settings.showLogicalStructure":{"type":"boolean","description":"Show the logical structure for the Collection and Map classes in \"Variables\" viewlet.","default":true},"java.debug.settings.showToString":{"type":"boolean","description":"Show 'toString()' value for all classes that override 'toString' method in \"Variables\" viewlet.","default":true},"java.debug.settings.maxStringLength":{"type":"number","description":"The maximum length of strings displayed in \"Variables\" or \"Debug Console\" viewlet, strings longer than this length will be trimmed, if 0 no trim is performed.","default":0},"java.debug.settings.numericPrecision":{"type":"number","description":"The precision when formatting doubles in \"Variables\" or \"Debug Console\" viewlet.","default":0},"java.debug.settings.hotCodeReplace":{"type":"string","default":"manual","description":"Reload the changed Java classes during debugging.","enum":["auto","manual","never"]},"java.debug.settings.enableRunDebugCodeLens":{"type":"boolean","description":"Enable the run and debug code lens providers over main methods.","default":true},"java.debug.settings.forceBuildBeforeLaunch":{"type":"boolean","description":"Force building the workspace before launching java program.","default":true},"java.debug.settings.onBuildFailureProceed":{"type":"boolean","description":"Force to proceed when build fails","default":false},"java.debug.settings.console":{"type":"string","enum":["internalConsole","integratedTerminal","externalTerminal"],"enumDescriptions":["VS Code debug console (input stream not supported).","VS Code integrated terminal.","External terminal that can be configured in user settings."],"description":"The specified console to launch Java program. If you want to customize the console for a specific debug session, please modify the 'console' config in launch.json.","default":"integratedTerminal"},"java.debug.settings.exceptionBreakpoint.exceptionTypes":{"type":"array","description":"Specifies a set of exception types you want to break on, e.g. java.lang.NullPointerException. A specific exception type and its subclasses can be selected for caught exceptions, uncaught exceptions, or both can be selected.","items":{"type":"string"},"default":[]},"java.debug.settings.exceptionBreakpoint.allowClasses":{"type":"array","description":"Specifies the allowed locations where the exception breakpoint can break on. Wildcard is supported, e.g. java.*, *.Foo","items":{"type":"string"},"default":[]},"java.debug.settings.exceptionBreakpoint.skipClasses":{"type":"array","description":"Skip the specified classes when breaking on exception. You could use the built-in variables such as '$JDK' and '$Libraries' to skip a group of classes, or add a specific class name expression, e.g. java.*, *.Foo","items":{"anyOf":[{"enum":["$JDK","$Libraries","java.lang.ClassLoader",""],"enumDescriptions":["Skip the JDK classes from the default system bootstrap classpath, such as rt.jar, jrt-fs.jar.","Skip the classes from application libraries, such as Maven, Gradle dependencies.","Skip the class loaders.","Skip the specified classes. Class names should be fully qualified. Wildcard is supported, e.g. java.*, *.Foo"]},"string"]},"default":[]},"java.debug.settings.stepping.skipClasses":{"type":"array","description":"Skip the specified classes when stepping. You could use the built-in variables such as '$JDK' and '$Libraries' to skip a group of classes, or add a specific class name expression, e.g. java.*, *.Foo","items":{"anyOf":[{"enum":["$JDK","$Libraries","java.lang.ClassLoader",""],"enumDescriptions":["Skip the JDK classes from the default system bootstrap classpath, such as rt.jar, jrt-fs.jar.","Skip the classes from application libraries, such as Maven, Gradle dependencies.","Skip the class loaders.","Skip the specified classes. Class names should be fully qualified. Wildcard is supported, e.g. java.*, *.Foo"]},"string"]},"default":[]},"java.debug.settings.stepping.skipSynthetics":{"type":"boolean","description":"Skip synthetic methods when stepping.","default":false},"java.debug.settings.stepping.skipStaticInitializers":{"type":"boolean","description":"Skip static initializer methods when stepping.","default":false},"java.debug.settings.stepping.skipConstructors":{"type":"boolean","description":"Skip constructor methods when stepping.","default":false},"java.debug.settings.jdwp.limitOfVariablesPerJdwpRequest":{"type":"number","description":"The maximum number of variables or fields that can be requested in one JDWP request. The higher the value, the less frequently debuggee will be requested when expanding the variable view. Also a large number can cause JDWP request timeout.","default":100,"minimum":1},"java.debug.settings.jdwp.requestTimeout":{"type":"number","description":"The timeout (ms) of JDWP request when the debugger communicates with the target JVM.","default":3000,"minimum":100},"java.debug.settings.jdwp.async":{"type":"string","enum":["auto","on","off"],"description":"Experimental: Controls whether the debugger is allowed to send JDWP commands asynchronously. Async mode can improve remote debugging response speed on high-latency networks.","default":"auto"},"java.debug.settings.vmArgs":{"type":"string","description":"The default VM arguments to launch the Java program. Eg. Use '-Xmx1G -ea' to increase the heap size to 1GB and enable assertions. If you want to customize the VM arguments for a specific debug session, please modify the 'vmArgs' config in launch.json.","default":""},"java.debug.settings.debugSupportOnDecompiledSource":{"type":"string","enum":["on","off"],"description":"[Experimental]: Enable debugging support on the decompiled source code. Be aware that this feature may affect the loading speed of Call Stack Viewlet.","default":"on"},"java.silentNotification":{"type":"boolean","description":"Controls whether notifications can be used to report progress. If true, use status bar to report progress instead.","default":false}}}},"scripts":{"vscode:prepublish":"npm run build","compile":"tsc -p . && webpack --config webpack.config.js","watch":"webpack --config webpack.config.js --watch","build":"webpack --config webpack.config.js --mode=\"production\"","tslint":"tslint -t verbose --project tsconfig.json","build-server":"node scripts/build/buildJdtlsExt.js","test":"npm run compile && node ./out/test/index.js"},"devDependencies":{"@types/glob":"^7.2.0","@types/lodash":"^4.17.13","@types/mocha":"^10.0.9","@types/node":"^14.18.63","@types/uuid":"^8.3.4","@types/vscode":"1.75.0","@vscode/test-electron":"^2.4.1","mocha":"^10.8.2","ts-loader":"^9.5.1","tslint":"^6.1.3","typescript":"^4.9.5","webpack":"^5.95.0","webpack-cli":"^4.10.0"},"dependencies":{"compare-versions":"^4.1.4","dotenv":"^16.4.5","lodash":"^4.17.21","uuid":"^8.3.2","vscode-extension-telemetry-wrapper":"^0.14.0","vscode-languageclient":"6.0.0-next.9","vscode-languageserver-types":"3.16.0","vscode-tas-client":"^0.1.84"}},"location":{"$mid":1,"path":"/Users/andytran/.vscode/extensions/vscjava.vscode-java-debug-0.58.1","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Microsoft","metadata":{"installedTimestamp":1733083352907,"pinned":false,"source":"gallery","id":"61fcd0cf-64d7-4836-8d6b-d55f4fb83281","publisherId":"bae08b87-578e-41ec-ab1c-0b036e7add88","publisherDisplayName":"Microsoft","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"vscjava.vscode-java-test","uuid":"67c06b0d-1891-42ca-b2a8-113e79bff069"},"manifest":{"name":"vscode-java-test","displayName":"Test Runner for Java","description":"Run and debug JUnit or TestNG test cases.","repository":{"url":"https://github.com/Microsoft/vscode-java-test"},"version":"0.43.0","publisher":"vscjava","bugs":{"url":"https://github.com/Microsoft/vscode-java-test/issues"},"homepage":"https://github.com/Microsoft/vscode-java-test","preview":false,"icon":"resources/logo.png","keywords":["java","test","junit","testng","debug"],"aiKey":"0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255","engines":{"vscode":"^1.88.0"},"categories":["Testing"],"capabilities":{"virtualWorkspaces":false,"untrustedWorkspaces":{"supported":false}},"activationEvents":["onLanguage:java","workspaceContains:pom.xml","workspaceContains:*/pom.xml","workspaceContains:build.gradle","workspaceContains:*/build.gradle","workspaceContains:settings.gradle","workspaceContains:*/settings.gradle","workspaceContains:build.gradle.kts","workspaceContains:*/build.gradle.kts","workspaceContains:settings.gradle.kts","workspaceContains:*/settings.gradle.kts","workspaceContains:.classpath","workspaceContains:*/.classpath","onCommand:java.test.editor.run","onCommand:java.test.editor.debug","onCommand:java.test.runFromJavaProjectExplorer","onCommand:java.test.debugFromJavaProjectExplorer"],"main":"./main.js","contributes":{"javaExtensions":["./server/junit-jupiter-api_5.11.0.jar","./server/junit-jupiter-engine_5.11.0.jar","./server/junit-jupiter-migrationsupport_5.11.0.jar","./server/junit-jupiter-params_5.11.0.jar","./server/junit-platform-commons_1.11.0.jar","./server/junit-platform-engine_1.11.0.jar","./server/junit-platform-launcher_1.11.0.jar","./server/junit-platform-runner_1.11.0.jar","./server/junit-platform-suite-api_1.11.0.jar","./server/junit-platform-suite-commons_1.11.0.jar","./server/junit-platform-suite-engine_1.11.0.jar","./server/junit-vintage-engine_5.11.0.jar","./server/org.apiguardian.api_1.1.2.jar","./server/org.eclipse.jdt.junit4.runtime_1.3.100.v20231214-1952.jar","./server/org.eclipse.jdt.junit5.runtime_1.1.300.v20231214-1952.jar","./server/org.opentest4j_1.3.0.jar","./server/org.jacoco.core_0.8.12.202403310830.jar","./server/com.microsoft.java.test.plugin-0.43.0.jar"],"viewsWelcome":[{"view":"testing","contents":"No test cases are listed because the Java Language Server is currently running in [LightWeight Mode](https://aka.ms/vscode-java-lightweight). To show test cases, click on the button to switch to Standard Mode.\n[Switch to Standard Mode](command:java.server.mode.switch?%5B%22Standard%22,true%5D)","when":"java:serverMode == LightWeight"},{"view":"testing","contents":"Click below button to configure a test framework for your project.\n[Enable Java Tests](command:_java.test.enableTests)","when":"java:needSetupTests"}],"menus":{"view/item/context":[{"command":"java.test.runFromJavaProjectExplorer","when":"view == javaProjectExplorer && viewItem =~ /java:(type|package|packageRoot)(?=.*?\\b\\+uri\\b)(?=.*?\\b\\+test\\b)(?!.*?\\b\\+resource\\b)/","group":"8_execution@10"},{"command":"java.test.debugFromJavaProjectExplorer","when":"view == javaProjectExplorer && viewItem =~ /java:(type|package|packageRoot)(?=.*?\\b\\+uri\\b)(?=.*?\\b\\+test\\b)(?!.*?\\b\\+resource\\b)/","group":"8_execution@20"},{"command":"java.test.runFromJavaProjectExplorer","when":"view == javaProjectExplorer && viewItem =~ /java:(type|package|packageRoot)(?=.*?\\b\\+uri\\b)(?=.*?\\b\\+test\\b)(?!.*?\\b\\+resource\\b)/","group":"inline@run_0"}],"commandPalette":[{"command":"java.test.runFromJavaProjectExplorer","when":"false"},{"command":"java.test.debugFromJavaProjectExplorer","when":"false"},{"command":"java.test.editor.run","when":"java:serverMode != LightWeight"},{"command":"java.test.editor.debug","when":"java:serverMode != LightWeight"},{"command":"java.test.goToTest","when":"java:testRunnerActivated && resourceExtname == .java"},{"command":"java.test.goToTestSubject","when":"java:testRunnerActivated && resourceExtname == .java"}],"editor/context":[{"command":"java.test.goToTest","when":"java:testRunnerActivated && resourcePath =~ /.*src[/|\\\\]main[/|\\\\]java[/|\\\\].*\\.java/","group":"navigation@100"},{"command":"java.test.goToTestSubject","when":"java:testRunnerActivated && resourcePath =~ /.*src[/|\\\\]test[/|\\\\]java[/|\\\\].*\\.java/","group":"navigation@100"}]},"commands":[{"command":"java.test.goToTest","title":"Go to Test","category":"Java"},{"command":"java.test.goToTestSubject","title":"Go to Test Subject","category":"Java"},{"command":"java.test.runFromJavaProjectExplorer","title":"Run Tests","icon":"$(play)","category":"Java"},{"command":"java.test.debugFromJavaProjectExplorer","title":"Debug Tests","category":"Java"},{"command":"java.test.editor.run","title":"Run Tests","category":"Java"},{"command":"java.test.editor.debug","title":"Debug Tests","category":"Java"}],"configuration":{"title":"Test Runner for Java","properties":{"java.test.defaultConfig":{"type":"string","description":"Specify the name of the default test configuration.","scope":"resource"},"java.test.config":{"type":["object","array"],"properties":{"name":{"type":"string","description":"Specify the name of the configuration item.","pattern":"^((?!default).)*$","default":""},"workingDirectory":{"type":"string","description":"Specify the working directory when running the tests.","default":"${workspaceFolder}"},"classPaths":{"type":"array","items":{"anyOf":[{"enum":["$Auto","$Runtime","$Test","!<path>"],"enumDescriptions":["Automatically resolve the classpaths of current project.","The classpaths within 'runtime' scope of current project.","The classpaths within 'test' scope of current project.","The path after '!' will be excluded from the classpaths."]},"string"]},"description":"The classpaths defined in this setting will be appended to the resolved classpaths.","default":[]},"modulePaths":{"type":"array","items":{"anyOf":[{"enum":["$Auto","$Runtime","$Test","!<path>"],"enumDescriptions":["Automatically resolve the modulepaths of current project.","The modulepaths within 'runtime' scope of current project.","The modulepaths within 'test' scope of current project.","The path after '!' will be excluded from the modulePaths."]},"string"]},"description":"The modulepaths defined in this setting will be appended to the resolved modulepaths.","default":[]},"javaExec":{"type":"string","markdownDescription":"The path to java executable to use. For example: `C:\\Program Files\\jdk\\bin\\java.exe`. If unset project JDK's java executable is used.","default":""},"encoding":{"type":"string","description":"The 'file.encoding' setting for the test JVM. Only set this if you have to test code that relies on the default encoding being something other than UTF-8.","default":""},"vmArgs":{"type":"array","items":{"type":"string"},"description":"Specify the extra options and system properties for the JVM.","default":[]},"args":{"type":"array","items":{"type":"string"},"description":"Specify the command line arguments which will be passed to the test runner.","default":[]},"env":{"type":"object","description":"Specify the extra environment variables when running the tests.","default":{}},"envFile":{"type":"string","description":"Specify the absolute path to a file containing environment variable definitions.","default":"${workspaceFolder}/.env"},"sourcePaths":{"type":"array","items":{"type":"string"},"description":"Specify extra source paths when debugging the tests.","default":[]},"preLaunchTask":{"type":"string","description":"Specify the label of a task specified in tasks.json (in the workspace's .vscode folder). The task will be launched before the start of testing.","default":""},"postDebugTask":{"type":"string","description":"Specify the label of a task specified in tasks.json (in the workspace's .vscode folder). The task will be launched at the very end of testing.","default":""},"testKind":{"type":"string","markdownDescription":"Specify the targeting test framework for this test configuration. Supported values are `junit`, `testng`.","enum":["junit","testng"],"default":"junit"},"filters":{"type":"object","description":"Specify the test filters.","default":{},"properties":{"tags":{"type":"array","items":{"type":"string"},"markdownDescription":"Specify the tags to be included or excluded. \n\nTags having `!` as the prefix will be **excluded**. \n\nNote: This setting **only** takes effect when `testKind` is set to `junit`.","default":[]}}},"when":{"type":"string","markdownDescription":"Specify the when clause for matching tests by to determine if the configuration should be run with.\n\nNote: `testItem =~ /<regular-expression>/` is the only supported clause currently, where `testItem` is the fully-qualified name of a test class or method. For example:\n- `testItem =~ /^com\\.company\\.package\\.test/` - a package with the name \"com.company.package.test\".\n- `testItem =~ /(?<=\\.)Test/` - a class with a name containing \"Test\".\n\nWhen launching a test that satisfies a single configuration's when clause, it will be run with that configuration. If multiple configurations are satisfied, the user will be prompted to pick which configuration to run with.\n\nWhen launching multiple tests (e.g. for a class or package), a configuration's when clause must be satisfied for **all** tests to be considered.\n\nConfigurations that do not define a when clause will match all tests.","default":""},"coverage":{"type":"object","description":"The configurations for test coverage.","default":{},"properties":{"appendResult":{"type":"boolean","description":"Whether the coverage result is appended.","default":true}}}},"description":"Specify the configurations for running the tests.","items":{"type":"object","description":"Specify the configuration item for running the tests.","properties":{"name":{"type":"string","description":"Specify the name of the configuration item.","pattern":"^((?!default).)*$","default":""},"workingDirectory":{"type":"string","description":"Specify the working directory when running the tests.","default":"${workspaceFolder}"},"classPaths":{"type":"array","items":{"anyOf":[{"enum":["$Auto","$Runtime","$Test","!<path>"],"enumDescriptions":["Automatically resolve the classpaths of current project.","The classpaths within 'runtime' scope of current project.","The classpaths within 'test' scope of current project.","The path after '!' will be excluded from the classpaths."]},"string"]},"description":"The classpaths defined in this setting will be appended to the resolved classpaths.","default":[]},"modulePaths":{"type":"array","items":{"anyOf":[{"enum":["$Auto","$Runtime","$Test","!<path>"],"enumDescriptions":["Automatically resolve the modulepaths of current project.","The modulepaths within 'runtime' scope of current project.","The modulepaths within 'test' scope of current project.","The path after '!' will be excluded from the modulePaths."]},"string"]},"description":"The modulepaths defined in this setting will be appended to the resolved modulepaths.","default":[]},"javaExec":{"type":"string","markdownDescription":"The path to java executable to use. For example: `C:\\Program Files\\jdk\\bin\\java.exe`. If unset project JDK's java executable is used.","default":""},"encoding":{"type":"string","description":"The 'file.encoding' setting for the test JVM. Only set this if you have to test code that relies on the default encoding being something other than UTF-8.","default":""},"vmArgs":{"type":"array","items":{"type":"string"},"description":"Specify the extra options and system properties for the JVM.","default":[]},"args":{"type":"array","items":{"type":"string"},"description":"Specify the command line arguments which will be passed to the test runner.","default":[]},"env":{"type":"object","description":"Specify the extra environment variables when running the tests.","default":{}},"envFile":{"type":"string","description":"Specify the absolute path to a file containing environment variable definitions.","default":"${workspaceFolder}/.env"},"sourcePaths":{"type":"array","items":{"type":"string"},"description":"Specify extra source paths when debugging the tests.","default":[]},"preLaunchTask":{"type":"string","description":"Specify the label of a task specified in tasks.json (in the workspace's .vscode folder). The task will be launched before the start of testing.","default":""},"postDebugTask":{"type":"string","description":"Specify the label of a task specified in tasks.json (in the workspace's .vscode folder). The task will be launched at the very end of testing.","default":""},"testKind":{"type":"string","markdownDescription":"Specify the targeting test framework for this test configuration. Supported values are `junit`, `testng`.","enum":["junit","testng"],"default":"junit"},"filters":{"type":"object","description":"Specify the test filters.","default":{},"properties":{"tags":{"type":"array","items":{"type":"string"},"markdownDescription":"Specify the tags to be included or excluded. \n\nTags having `!` as the prefix will be **excluded**. \n\nNote: This setting **only** takes effect when `testKind` is set to `junit`.","default":[]}}},"when":{"type":"string","markdownDescription":"Specify the when clause for matching tests by to determine if the configuration should be run with.\n\nNote: `testItem =~ /<regular-expression>/` is the only supported clause currently, where `testItem` is the fully-qualified name of a test class or method. For example:\n- `testItem =~ /^com\\.company\\.package\\.test/` - a package with the name \"com.company.package.test\".\n- `testItem =~ /(?<=\\.)Test/` - a class with a name containing \"Test\".\n\nWhen launching a test that satisfies a single configuration's when clause, it will be run with that configuration. If multiple configurations are satisfied, the user will be prompted to pick which configuration to run with.\n\nWhen launching multiple tests (e.g. for a class or package), a configuration's when clause must be satisfied for **all** tests to be considered.\n\nConfigurations that do not define a when clause will match all tests.","default":""},"coverage":{"type":"object","description":"The configurations for test coverage.","default":{},"properties":{"appendResult":{"type":"boolean","description":"Whether the coverage result is appended.","default":true}}}}},"scope":"resource"}}}},"scripts":{"compile":"tsc -p ./","watch":"webpack --mode development --watch","test":"npm run compile && node ./out/test/index.js","lint":"eslint -c .eslintrc.js --ext .ts ./src","build-plugin":"node scripts/buildJdtlsExt.js","vscode:prepublish":"webpack --mode production"},"extensionDependencies":["redhat.java","vscjava.vscode-java-debug"],"devDependencies":{"@types/fs-extra":"^9.0.13","@types/glob":"^7.2.0","@types/lodash":"^4.14.191","@types/lru-cache":"^7.10.10","@types/mocha":"^9.1.1","@types/node":"^16.18.13","@types/sinon":"^10.0.13","@types/vscode":"1.88.0","@typescript-eslint/eslint-plugin":"^5.60.1","@typescript-eslint/parser":"^5.60.1","@vscode/test-electron":"^2.3.8","eslint":"^8.43.0","glob":"^7.2.3","mocha":"^9.2.2","sinon":"^14.0.2","ts-loader":"^9.4.2","typescript":"^4.9.4","webpack":"^5.94.0","webpack-cli":"^4.10.0"},"dependencies":{"fs-extra":"^10.1.0","get-port":"^4.2.0","iconv-lite":"^0.6.3","lodash":"^4.17.21","lru-cache":"^7.17.0","vscode-extension-telemetry-wrapper":"^0.14.0","vscode-languageclient":"6.0.0-next.9","vscode-tas-client":"^0.1.75"}},"location":{"$mid":1,"path":"/Users/andytran/.vscode/extensions/vscjava.vscode-java-test-0.43.0","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Microsoft","metadata":{"installedTimestamp":1733083352908,"pinned":false,"source":"gallery","id":"67c06b0d-1891-42ca-b2a8-113e79bff069","publisherId":"bae08b87-578e-41ec-ab1c-0b036e7add88","publisherDisplayName":"Microsoft","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"visualstudioexptteam.intellicode-api-usage-examples","uuid":"9fa2a00e-3bfa-4c2a-abc4-a865bb2b5cf3"},"manifest":{"name":"intellicode-api-usage-examples","displayName":"IntelliCode API Usage Examples","description":"See relevant code examples from GitHub for over 100K different APIs right in your editor.","repository":{"type":"git","url":"https://github.com/MicrosoftDocs/intellicode"},"version":"0.2.9","aiKey":"0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255","author":"Microsoft","publisher":"VisualStudioExptTeam","engines":{"vscode":"^1.94.0"},"bugs":{"url":"https://go.microsoft.com/fwlink/?linkid=2005855"},"icon":"images/icon.png","categories":["Other"],"keywords":["python","javascript","typescript"],"activationEvents":["onLanguage:python","onLanguage:typescript","onLanguage:javascript","onLanguage:typescriptreact","onLanguage:javascriptreact"],"main":"./dist/extension.js","contributes":{"configuration":{"title":"IntelliCode API Usage Examples","properties":{"intellicodeApiExamples.loggingLevel":{"type":"string","enum":["ALL","DEBUG","INFO","WARN","ERROR","FATAL","OFF"],"default":"INFO","description":"Logging level for console"},"intellicodeApiExamples.python.enabled":{"type":"boolean","default":true,"description":"Enable API Usage Examples for Python files"},"intellicodeApiExamples.typescript.enabled":{"type":"boolean","default":true,"description":"Enable API Usage Examples for Typescript/Javascript files"}}}},"scripts":{"preinstall":"cd src/server && npm i","vscode:prepublish":"npm run webpack","lint":"eslint . --ext .ts,.tsx","webpack":"npm run localize && npm run build:server && webpack --mode production && npm run css","webpackDev":"npm run localize && npm run build:serverDev && webpack --mode development && npm run css","refreshVSToken":"vsts-npm-auth -config .npmrc","package":"vsce package","localize":"gulp localizationBundle && copyfiles -u 2 .localization/out/**/* ./dist","css":"gulp minifyCss","build:server":"cd src/server && npm run build","build:serverDev":"cd src/server && npm run build:dev","test":"node ./out/vscode-tests/runTests.js","pretest":"tsc -p ./ --outDir ./out","posttest":"rmdir /s /q .vscode-test","reloadWebview":"copyfiles -u 3 src/client/gaia-results/*.css dist/gaia-results/ && copyfiles -u 3 src/client/gaia-results/*.js dist/gaia-results/"},"devDependencies":{"@types/glob":"^7.2.0","@types/mocha":"^8.2.3","@types/node":"^16.9.6","@types/vscode":"^1.94.0","@typescript-eslint/eslint-plugin":"^4.31.2","@typescript-eslint/parser":"^4.31.2","@vscode/codicons":"0.0.28","copy-webpack-plugin":"^6.0.3","copyfiles":"^2.4.1","eslint":"^7.32.0","gulp":"^4.0.2","gulp-clean-css":"^4.3.0","gulp-filter":"^7.0.0","gulp-sourcemaps":"^3.0.0","gulp-typescript":"^6.0.0-alpha.1","gulp-concat":"^2.6.1","node-loader":"^0.6.0","ts-loader":"^8.0.18","typemoq":"^2.1.0","typescript":"^4.4.3","vsce":"^1.97.0","vscode-nls-dev":"^3.2.6","vscode-test":"^1.4.1","webpack":"^5.72.0","webpack-cli":"^4.9.2","mocha":"^8.2.1","react":"16.9.0"},"dependencies":{"@gaia-codesearch/gaia-api-python":"0.0.3-ci-main-20230824.2","@gaia-codesearch/gaia-api-typescript":"0.0.3-ci-main-20230824.2","applicationinsights":"^1.7.2","highlight.js":"^11.4.0","@vscode/extension-telemetry":"^0.9.6","vscode-nls":"4.1.1","vscode-tas-client":"^0.1.63","@microsoft/fast-react-wrapper":"0.1.18","@vscode/webview-ui-toolkit":"1.0.0","vscode-languageclient":"^8.1.0"}},"location":{"$mid":1,"path":"/Users/andytran/.vscode/extensions/visualstudioexptteam.intellicode-api-usage-examples-0.2.9","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Microsoft","metadata":{"installedTimestamp":1733083352907,"pinned":false,"source":"gallery","id":"9fa2a00e-3bfa-4c2a-abc4-a865bb2b5cf3","publisherId":"e8db1608-52e8-4d8d-92a6-779c5db302a9","publisherDisplayName":"Microsoft","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"ms-vscode.cpptools","uuid":"690b692e-e8a9-493f-b802-8089d50ac1b2"},"manifest":{"name":"cpptools","displayName":"C/C++","description":"C/C++ IntelliSense, debugging, and code browsing.","version":"1.22.11","publisher":"ms-vscode","icon":"LanguageCCPP_color_128x.png","readme":"README.md","author":{"name":"Microsoft Corporation"},"license":"SEE LICENSE IN LICENSE.txt","engines":{"vscode":"^1.67.0"},"bugs":{"url":"https://github.com/Microsoft/vscode-cpptools/issues","email":"c_cpp_support@microsoft.com"},"repository":{"type":"git","url":"https://github.com/Microsoft/vscode-cpptools.git"},"homepage":"https://github.com/Microsoft/vscode-cpptools","qna":"https://github.com/Microsoft/vscode-cpptools/issues","keywords":["C","C++","IntelliSense","Microsoft","multi-root ready"],"categories":["Programming Languages","Debuggers","Formatters","Linters","Snippets"],"enabledApiProposals":["terminalDataWriteEvent","lmTools"],"capabilities":{"untrustedWorkspaces":{"supported":false,"description":"Multiple settings can cause processes local to the workspace to be executed, e.g. C_Cpp.clang_format_path, C_Cpp.codeAnalysis.clangTidy.path, C_Cpp.addNodeAddonIncludePaths, C_Cpp.default.compilerPath, C_Cpp.default.configurationProvider, and C_Cpp.default.compileCommands, and the equivalent properties in c_cpp_properties.json."},"virtualWorkspaces":false},"activationEvents":["onLanguage:c","onLanguage:cpp","onLanguage:cuda-cpp","onCommand:extension.pickNativeProcess","onCommand:extension.pickRemoteNativeProcess","onDebugResolve:cppdbg","onDebugResolve:cppvsdbg","workspaceContains:/.vscode/c_cpp_properties.json","onFileSystem:cpptools-schema"],"main":"./dist/src/main","contributes":{"walkthroughs":[{"id":"cppWelcome","title":"Get Started with C++ Development","description":"Dive into VS Code's rich C++ development experience.","steps":[{"id":"awaiting.activation.mac","title":"Set up your C++ Environment","description":"Activating the C++ extension to determine whether your C++ Environment has been set up.\nActivating Extension...","when":"workspacePlatform == mac && cpptools.scanForCompilersDone == false","media":{"markdown":"dist/walkthrough/installcompiler/install-clang-macos.md"}},{"id":"awaiting.activation.linux","title":"Set up your C++ Environment","description":"Activating the C++ extension to determine whether your C++ Environment has been set up.\nActivating Extension...","when":"workspacePlatform == linux && cpptools.scanForCompilersDone == false","media":{"markdown":"dist/walkthrough/installcompiler/install-gcc-linux.md"}},{"id":"awaiting.activation.windows","title":"Set up your C++ Environment","description":"Activating the C++ extension to determine whether your C++ Environment has been set up.\nActivating Extension...","when":"workspacePlatform == windows && cpptools.scanForCompilersDone == false && cpptools.windowsVersion != 10 && cpptools.windowsVersion != 11","media":{"markdown":"dist/walkthrough/installcompiler/install-compiler-windows.md"}},{"id":"awaiting.activation.windows10","title":"Set up your C++ Environment","description":"Activating the C++ extension to determine whether your C++ Environment has been set up.\nActivating Extension...","when":"workspacePlatform == windows && cpptools.scanForCompilersDone == false && cpptools.windowsVersion == 10","media":{"markdown":"dist/walkthrough/installcompiler/install-compiler-windows10.md"}},{"id":"awaiting.activation.windows11","title":"Set up your C++ Environment","description":"Activating the C++ extension to determine whether your C++ Environment has been set up.\nActivating Extension...","when":"workspacePlatform == windows && cpptools.scanForCompilersDone == false && cpptools.windowsVersion == 11","media":{"markdown":"dist/walkthrough/installcompiler/install-compiler-windows11.md"}},{"id":"no.compilers.found.mac","title":"Set up your C++ Environment","description":"We could not find a C++ compiler on your machine, which is required to use the C++ extension. Either select “Install a C++ Compiler” to have a compiler installed for you or follow the instructions on the right to install one, then click “Find my new Compiler” below.\n[Install a C++ Compiler](command:C_Cpp.InstallCompiler?%22walkthrough%22)\n[Find my new Compiler](command:C_Cpp.RescanCompilers?%22walkthrough%22)","when":"workspacePlatform == mac && cpptools.scanForCompilersDone == true && cpptools.scanForCompilersEmpty == true","media":{"markdown":"dist/walkthrough/installcompiler/install-clang-macos.md"}},{"id":"no.compilers.found.linux","title":"Set up your C++ Environment","description":"We could not find a C++ compiler on your machine, which is required to use the C++ extension. Either select “Install a C++ Compiler” to have a compiler installed for you or follow the instructions on the right to install one, then click “Find my new Compiler” below.\n[Install a C++ Compiler](command:C_Cpp.InstallCompiler?%22walkthrough%22)\n[Find my new Compiler](command:C_Cpp.RescanCompilers?%22walkthrough%22)","when":"workspacePlatform == linux && cpptools.scanForCompilersDone == true && cpptools.scanForCompilersEmpty == true","media":{"markdown":"dist/walkthrough/installcompiler/install-gcc-linux.md"}},{"id":"no.compilers.found.windows","title":"Set up your C++ Environment","description":"We could not find a C++ compiler on your machine, which is required to use the C++ extension. Follow the instructions on the right to install one, then click “Find my new Compiler” below.\n[Find my new Compiler](command:C_Cpp.RescanCompilers?%22walkthrough%22)","when":"workspacePlatform == windows && cpptools.scanForCompilersDone == true && cpptools.scanForCompilersEmpty == true && cpptools.windowsVersion != 10 && cpptools.windowsVersion != 11","media":{"markdown":"dist/walkthrough/installcompiler/install-compiler-windows.md"}},{"id":"no.compilers.found.windows10","title":"Set up your C++ Environment","description":"We could not find a C++ compiler on your machine, which is required to use the C++ extension. Follow the instructions on the right to install one, then click “Find my new Compiler” below.\n[Find my new Compiler](command:C_Cpp.RescanCompilers?%22walkthrough%22)","when":"workspacePlatform == windows && cpptools.scanForCompilersDone == true && cpptools.scanForCompilersEmpty == true && cpptools.windowsVersion == 10","media":{"markdown":"dist/walkthrough/installcompiler/install-compiler-windows10.md"}},{"id":"no.compilers.found.windows11","title":"Set up your C++ Environment","description":"We could not find a C++ compiler on your machine, which is required to use the C++ extension. Follow the instructions on the right to install one, then click “Find my new Compiler” below.\n[Find my new Compiler](command:C_Cpp.RescanCompilers?%22walkthrough%22)","when":"workspacePlatform == windows && cpptools.scanForCompilersDone == true && cpptools.scanForCompilersEmpty == true && cpptools.windowsVersion == 11","media":{"markdown":"dist/walkthrough/installcompiler/install-compiler-windows11.md"}},{"id":"verify.compiler.mac","title":"Set up your C++ Environment","description":"The C++ extension works with a C++ compiler. Select one from those already on your machine by clicking the button below.\n[Select my Default Compiler](command:C_Cpp.SelectIntelliSenseConfiguration?%22walkthrough%22)","when":"workspacePlatform == mac && cpptools.scanForCompilersDone == true && cpptools.scanForCompilersEmpty == false","media":{"markdown":"dist/walkthrough/installcompiler/install-clang-macos.md"},"completionEvents":["onContext:cpptools.trustedCompilerFound"]},{"id":"verify.compiler.linux","title":"Set up your C++ Environment","description":"The C++ extension works with a C++ compiler. Select one from those already on your machine by clicking the button below.\n[Select my Default Compiler](command:C_Cpp.SelectIntelliSenseConfiguration?%22walkthrough%22)","when":"workspacePlatform == linux && cpptools.scanForCompilersDone == true && cpptools.scanForCompilersEmpty == false","media":{"markdown":"dist/walkthrough/installcompiler/install-gcc-linux.md"},"completionEvents":["onContext:cpptools.trustedCompilerFound"]},{"id":"verify.compiler.windows","title":"Set up your C++ Environment","description":"The C++ extension works with a C++ compiler. Select one from those already on your machine by clicking the button below.\n[Select my Default Compiler](command:C_Cpp.SelectIntelliSenseConfiguration?%22walkthrough%22)","when":"workspacePlatform == windows && cpptools.scanForCompilersDone == true && cpptools.scanForCompilersEmpty == false && cpptools.windowsVersion != 10 && cpptools.windowsVersion != 11","media":{"markdown":"dist/walkthrough/installcompiler/install-compiler-windows.md"},"completionEvents":["onContext:cpptools.trustedCompilerFound"]},{"id":"verify.compiler.windows10","title":"Set up your C++ Environment","description":"The C++ extension works with a C++ compiler. Select one from those already on your machine by clicking the button below.\n[Select my Default Compiler](command:C_Cpp.SelectIntelliSenseConfiguration?%22walkthrough%22)","when":"workspacePlatform == windows && cpptools.scanForCompilersDone == true && cpptools.scanForCompilersEmpty == false && cpptools.windowsVersion == 10","media":{"markdown":"dist/walkthrough/installcompiler/install-compiler-windows10.md"},"completionEvents":["onContext:cpptools.trustedCompilerFound"]},{"id":"verify.compiler.windows11","title":"Set up your C++ Environment","description":"The C++ extension works with a C++ compiler. Select one from those already on your machine by clicking the button below.\n[Select my Default Compiler](command:C_Cpp.SelectIntelliSenseConfiguration?%22walkthrough%22)","when":"workspacePlatform == windows && cpptools.scanForCompilersDone == true && cpptools.scanForCompilersEmpty == false && cpptools.windowsVersion == 11","media":{"markdown":"dist/walkthrough/installcompiler/install-compiler-windows11.md"},"completionEvents":["onContext:cpptools.trustedCompilerFound"]},{"id":"create.cpp.file","title":"Create a C++ file","description":"[Open](command:toSide:workbench.action.files.openFile) or [create](command:toSide:workbench.action.files.newUntitledFile?%7B%22languageId%22%3A%22cpp%22%7D) a C++ file. Be sure to save it with the \".cpp\" extension, such as \"helloworld.cpp\". \n[Create a C++ File](command:toSide:workbench.action.files.newUntitledFile?%7B%22languageId%22%3A%22cpp%22%7D)","media":{"svg":"dist/walkthrough/images/create-a-file.svg","altText":"Open a C++ file or a folder with a C++ project."}},{"id":"relaunch.developer.command.prompt.windows","title":"Launch from the developer command prompt","description":"When using the Microsoft Visual Studio C++ compiler, the C++ extension requires you to launch VS Code from the developer command prompt. Follow the instructions on the right to relaunch.\n[Reload Window](command:workbench.action.reloadWindow)","when":"workspacePlatform == windows","media":{"markdown":"dist/walkthrough/devcommandprompt/open-developer-command-prompt.md"},"completionEvents":["onContext:cpptools.msvcEnvironmentFound"]},{"id":"run.project.mac","title":"Run and debug your C++ file","description":"Open your C++ file and click on the play button in the top right corner of the editor, or press F5 when on the file. Select \"clang++ - Build and debug active file\" to run with the debugger.","when":"workspacePlatform == mac","media":{"altText":"Image showing a breakpoint in a C++ file, the f5 buttobn, and the run symbol in the top right","svg":"dist/walkthrough/images/run-and-debug.svg"}},{"id":"run.project.linux","title":"Run and debug your C++ file","description":"Open your C++ file and click on the play button in the top right corner of the editor, or press F5 when on the file. Select \"g++ - Build and debug active file\" to run with the debugger.","when":"workspacePlatform == linux","media":{"altText":"Image showing a breakpoint in a C++ file, the f5 buttobn, and the run symbol in the top right","svg":"dist/walkthrough/images/run-and-debug.svg"}},{"id":"run.project.windows","title":"Run and debug your C++ file","description":"Open your C++ file and click on the play button in the top right corner of the editor, or press F5 when on the file. Select \"cl.exe - Build and debug active file\" to run with the debugger.","when":"workspacePlatform == windows","media":{"altText":"Image showing a breakpoint in a C++ file, the f5 buttobn, and the run symbol in the top right","svg":"dist/walkthrough/images/run-and-debug.svg"}},{"id":"customize.debugging.linux","title":"Customize debugging","when":"workspacePlatform == linux","description":"To customize your debug configuration, select the Explorer in the activity bar and open a folder that includes your C++ file. Open the C++ file, and select \"Add Debug Configuration\" to the right of the play button. The new debug configuration is saved to your project's launch.json file. \n[Learn More](https://code.visualstudio.com/docs/cpp/config-linux#_debug-helloworldcpp)","media":{"altText":"Image that shows Add Debug Configuration in the drop-down","svg":"dist/walkthrough/images/customize-debugging.svg"}},{"id":"customize.debugging.windows","title":"Customize debugging","when":"workspacePlatform == windows","description":"To customize your debug configuration, select the Explorer in the activity bar and open a folder that includes your C++ file. Open the C++ file, and select \"Add Debug Configuration\" to the right of the play button. The new debug configuration is saved to your project's launch.json file. \n[Learn More](https://code.visualstudio.com/docs/cpp/config-msvc#_debug-helloworldcpp)","media":{"altText":"Image that shows Add Debug Configuration in the drop-down","svg":"dist/walkthrough/images/customize-debugging.svg"}},{"id":"customize.debugging.mac","title":"Customize debugging","when":"workspacePlatform == mac","description":"To customize your debug configuration, select the Explorer in the activity bar and open a folder that includes your C++ file. Open the C++ file, and select \"Add Debug Configuration\" to the right of the play button. The new debug configuration is saved to your project's launch.json file. \n[Learn More](https://code.visualstudio.com/docs/cpp/config-clang-mac#_debug-helloworldcpp)","media":{"altText":"Image that shows Add Debug Configuration in the drop-down","svg":"dist/walkthrough/images/customize-debugging.svg"}}]}],"taskDefinitions":[{"type":"cppbuild","required":["command","label"],"properties":{"label":{"type":"string","description":"The name of the task."},"command":{"oneOf":[{"type":"string"},{"type":"object","required":["value","quoting"],"properties":{"value":{"type":"string","description":"The actual argument value."},"quoting":{"type":"string","enum":["escape","strong","weak"],"enumDescriptions":["Escapes characters using the shell's escape character (e.g. \\ under bash).","Quotes the argument using the shell's strong quote character (e.g. ' under bash).","Quotes the argument using the shell's weak quote character (e.g. \" under bash)."],"default":"strong","description":"How the argument value should be quoted."}}}]},"args":{"type":"array","description":"Additional arguments to pass to the compiler or compilation script.","items":{"oneOf":[{"type":"string"},{"type":"object","required":["value","quoting"],"properties":{"value":{"type":"string","description":"The actual argument value."},"quoting":{"type":"string","enum":["escape","strong","weak"],"enumDescriptions":["Escapes characters using the shell's escape character (e.g. \\ under bash).","Quotes the argument using the shell's strong quote character (e.g. ' under bash).","Quotes the argument using the shell's weak quote character (e.g. \" under bash)."],"default":"strong","description":"How the argument value should be quoted."}}}]}},"options":{"type":"object","description":"Additional command options.","properties":{"cwd":{"type":"string","description":"The current working directory of the executed program or script. If omitted Code's current workspace root is used."}}},"detail":{"type":"string","description":"Additional details of the task."}}}],"views":{"references-view":[{"id":"CppReferencesView","name":"C/C++: Other references results","when":"cpptools.hasReferencesResults"}],"debug":[{"id":"CppSshTargetsView","name":"Cpptools: SSH targets","when":"cpptools.enableSshTargetsView"}]},"viewsWelcome":[{"view":"debug","contents":"To learn more about launch.json, see [Configuring C/C++ debugging](https://code.visualstudio.com/docs/cpp/launch-json-reference).","when":"debugStartLanguage == cpp || debugStartLanguage == c || debugStartLanguage == cuda-cpp"}],"problemMatchers":[{"name":"gcc","source":"gcc","owner":"cpptools","fileLocation":["autoDetect","${cwd}"],"pattern":{"regexp":"^(.*?):(\\d+):(\\d*):?\\s+(?:fatal\\s+)?(warning|error):\\s+(.*)$","file":1,"line":2,"column":3,"severity":4,"message":5}},{"name":"iar","source":"iar","owner":"cpptools","fileLocation":"absolute","pattern":{"regexp":"^\"(.*?)\",(\\d+)\\s+(?:[Ff]atal\\s+)?([Ww]arning|[Ee]rror)\\[(\\w+\\d+)\\]:\\s+(.*)$","file":1,"line":2,"severity":3,"code":4,"message":5}},{"name":"armcc5","source":"armcc5","owner":"cpptools","fileLocation":["autoDetect","${cwd}"],"pattern":{"regexp":"^\"(.*)?\",\\s+line\\s+(\\d+):\\s+([Ee]rror|[Ww]arning):\\s+#(.*?):\\s+(.*)$","file":1,"line":2,"severity":3,"code":4,"message":5}}],"configuration":[{"title":"IntelliSense","properties":{"C_Cpp.inlayHints.autoDeclarationTypes.enabled":{"type":"boolean","default":false,"markdownDescription":"Display inlay hints for deduced type when `auto` is used in a declaration:\n```cpp \n\n auto index /* : int */ = 0;\n```","scope":"resource"},"C_Cpp.inlayHints.autoDeclarationTypes.showOnLeft":{"type":"boolean","default":false,"markdownDescription":"Display inlay hints for deduced type when `auto` is used in a declaration on the left of the identifier:\n```cpp \n\n auto /* int */ index = 0;\n```","scope":"resource"},"C_Cpp.inlayHints.parameterNames.enabled":{"type":"boolean","default":false,"markdownDescription":"Display inlay hints for parameter names:\n```cpp \n\n int a = getArea(/* width: */ x, /* height: */ y);\n```","scope":"resource"},"C_Cpp.inlayHints.parameterNames.suppressWhenArgumentContainsName":{"type":"boolean","default":true,"markdownDescription":"Suppress parameter name hints when the argument text or inline comment contains the parameter name:\n```cpp \n\n int a = getArea(width, /* height: */ y);\n```","scope":"resource"},"C_Cpp.inlayHints.parameterNames.hideLeadingUnderscores":{"type":"boolean","default":true,"markdownDescription":"Hide leading `_` in parameter name hints.","scope":"resource"},"C_Cpp.inlayHints.referenceOperator.enabled":{"type":"boolean","default":false,"markdownDescription":"Display the inlay hint reference operator `&` for parameters passed by non-const reference:\n```cpp \n\n swap(/* &first: */ str1, /* &last: */ str2);\n```","scope":"resource"},"C_Cpp.inlayHints.referenceOperator.showSpace":{"type":"boolean","default":false,"markdownDescription":"Controls whether a space is shown after `&` for parameters passed by non-const reference:\n```cpp \n\n swap(/* & first: */ str1, /* & last: */ str2);\n```","scope":"resource"},"C_Cpp.intelliSenseUpdateDelay":{"type":"number","default":1000,"description":"Controls the delay in milliseconds before IntelliSense starts updating after a modification.","scope":"application","minimum":500,"maximum":3000},"C_Cpp.codeFolding":{"type":"string","enum":["enabled","disabled"],"default":"enabled","description":"If enabled, code folding ranges are provided by the language server.","scope":"window"},"C_Cpp.autocompleteAddParentheses":{"type":"boolean","default":false,"markdownDescription":"If `true`, autocomplete will automatically add `(` after function calls, in which case `)` may also be added, depending on the value of the `#editor.autoClosingBrackets#` setting.","scope":"resource"},"C_Cpp.suggestSnippets":{"type":"boolean","default":true,"markdownDescription":"If `true`, snippets are provided by the language server.","scope":"resource"},"C_Cpp.enhancedColorization":{"type":"string","enum":["enabled","disabled"],"default":"enabled","markdownDescription":"If enabled, code is colorized based on IntelliSense. This setting only applies if `#C_Cpp.intelliSenseEngine#` is set to `default`.","scope":"window"},"C_Cpp.legacyCompilerArgsBehavior":{"type":"boolean","default":false,"markdownDescription":"Enable pre-v1.10.0 behavior for how shell escaping is handled in compiler arg settings. Shell escaping is no longer expected or supported by default in arg arrays starting in v1.10.0.","scope":"resource"},"C_Cpp.autocomplete":{"type":"string","enum":["default","disabled"],"default":"default","markdownDescription":"Controls the auto-completion provider. If `disabled` and you want word-based completion, you will also need to set `\"[cpp]\": {\"editor.wordBasedSuggestions\": <value>}` (and similarly for `c` and `cuda-cpp` languages).","enumDescriptions":["Uses the active IntelliSense engine.","Uses the word-based completion provided by Visual Studio Code."],"scope":"resource"},"C_Cpp.hover":{"type":"string","enum":["default","disabled"],"default":"default","description":"If disabled, hover details are no longer provided by the language server.","scope":"resource"},"C_Cpp.errorSquiggles":{"type":"string","enum":["enabled","disabled","enabledIfIncludesResolve"],"default":"enabledIfIncludesResolve","description":"Controls whether suspected compile errors detected by the IntelliSense engine will be reported back to the editor. It also controls whether code analysis warnings are reported if includes can't be found. This setting is ignored by the Tag Parser engine.","scope":"resource"},"C_Cpp.dimInactiveRegions":{"type":"boolean","default":true,"description":"Controls whether inactive preprocessor blocks are colored differently than active code. This setting has no effect if IntelliSense is disabled or if using the Default High Contrast theme.","scope":"resource"},"C_Cpp.inactiveRegionOpacity":{"type":"number","default":0.55,"markdownDescription":"Controls the opacity of inactive preprocessor blocks. Scales between `0.1` and `1.0`. This setting only applies when inactive region dimming is enabled.","scope":"resource","minimum":0.1,"maximum":1},"C_Cpp.inactiveRegionForegroundColor":{"type":"string","description":"Controls the font coloring of inactive preprocessor blocks. Input is in the form a hexadecimal color code or a valid Theme Color. If not set, this defaults to the syntax coloring scheme of the editor. This setting only applies when inactive region dimming is enabled.","scope":"resource"},"C_Cpp.inactiveRegionBackgroundColor":{"type":"string","description":"Controls the background coloring of inactive preprocessor blocks. Input is in the form a hexadecimal color code or a valid Theme Color. If not set, this defaults to transparent. This setting only applies when inactive region dimming is enabled.","scope":"resource"},"C_Cpp.refactoring.includeHeader":{"type":"string","enum":["always","ifNeeded","never"],"default":"always","markdownDescription":"Controls whether to include the header file of a refactored function/symbol to its corresponding source file when doing a refactoring action, such as create declaration/definition.","enumDescriptions":["Always include the header file if it is not included explicitly in its source file.","Only include the header file if it is not included explicitly in its source file or through implicit inclusion.","Never include the header file."],"scope":"resource"},"C_Cpp.renameRequiresIdentifier":{"type":"boolean","default":true,"markdownDescription":"If `true`, 'Rename Symbol' will require a valid C/C++ identifier.","scope":"application"},"C_Cpp.workspaceSymbols":{"type":"string","enum":["All","Just My Code"],"default":"Just My Code","description":"The symbols to include in the query results when 'Go to Symbol in Workspace' is invoked.","scope":"window"},"C_Cpp.default.includePath":{"type":"array","items":{"type":"string"},"uniqueItems":true,"markdownDescription":"The value to use in a configuration if `includePath` is not specified in `c_cpp_properties.json`. If `includePath` is specified, add `${default}` to the array to insert the values from this setting. Usually, this should not include system includes; instead, set `#C_Cpp.default.compilerPath#`.","scope":"machine-overridable"},"C_Cpp.default.defines":{"type":"array","items":{"type":"string"},"uniqueItems":true,"markdownDescription":"The value to use in a configuration if `defines` is not specified, or the values to insert if `${default}` is present in `defines`.","scope":"machine-overridable"},"C_Cpp.default.macFrameworkPath":{"type":"array","items":{"type":"string"},"uniqueItems":true,"markdownDescription":"The value to use in a configuration if `macFrameworkPath` is not specified, or the values to insert if `${default}` is present in `macFrameworkPath`.","scope":"machine-overridable"},"C_Cpp.default.windowsSdkVersion":{"type":"string","markdownDescription":"Version of the Windows SDK include path to use on Windows, e.g. `10.0.17134.0`.","pattern":"^((\\d{2}\\.\\d{1}\\.\\d{5}\\.\\d{1}$|^8\\.1)|())$","scope":"machine-overridable"},"C_Cpp.default.compileCommands":{"type":"string","markdownDescription":"The value to use in a configuration if `compileCommands` is either not specified, or set to `${default}`.","scope":"machine-overridable"},"C_Cpp.default.forcedInclude":{"type":"array","items":{"type":"string"},"uniqueItems":true,"markdownDescription":"The value to use in a configuration if `forcedInclude` is not specified, or the values to insert if `${default}` is present in `forcedInclude`.","scope":"machine-overridable"},"C_Cpp.default.intelliSenseMode":{"type":"string","enum":["","macos-clang-x86","macos-clang-x64","macos-clang-arm","macos-clang-arm64","macos-gcc-x86","macos-gcc-x64","macos-gcc-arm","macos-gcc-arm64","linux-clang-x86","linux-clang-x64","linux-clang-arm","linux-clang-arm64","linux-gcc-x86","linux-gcc-x64","linux-gcc-arm","linux-gcc-arm64","windows-clang-x86","windows-clang-x64","windows-clang-arm","windows-clang-arm64","windows-gcc-x86","windows-gcc-x64","windows-gcc-arm","windows-gcc-arm64","windows-msvc-x86","windows-msvc-x64","windows-msvc-arm","windows-msvc-arm64","clang-x86","clang-x64","clang-arm","clang-arm64","gcc-x86","gcc-x64","gcc-arm","gcc-arm64","msvc-x86","msvc-x64","msvc-arm","msvc-arm64"],"markdownDescription":"The value to use in a configuration if `intelliSenseMode` is either not specified or set to `${default}`.","scope":"machine-overridable"},"C_Cpp.default.compilerPath":{"type":["string","null"],"default":null,"markdownDescription":"The value to use in a configuration if `compilerPath` is either not specified or set to `${default}`.","scope":"machine-overridable"},"C_Cpp.default.compilerArgs":{"type":"array","items":{"type":"string"},"uniqueItems":true,"markdownDescription":"The value to use in configuration if `compilerArgs` is either not specified or set to `${default}`.","scope":"machine-overridable"},"C_Cpp.default.cStandard":{"type":"string","enum":["","c89","c99","c11","c17","c23","gnu89","gnu99","gnu11","gnu17","gnu23"],"markdownDescription":"The value to use in a configuration if `cStandard` is either not specified or set to `${default}`.","scope":"resource"},"C_Cpp.default.cppStandard":{"type":"string","enum":["","c++98","c++03","c++11","c++14","c++17","c++20","c++23","gnu++98","gnu++03","gnu++11","gnu++14","gnu++17","gnu++20","gnu++23"],"markdownDescription":"The value to use in a configuration if `cppStandard` is either not specified or set to `${default}`.","scope":"resource"},"C_Cpp.default.configurationProvider":{"type":"string","markdownDescription":"The value to use in a configuration if `configurationProvider` is either not specified or set to `${default}`.","scope":"resource"},"C_Cpp.default.mergeConfigurations":{"type":"boolean","markdownDescription":"Set to `true` to merge include paths, defines, and forced includes with those from a configuration provider.","scope":"resource"},"C_Cpp.default.browse.path":{"type":"array","items":{"type":"string"},"uniqueItems":true,"default":null,"markdownDescription":"The value to use in a configuration if `browse.path` is not specified, or the values to insert if `${default}` is present in `browse.path`.","scope":"machine-overridable"},"C_Cpp.default.browse.databaseFilename":{"type":"string","markdownDescription":"The value to use in a configuration if `browse.databaseFilename` is either not specified or set to `${default}`.","scope":"machine-overridable"},"C_Cpp.default.browse.limitSymbolsToIncludedHeaders":{"type":"boolean","default":true,"markdownDescription":"The value to use in a configuration if `browse.limitSymbolsToIncludedHeaders` is either not specified or set to `${default}`.","scope":"resource"},"C_Cpp.default.systemIncludePath":{"type":"array","items":{"type":"string"},"uniqueItems":true,"markdownDescription":"The value to use for the system include path. If set, it overrides the system include path acquired via `compilerPath` and `compileCommands` settings.","scope":"machine-overridable"},"C_Cpp.default.customConfigurationVariables":{"type":["object","null"],"default":null,"patternProperties":{"(^.+$)":{"type":"string"}},"markdownDescription":"The value to use in a configuration if `customConfigurationVariables` is not set, or the values to insert if `${default}` is present as a key in `customConfigurationVariables`.","scope":"machine-overridable"},"C_Cpp.default.enableConfigurationSquiggles":{"type":"boolean","default":true,"markdownDescription":"Controls whether the extension will report errors detected in `c_cpp_properties.json`.","scope":"resource"},"C_Cpp.default.dotConfig":{"type":"string","markdownDescription":"The value to use in a configuration if `dotConfig` is not specified, or the value to insert if `${default}` is present in `dotConfig`.","scope":"resource"},"C_Cpp.configurationWarnings":{"type":"string","enum":["enabled","disabled"],"default":"enabled","description":"Determines whether pop up notifications will be shown when a configuration provider extension is unable to provide a configuration for a source file.","scope":"resource"},"C_Cpp.workspaceParsingPriority":{"type":"string","enum":["highest","high","medium","low"],"default":"highest","markdownDescription":"Controls whether parsing of the non-active workspace files uses sleeps to avoid using 100% CPU. The values `highest`/`high`/`medium`/`low` correspond to approximately 100/75/50/25% CPU usage.","scope":"window"},"C_Cpp.intelliSenseEngine":{"type":"string","enum":["default","Tag Parser","disabled"],"default":"default","description":"Controls the IntelliSense provider.","enumDescriptions":["Provides context-aware results via a separate IntelliSense process.","Provides \"fuzzy\" results that are not context-aware.","Turns off C/C++ language service features."],"scope":"resource"},"C_Cpp.exclusionPolicy":{"type":"string","enum":["checkFolders","checkFilesAndFolders"],"default":"checkFolders","markdownDescription":"Instructs the extension when to use the `#files.exclude#` (and `#C_Cpp.files.exclude#`) setting when determining which files should be added to the code navigation database while traversing through the paths in the `browse.path` array. If your `#files.exclude#` setting only contains folders, then `checkFolders` is the best choice and will increase the speed at which the extension can initialize the code navigation database.","enumDescriptions":["The exclusion filters will only be evaluated once per folder (individual files are not checked).","The exclusion filters will be evaluated against every file and folder encountered."],"scope":"resource"},"C_Cpp.files.exclude":{"type":"object","markdownDescription":"Configure glob patterns for excluding folders (and files if `#C_Cpp.exclusionPolicy#` is changed). These are specific to the C/C++ extension and are in addition to `#files.exclude#`, but unlike `#files.exclude#` they also apply to paths outside the current workspace folder and are not removed from the Explorer view. Learn more about [glob patterns](https://code.visualstudio.com/docs/editor/codebasics#_advanced-search-options).","default":{"**/.vscode":true,"**/.vs":true},"additionalProperties":{"anyOf":[{"type":"boolean","markdownDescription":"The glob pattern to match file paths against. Set to `true` or `false` to enable or disable the pattern."},{"type":"object","properties":{"when":{"type":"string","pattern":"\\w*\\$\\(basename\\)\\w*","default":"$(basename).ext","markdownDescription":"Additional check on the siblings of a matching file. Use `$(basename)` as variable for the matching file name."}}}]},"scope":"resource"}}},{"title":"Formatting","properties":{"C_Cpp.vcFormat.indent.braces":{"type":"boolean","default":false,"markdownDescription":"Braces are indented by the amount specified in the `#editor.tabSize#` setting.","scope":"resource"},"C_Cpp.vcFormat.indent.multiLineRelativeTo":{"type":"string","enum":["outermostParenthesis","innermostParenthesis","statementBegin"],"enumDescriptions":["Indent new line relative to the outermost open parenthesis.","Indent new line relative to the innermost open parenthesis.","Indent new line relative to the beginning of the current statement."],"default":"innermostParenthesis","description":"Determines what new line indentation is relative to.","scope":"resource"},"C_Cpp.vcFormat.indent.withinParentheses":{"type":"string","enum":["alignToParenthesis","indent"],"markdownEnumDescriptions":["New line is aligned under the opening parenthesis.","New line is indented based on `#C_Cpp.vcFormat.indent.multiLineRelativeTo#`."],"default":"indent","markdownDescription":"When a new line is typed, it is aligned under the opening parenthesis or based on `#C_Cpp.vcFormat.indent.multiLineRelativeTo#`.","scope":"resource"},"C_Cpp.vcFormat.indent.preserveWithinParentheses":{"type":"boolean","default":false,"description":"In existing code, preserve the existing indent alignment of new lines within parentheses.","scope":"resource"},"C_Cpp.vcFormat.indent.caseLabels":{"type":"boolean","default":false,"markdownDescription":"Labels are indented relative to switch statements by the amount specified in the `#editor.tabSize#` setting.","scope":"resource"},"C_Cpp.vcFormat.indent.caseContents":{"type":"boolean","default":true,"markdownDescription":"Code inside a `case` block is indented relative to its label by the amount specified in the `#editor.tabSize#` setting.","scope":"resource"},"C_Cpp.vcFormat.indent.caseContentsWhenBlock":{"type":"boolean","default":false,"markdownDescription":"Indent braces following a case statement by the amount specified in the `#editor.tabSize#` setting.","scope":"resource"},"C_Cpp.vcFormat.indent.lambdaBracesWhenParameter":{"type":"boolean","default":true,"markdownDescription":"Indent braces of lambdas used as function parameters relative to the start of the statement by the amount specified in the `#editor.tabSize#` setting.","scope":"resource"},"C_Cpp.vcFormat.indent.gotoLabels":{"type":"string","enum":["oneLeft","leftmostColumn","none"],"markdownEnumDescriptions":["Position goto labels to the left of the current code indentation, by the amount specified in the `#editor.tabSize#` setting.","Position goto labels at the leftmost edge of the code.","Goto labels will not be formatted."],"default":"oneLeft","description":"The position of goto labels.","scope":"resource"},"C_Cpp.vcFormat.indent.preprocessor":{"type":"string","enum":["oneLeft","leftmostColumn","none"],"markdownEnumDescriptions":["Preprocessor directives are positioned to the left of the current code indentation, by the amount specified in the `#editor.tabSize#` setting.","Preprocessor directives are positioned at the leftmost edge of the code.","Preprocessor directives will not be formatted."],"default":"leftmostColumn","description":"The position of preprocessor directives.","scope":"resource"},"C_Cpp.vcFormat.indent.accessSpecifiers":{"type":"boolean","default":false,"markdownDescription":"Access specifiers are indented relative to class or struct definitions by the amount specified in the `#editor.tabSize#` setting.","scope":"resource"},"C_Cpp.vcFormat.indent.namespaceContents":{"type":"boolean","default":true,"markdownDescription":"Code is indented relative to its enclosing namespace by the amount specified in the `#editor.tabSize#` setting.","scope":"resource"},"C_Cpp.vcFormat.indent.preserveComments":{"type":"boolean","default":false,"description":"Indentation of comments is not changed during formatting operations.","scope":"resource"},"C_Cpp.vcFormat.newLine.beforeOpenBrace.namespace":{"type":"string","enum":["newLine","sameLine","ignore"],"enumDescriptions":["Opening braces are moved to a new line.","Opening braces are kept on the same line and a space is added before each one.","Opening braces are not formatted."],"default":"ignore","description":"The position of opening braces for namespaces.","scope":"resource"},"C_Cpp.vcFormat.newLine.beforeOpenBrace.type":{"type":"string","enum":["newLine","sameLine","ignore"],"enumDescriptions":["Opening braces are moved to a new line.","Opening braces are kept on the same line and a space is added before each one.","Opening braces are not formatted."],"default":"ignore","description":"The position of opening braces for type definitions.","scope":"resource"},"C_Cpp.vcFormat.newLine.beforeOpenBrace.function":{"type":"string","enum":["newLine","sameLine","ignore"],"enumDescriptions":["Opening braces are moved to a new line.","Opening braces are kept on the same line and a space is added before each one.","Opening braces are not formatted."],"default":"ignore","description":"The position of opening braces for functions.","scope":"resource"},"C_Cpp.vcFormat.newLine.beforeOpenBrace.block":{"type":"string","enum":["newLine","sameLine","ignore"],"enumDescriptions":["Opening braces are moved to a new line.","Opening braces are kept on the same line and a space is added before each one.","Opening braces are not formatted."],"default":"ignore","description":"The position of opening braces for control blocks.","scope":"resource"},"C_Cpp.vcFormat.newLine.beforeOpenBrace.lambda":{"type":"string","enum":["newLine","sameLine","ignore"],"enumDescriptions":["Opening braces are moved to a new line.","Opening braces are kept on the same line and a space is added before each one.","Opening braces are not formatted."],"default":"ignore","description":"The position of opening braces for lambda functions.","scope":"resource"},"C_Cpp.vcFormat.newLine.scopeBracesOnSeparateLines":{"type":"boolean","default":false,"description":"Place opening and closing braces for scopes on separate lines.","scope":"resource"},"C_Cpp.vcFormat.newLine.closeBraceSameLine.emptyType":{"type":"boolean","default":false,"description":"For empty types, move closing braces to the same line as opening braces.","scope":"resource"},"C_Cpp.vcFormat.newLine.closeBraceSameLine.emptyFunction":{"type":"boolean","default":false,"description":"For empty function bodies, move closing braces to the same line as opening braces.","scope":"resource"},"C_Cpp.vcFormat.newLine.beforeCatch":{"type":"boolean","default":true,"markdownDescription":"Place `catch` and similar keywords on a new line.","scope":"resource"},"C_Cpp.vcFormat.newLine.beforeElse":{"type":"boolean","default":true,"markdownDescription":"Place `else` on a new line.","scope":"resource"},"C_Cpp.vcFormat.newLine.beforeWhileInDoWhile":{"type":"boolean","default":false,"markdownDescription":"Place `while` in a `do`-`while` loop on a new line.","scope":"resource"},"C_Cpp.vcFormat.space.beforeFunctionOpenParenthesis":{"type":"string","enum":["insert","remove","ignore"],"enumDescriptions":["Add a space before the opening parenthesis of a function.","Spaces before opening parenthesis of a function are removed.","Spaces are left as entered."],"default":"remove","description":"Spacing between function names and opening parentheses of argument lists.","scope":"resource"},"C_Cpp.vcFormat.space.withinParameterListParentheses":{"type":"boolean","default":false,"description":"A space is added after the opening parenthesis and also before the closing parenthesis in function parameter lists.","scope":"resource"},"C_Cpp.vcFormat.space.betweenEmptyParameterListParentheses":{"type":"boolean","default":false,"description":"When a function parameter list is empty, a space is inserted between its parentheses.","scope":"resource"},"C_Cpp.vcFormat.space.afterKeywordsInControlFlowStatements":{"type":"boolean","default":true,"description":"A space is added between the keyword and opening parenthesis in control flow statements.","scope":"resource"},"C_Cpp.vcFormat.space.withinControlFlowStatementParentheses":{"type":"boolean","default":false,"description":"A space is added after the opening parenthesis and also before the closing parenthesis in control flow statements.","scope":"resource"},"C_Cpp.vcFormat.space.beforeLambdaOpenParenthesis":{"type":"boolean","default":false,"description":"A space is added before the opening parenthesis of lambda argument lists.","scope":"resource"},"C_Cpp.vcFormat.space.withinCastParentheses":{"type":"boolean","default":false,"description":"A space is added after the opening parenthesis and also before the closing parenthesis of a C-style cast.","scope":"resource"},"C_Cpp.vcFormat.space.afterCastCloseParenthesis":{"type":"boolean","default":false,"description":"A space is added after the closing parenthesis of a C-style cast.","scope":"resource"},"C_Cpp.vcFormat.space.withinExpressionParentheses":{"type":"boolean","default":false,"description":"A space is added after the opening parenthesis and also before the closing parenthesis of a parenthesized expression.","scope":"resource"},"C_Cpp.vcFormat.space.beforeBlockOpenBrace":{"type":"boolean","default":true,"description":"A space is added before the opening braces of scope blocks.","scope":"resource"},"C_Cpp.vcFormat.space.betweenEmptyBraces":{"type":"boolean","default":false,"description":"When braces are empty and on the same line, a space is inserted between them.","scope":"resource"},"C_Cpp.vcFormat.space.beforeInitializerListOpenBrace":{"type":"boolean","default":false,"description":"A space is added before the opening brace of uniform initialization and initializer lists.","scope":"resource"},"C_Cpp.vcFormat.space.withinInitializerListBraces":{"type":"boolean","default":true,"description":"A space is added after the opening brace and also before the closing brace of uniform initialization and initializer lists.","scope":"resource"},"C_Cpp.vcFormat.space.preserveInInitializerList":{"type":"boolean","default":true,"description":"Spaces around commas are preserved inside uniform initialization and initializer lists.","scope":"resource"},"C_Cpp.vcFormat.space.beforeOpenSquareBracket":{"type":"boolean","default":false,"description":"A space is added before opening square brackets.","scope":"resource"},"C_Cpp.vcFormat.space.withinSquareBrackets":{"type":"boolean","default":false,"description":"A space is added after the opening square bracket and also before the closing square bracket.","scope":"resource"},"C_Cpp.vcFormat.space.beforeEmptySquareBrackets":{"type":"boolean","default":false,"description":"When square brackets are empty, a space is added before the opening bracket.","scope":"resource"},"C_Cpp.vcFormat.space.betweenEmptySquareBrackets":{"type":"boolean","default":false,"description":"When square brackets are empty, a space is inserted between them.","scope":"resource"},"C_Cpp.vcFormat.space.groupSquareBrackets":{"type":"boolean","default":true,"description":"For multi-dimensional arrays, all space between brackets is removed. Other settings that control space are overridden.","scope":"resource"},"C_Cpp.vcFormat.space.withinLambdaBrackets":{"type":"boolean","default":false,"description":"A space is added after the opening square bracket and also before the closing square bracket.","scope":"resource"},"C_Cpp.vcFormat.space.betweenEmptyLambdaBrackets":{"type":"boolean","default":false,"description":"When square brackets are empty, a space is inserted between them.","scope":"resource"},"C_Cpp.vcFormat.space.beforeComma":{"type":"boolean","default":false,"description":"A space is added before every comma.","scope":"resource"},"C_Cpp.vcFormat.space.afterComma":{"type":"boolean","default":true,"description":"A space is added after every comma.","scope":"resource"},"C_Cpp.vcFormat.space.removeAroundMemberOperators":{"type":"boolean","default":true,"description":"Spaces around member access operators, pointer-to-member operators, and scope resolution operators are removed.","scope":"resource"},"C_Cpp.vcFormat.space.beforeInheritanceColon":{"type":"boolean","default":true,"description":"A space is added before the colon for inherited types in class definitions.","scope":"resource"},"C_Cpp.vcFormat.space.beforeConstructorColon":{"type":"boolean","default":true,"description":"A space is added before the colon in constructor definitions.","scope":"resource"},"C_Cpp.vcFormat.space.removeBeforeSemicolon":{"type":"boolean","default":true,"description":"Spaces are removed before every semicolon.","scope":"resource"},"C_Cpp.vcFormat.space.insertAfterSemicolon":{"type":"boolean","default":false,"description":"A space is inserted after every semicolon.","scope":"resource"},"C_Cpp.vcFormat.space.removeAroundUnaryOperator":{"type":"boolean","default":true,"description":"Spaces between unary operators and operands are removed.","scope":"resource"},"C_Cpp.vcFormat.space.aroundBinaryOperator":{"type":"string","enum":["insert","remove","ignore"],"enumDescriptions":["A space is added before the operator and also after it.","Spaces before and after the operator are removed.","Spaces are left as entered."],"default":"insert","description":"Spaces around binary operators.","scope":"resource"},"C_Cpp.vcFormat.space.aroundAssignmentOperator":{"type":"string","enum":["insert","remove","ignore"],"enumDescriptions":["A space is added before the operator and also after it.","Spaces before and after the operator are removed.","Spaces are left as entered."],"default":"insert","description":"Spaces around assignment operators.","scope":"resource"},"C_Cpp.vcFormat.space.pointerReferenceAlignment":{"type":"string","enum":["left","center","right","ignore"],"enumDescriptions":["Pointer and reference operators are aligned to the left.","Pointer and reference operators are centered.","Pointer and reference operators are aligned to the right.","Pointer and reference operators are not formatted."],"default":"left","description":"Spaces around pointer and reference operators.","scope":"resource"},"C_Cpp.vcFormat.space.aroundTernaryOperator":{"type":"string","enum":["insert","remove","ignore"],"enumDescriptions":["A space is added before the operator and also after it.","Spaces before and after the operator are removed.","Spaces are left as entered."],"default":"insert","description":"Spaces around conditional operators.","scope":"resource"},"C_Cpp.vcFormat.wrap.preserveBlocks":{"type":"string","enum":["oneLiners","allOneLineScopes","never"],"markdownEnumDescriptions":["A complete code block that is entered on one line is kept on one line, regardless of the values of any of the `C_Cpp.vcFormat.newLine.*` settings.","Any code where the opening and closing brace is entered on one line is kept on one line, regardless of the values of any of the `C_Cpp.vcFormat.newLine.*` settings.","Code blocks are always formatted based on the values of the `C_Cpp.vcFormat.newLine.*` settings."],"default":"oneLiners","description":"Wrapping options for blocks.","scope":"resource"},"C_Cpp.clang_format_path":{"type":"string","markdownDescription":"The full path of the `clang-format` executable. If not specified, and `clang-format` is available in the environment path, that is used. If not found in the environment path, the `clang-format` bundled with the extension will be used.","scope":"machine-overridable"},"C_Cpp.clang_format_style":{"type":"string","default":"file","markdownDescription":"Coding style, currently supports: `Visual Studio`, `LLVM`, `Google`, `Chromium`, `Mozilla`, `WebKit`, `Microsoft`, `GNU`. Use `file` to load the style from a `.clang-format` file in the current or parent directory, or use `file:<path>/.clang-format` to reference a specific path. Use `{key: value, ...}` to set specific parameters. For example, the `Visual Studio` style is similar to: `{ BasedOnStyle: LLVM, UseTab: Never, IndentWidth: 4, TabWidth: 4, BreakBeforeBraces: Allman, AllowShortIfStatementsOnASingleLine: false, IndentCaseLabels: false, ColumnLimit: 0, AccessModifierOffset: -4, NamespaceIndentation: All, FixNamespaceComments: false }`.","scope":"resource"},"C_Cpp.formatting":{"type":"string","enum":["clangFormat","vcFormat","default","disabled"],"markdownEnumDescriptions":["`clang-format` will be used to format code.","The Visual C++ formatting engine will be used to format code.","By default, `clang-format` will be used to format the code. However, the Visual C++ formatting engine will be used if an `.editorconfig` file with relevant settings is found nearer to the code being formatted and `#C_Cpp.clang_format_style#` is the default value: `file`.","Code formatting will be disabled."],"default":"default","description":"Configures the formatting engine.","scope":"resource"},"C_Cpp.clang_format_fallbackStyle":{"type":"string","default":"Visual Studio","markdownDescription":"Name of the predefined style used as a fallback in case `clang-format` is invoked with style `file` but the `.clang-format` file is not found. Possible values are `Visual Studio`, `LLVM`, `Google`, `Chromium`, `Mozilla`, `WebKit`, `Microsoft`, `GNU`, `none`, or use `{key: value, ...}` to set specific parameters. For example, the `Visual Studio` style is similar to: `{ BasedOnStyle: LLVM, UseTab: Never, IndentWidth: 4, TabWidth: 4, BreakBeforeBraces: Allman, AllowShortIfStatementsOnASingleLine: false, IndentCaseLabels: false, ColumnLimit: 0, AccessModifierOffset: -4, NamespaceIndentation: All, FixNamespaceComments: false }`.","scope":"resource"},"C_Cpp.clang_format_sortIncludes":{"type":["boolean","null"],"enum":[true,false,null],"default":null,"markdownDescription":"If set, overrides the include sorting behavior determined by the `SortIncludes` parameter.","scope":"resource"}}},{"title":"Code Documentation","properties":{"C_Cpp.doxygen.generateOnType":{"type":"boolean","default":true,"description":"Controls whether to automatically insert the Doxygen comment after typing the chosen comment style.","scope":"resource"},"C_Cpp.doxygen.generatedStyle":{"type":"string","enum":["///","/**","/*!","//!"],"default":"///","description":"The string of characters used as the starting line of the Doxygen comment.","scope":"resource"},"C_Cpp.doxygen.sectionTags":{"type":"array","default":["attention","tparam","param","result","returns","retval","exception","deprecated","warning","note"],"items":{"type":"string","enum":["attention","author","authors","bug","copyright","date","deprecated","details","exception","invariant","note","param","pre","post","remark","remarks","result","returns","retval","sa","see","since","tparam","test","todo","version","warning"]},"description":"Select the Doxygen section tags that you would like to appear on hover in the tooltip area when the 'Simplify Structured Comments' setting is enabled. ","scope":"resource"},"C_Cpp.commentContinuationPatterns":{"type":"array","default":["/**"],"items":{"anyOf":[{"type":"string","markdownDescription":"The pattern that begins a multiline or single line comment block. The continuation pattern defaults to ` * ` for multiline comment blocks or this string for single line comment blocks."},{"type":"object","properties":{"begin":{"type":"string","description":"The pattern that begins a multiline or single line comment block."},"continue":{"type":"string","description":"The text that will be inserted on the next line when Enter is pressed inside a multiline or single line comment block."}}}]},"uniqueItems":true,"description":"Defines the editor behavior for when the Enter key is pressed inside a multiline or single line comment block.","scope":"window"},"C_Cpp.markdownInComments":{"type":"string","enum":["subsetEnabled","enabled","disabled"],"enumDescriptions":["Enable all markdown features in the hover tooltip except those that include the '_' and '*' characters.","Enable all markdown features in the hover tooltip.","Disable all markdown features in the hover tooltip."],"default":"subsetEnabled","description":"Select whether markdown will be available in the hover tooltip. By default, only a subset of markdown will be applied to comments in the hover tooltip.","scope":"resource"},"C_Cpp.simplifyStructuredComments":{"type":"boolean","default":true,"markdownDescription":"If `true`, tooltips of hover and auto-complete will only display certain labels of structured comments. Otherwise, all comments are displayed.","scope":"application"}}},{"title":"Code Analysis","properties":{"C_Cpp.codeAnalysis.maxConcurrentThreads":{"type":["integer","null"],"markdownDescription":"The maximum number of concurrent threads to use for code analysis. The default of `null` (empty) uses half the value inherited from `#C_Cpp.maxConcurrentThreads#`.","default":null,"minimum":1,"maximum":32,"scope":"machine"},"C_Cpp.codeAnalysis.maxMemory":{"type":["integer","null"],"markdownDescription":"Fewer code analysis processes will run concurrently after this memory usage (in MB) is exceeded. The default of `null` (empty) uses the value inherited from `#C_Cpp.maxMemory#`.","default":null,"minimum":256,"maximum":65536,"scope":"machine"},"C_Cpp.codeAnalysis.updateDelay":{"type":"number","default":2000,"markdownDescription":"Controls the delay in milliseconds before code analysis starts processing after a save is triggered from an edit when `#files.autoSave#` is `afterDelay` and `#C_Cpp.codeAnalysis.runAutomatically#` is `true`.","scope":"application","minimum":0,"maximum":6000},"C_Cpp.codeAnalysis.exclude":{"type":"object","markdownDescription":"Configure glob patterns for excluding folders and files for code analysis. Files not under the workspace folder are always excluded. Inherits values from `#files.exclude#` and `#C_Cpp.files.exclude#`. Learn more about [glob patterns](https://code.visualstudio.com/docs/editor/codebasics#_advanced-search-options).","default":{},"additionalProperties":{"anyOf":[{"type":"boolean","markdownDescription":"The glob pattern to match file paths against. Set to `true` or `false` to enable or disable the pattern."},{"type":"object","properties":{"when":{"type":"string","pattern":"\\w*\\$\\(basename\\)\\w*","default":"$(basename).ext","markdownDescription":"Additional check on the siblings of a matching file. Use `$(basename)` as variable for the matching file name."}}}]},"scope":"resource"},"C_Cpp.codeAnalysis.clangTidy.codeAction.formatFixes":{"type":"boolean","markdownDescription":"If `true`, formatting will be run on the lines changed by 'Fix' code actions.","default":true,"scope":"resource"},"C_Cpp.codeAnalysis.clangTidy.codeAction.showClear":{"type":"string","description":"Controls which 'Clear' code analysis problem code action options are available. Changing the setting to show more options may require re-running code analysis.","enum":["None","AllOnly","AllAndAllType","AllAndAllTypeAndThis"],"enumDescriptions":["Show no 'Clear' code actions.","Show only the 'Clear all' code action (or 'Clear all <type>' if there is only one type or 'Clear this' if there is only one problem).","Show the 'Clear all' code action (if there are multiple problem types) and the 'Clear all <type>' code action (or 'Clear this' if there is only one problem for the <type>)","Show the 'Clear all' (if there are multiple problem types), 'Clear all <type>' (if there are multiple problems for the <type>), and 'Clear this' code actions"],"default":"AllAndAllTypeAndThis","scope":"application"},"C_Cpp.codeAnalysis.clangTidy.codeAction.showDisable":{"type":"boolean","markdownDescription":"If `true`, the 'Disable' code action will be shown when available (the next time code analysis is run). When the 'Disable' code action is used, it adds the warning code to the `C_Cpp.codeAnalysis.clangTidy.checks.disabled` setting.","default":true,"scope":"application"},"C_Cpp.codeAnalysis.clangTidy.codeAction.showDocumentation":{"type":"boolean","markdownDescription":"If `true`, the 'Show Documentation for' code action will be shown when available (the next time code analysis is run).","default":true,"scope":"application"},"C_Cpp.codeAnalysis.runAutomatically":{"type":"boolean","markdownDescription":"If `true`, code analysis will run automatically on a file after it is opened or saved.","default":true,"scope":"resource"},"C_Cpp.codeAnalysis.clangTidy.enabled":{"type":"boolean","default":false,"markdownDescription":"If `true`, code analysis using `clang-tidy` will be enabled and will run after a file is opened or saved if `#C_Cpp.codeAnalysis.runAutomatically#` is `true` (the default).","scope":"resource"},"C_Cpp.codeAnalysis.clangTidy.path":{"type":"string","markdownDescription":"The full path of the `clang-tidy` executable. If not specified, and `clang-tidy` is available in the environment path, that is used. If not found in the environment path, the `clang-tidy` bundled with the extension will be used.","scope":"machine-overridable"},"C_Cpp.codeAnalysis.clangTidy.config":{"type":"string","markdownDescription":"Specifies a `clang-tidy` configuration in YAML/JSON format: `{Checks: '-*,clang-analyzer-*', CheckOptions: [{key: x, value: y}]}`. When the value is empty, `clang-tidy` will attempt to find a file named `.clang-tidy` for each source file in its parent directories.","scope":"resource"},"C_Cpp.codeAnalysis.clangTidy.fallbackConfig":{"type":"string","markdownDescription":"Specifies a `clang-tidy` configuration in YAML/JSON format to be used as a fallback when `#C_Cpp.codeAnalysis.clangTidy.config#` is not set and no `.clang-tidy` file is found: `{Checks: '-*,clang-analyzer-*', CheckOptions: [{key: x, value: y}]}`.","scope":"resource"},"C_Cpp.codeAnalysis.clangTidy.headerFilter":{"type":["string","null"],"default":null,"markdownDescription":"A POSIX extended regular expression (ERE) matching the names of the headers to output diagnostics from. Diagnostics from the main file of each translation unit are always displayed. The `${workspaceFolder}` variable is supported (and is used as the default fallback value if no `.clang-tidy` file exists). If this option is not `null` (empty), it overrides the `HeaderFilterRegex` option in a `.clang-tidy` file, if any.","scope":"resource"},"C_Cpp.codeAnalysis.clangTidy.args":{"type":"array","items":{"type":"string"},"uniqueItems":true,"markdownDescription":"Additional command line arguments to pass to `clang-tidy`. These take precedence over the equivalent `C_Cpp.codeAnalysis.clangTidy.*` settings.","scope":"resource"},"C_Cpp.codeAnalysis.clangTidy.useBuildPath":{"type":"boolean","default":false,"markdownDescription":"If `true` and `compileCommands` is set, the `-p=<build-path>` argument is passed to `clang-tidy` instead of build arguments being passed after `--`. This may not work if environment variables aren't set so that system includes can be found.","scope":"resource"},"C_Cpp.codeAnalysis.clangTidy.checks.enabled":{"type":"array","items":{"type":"string","enum":["*","abseil-*","abseil-cleanup-ctad","abseil-duration-*","abseil-duration-addition","abseil-duration-comparison","abseil-duration-conversion-cast","abseil-duration-division","abseil-duration-factory-*","abseil-duration-factory-float","abseil-duration-factory-scale","abseil-duration-subtraction","abseil-duration-unnecessary-conversion","abseil-faster-strsplit-delimiter","abseil-no-*","abseil-no-internal-dependencies","abseil-no-namespace","abseil-redundant-strcat-calls","abseil-str-cat-append","abseil-string-find-*","abseil-string-find-startswith","abseil-string-find-str-contains","abseil-time-*","abseil-time-comparison","abseil-time-subtraction","abseil-upgrade-duration-conversions","altera-*","altera-id-dependent-backward-branch","altera-kernel-name-restriction","altera-single-work-item-barrier","altera-struct-pack-align","altera-unroll-loops","android-*","android-cloexec-*","android-cloexec-accept","android-cloexec-accept4","android-cloexec-creat","android-cloexec-dup","android-cloexec-epoll-*","android-cloexec-epoll-create","android-cloexec-epoll-create1","android-cloexec-fopen","android-cloexec-inotify-*","android-cloexec-inotify-init","android-cloexec-inotify-init1","android-cloexec-memfd-create","android-cloexec-open","android-cloexec-pipe","android-cloexec-pipe2","android-cloexec-socket","android-comparison-in-temp-failure-retry","boost-use-to-string","bugprone-*","bugprone-argument-comment","bugprone-assert-side-effect","bugprone-assignment-in-if-condition","bugprone-bad-signal-to-kill-thread","bugprone-bool-pointer-implicit-conversion","bugprone-branch-clone","bugprone-casting-through-void","bugprone-chained-comparison","bugprone-compare-pointer-to-member-virtual-function","bugprone-copy-constructor-init","bugprone-crtp-constructor-accessibility","bugprone-dangling-handle","bugprone-dynamic-static-initializers","bugprone-easily-swappable-parameters","bugprone-empty-catch","bugprone-exception-escape","bugprone-fold-init-type","bugprone-forward-declaration-namespace","bugprone-forwarding-reference-overload","bugprone-implicit-widening-of-multiplication-result","bugprone-inaccurate-erase","bugprone-inc-dec-in-conditions","bugprone-incorrect-*","bugprone-incorrect-enable-if","bugprone-incorrect-roundings","bugprone-infinite-loop","bugprone-integer-division","bugprone-lambda-function-name","bugprone-macro-parentheses","bugprone-macro-repeated-side-effects","bugprone-misplaced-*","bugprone-misplaced-operator-in-strlen-in-alloc","bugprone-misplaced-pointer-arithmetic-in-alloc","bugprone-misplaced-widening-cast","bugprone-move-forwarding-reference","bugprone-multi-level-implicit-pointer-conversion","bugprone-multiple-*","bugprone-multiple-new-in-one-expression","bugprone-multiple-statement-macro","bugprone-narrowing-conversions","bugprone-no-escape","bugprone-non-zero-enum-to-bool-conversion","bugprone-not-null-terminated-result","bugprone-optional-value-conversion","bugprone-parent-virtual-call","bugprone-posix-return","bugprone-redundant-branch-condition","bugprone-reserved-identifier","bugprone-shared-ptr-array-mismatch","bugprone-signal-handler","bugprone-signed-char-misuse","bugprone-sizeof-*","bugprone-sizeof-container","bugprone-sizeof-expression","bugprone-spuriously-wake-up-functions","bugprone-standalone-empty","bugprone-string-*","bugprone-string-constructor","bugprone-string-integer-assignment","bugprone-string-literal-with-embedded-nul","bugprone-stringview-nullptr","bugprone-suspicious-*","bugprone-suspicious-enum-usage","bugprone-suspicious-include","bugprone-suspicious-memory-comparison","bugprone-suspicious-memset-usage","bugprone-suspicious-missing-comma","bugprone-suspicious-realloc-usage","bugprone-suspicious-semicolon","bugprone-suspicious-string-compare","bugprone-suspicious-stringview-data-usage","bugprone-swapped-arguments","bugprone-switch-missing-default-case","bugprone-terminating-continue","bugprone-throw-keyword-missing","bugprone-too-small-loop-variable","bugprone-unchecked-optional-access","bugprone-undefined-memory-manipulation","bugprone-undelegated-constructor","bugprone-unhandled-*","bugprone-unhandled-exception-at-new","bugprone-unhandled-self-assignment","bugprone-unique-ptr-array-mismatch","bugprone-unsafe-functions","bugprone-unused-*","bugprone-unused-local-non-trivial-variable","bugprone-unused-raii","bugprone-unused-return-value","bugprone-use-after-move","bugprone-virtual-near-miss","cert-*","cert-con*","cert-con36-c","cert-con54-cpp","cert-dcl*","cert-dcl03-c","cert-dcl16-c","cert-dcl21-cpp","cert-dcl37-c","cert-dcl50-cpp","cert-dcl51-cpp","cert-dcl54-cpp","cert-dcl58-cpp","cert-dcl59-cpp","cert-env33-c","cert-err*","cert-err09-cpp","cert-err33-c","cert-err34-c","cert-err52-cpp","cert-err58-cpp","cert-err60-cpp","cert-err61-cpp","cert-exp42-c","cert-fio38-c","cert-flp*","cert-flp30-c","cert-flp37-c","cert-mem57-cpp","cert-msc*","cert-msc30-c","cert-msc32-c","cert-msc33-c","cert-msc50-cpp","cert-msc51-cpp","cert-msc54-cpp","cert-oop*","cert-oop11-cpp","cert-oop54-cpp","cert-oop57-cpp","cert-oop58-cpp","cert-pos*","cert-pos44-c","cert-pos47-c","cert-sig30-c","cert-str34-c","clang-analyzer-*","clang-analyzer-core.*","clang-analyzer-core.BitwiseShift","clang-analyzer-core.CallAndMessage","clang-analyzer-core.DivideZero","clang-analyzer-core.DynamicTypePropagation","clang-analyzer-core.NonNullParamChecker","clang-analyzer-core.NullDereference","clang-analyzer-core.StackAddressEscape","clang-analyzer-core.UndefinedBinaryOperatorResult","clang-analyzer-core.uninitialized.*","clang-analyzer-core.uninitialized.ArraySubscript","clang-analyzer-core.uninitialized.Assign","clang-analyzer-core.uninitialized.Branch","clang-analyzer-core.uninitialized.CapturedBlockVariable","clang-analyzer-core.uninitialized.NewArraySize","clang-analyzer-core.uninitialized.UndefReturn","clang-analyzer-core.VLASize","clang-analyzer-cplusplus.*","clang-analyzer-cplusplus.InnerPointer","clang-analyzer-cplusplus.Move","clang-analyzer-cplusplus.NewDelete","clang-analyzer-cplusplus.NewDeleteLeaks","clang-analyzer-cplusplus.PlacementNew","clang-analyzer-cplusplus.PureVirtualCall","clang-analyzer-cplusplus.StringChecker","clang-analyzer-deadcode.DeadStores","clang-analyzer-fuchsia.HandleChecker","clang-analyzer-nullablity.*","clang-analyzer-nullability.NullableDereferenced","clang-analyzer-nullability.NullablePassedToNonnull","clang-analyzer-nullability.NullableReturnedFromNonnull","clang-analyzer-nullability.NullPassedToNonnull","clang-analyzer-nullability.NullReturnedFromNonnull","clang-analyzer-optin.*","clang-analyzer-optin.core.EnumCastOutOfRange","clang-analyzer-optin.cplusplus.*","clang-analyzer-optin.cplusplus.UninitializedObject","clang-analyzer-optin.cplusplus.VirtualCall","clang-analyzer-optin.mpi.MPI-Checker","clang-analyzer-optin.osx.*","clang-analyzer-optin.osx.cocoa.localizability.*","clang-analyzer-optin.osx.cocoa.localizability.EmptyLocalizationContextChecker","clang-analyzer-optin.osx.cocoa.localizability.NonLocalizedStringChecker","clang-analyzer-optin.osx.OSObjectCStyleCast","clang-analyzer-optin.performance.*","clang-analyzer-optin.performance.GCDAntipattern","clang-analyzer-optin.performance.Padding","clang-analyzer-optin.portability.UnixAPI","clang-analyzer-osx.*","clang-analyzer-osx.API","clang-analyzer-osx.cocoa.*","clang-analyzer-osx.cocoa.AtSync","clang-analyzer-osx.cocoa.AutoreleaseWrite","clang-analyzer-osx.cocoa.ClassRelease","clang-analyzer-osx.cocoa.Dealloc","clang-analyzer-osx.cocoa.IncompatibleMethodTypes","clang-analyzer-osx.cocoa.Loops","clang-analyzer-osx.cocoa.MissingSuperCall","clang-analyzer-osx.cocoa.NilArg","clang-analyzer-osx.cocoa.NonNilReturnValue","clang-analyzer-osx.cocoa.NSAutoreleasePool","clang-analyzer-osx.cocoa.NSError","clang-analyzer-osx.cocoa.ObjCGenerics","clang-analyzer-osx.cocoa.RetainCount","clang-analyzer-osx.cocoa.RetainCountBase","clang-analyzer-osx.cocoa.RunLoopAutoreleaseLeak","clang-analyzer-osx.cocoa.SelfInit","clang-analyzer-osx.cocoa.SuperDealloc","clang-analyzer-osx.cocoa.UnusedIvars","clang-analyzer-osx.cocoa.VariadicMethodTypes","clang-analyzer-osx.coreFoundation.*","clang-analyzer-osx.coreFoundation.CFError","clang-analyzer-osx.coreFoundation.CFNumber","clang-analyzer-osx.coreFoundation.CFRetainRelease","clang-analyzer-osx.coreFoundation.containers.*","clang-analyzer-osx.coreFoundation.containers.OutOfBounds","clang-analyzer-osx.coreFoundation.containers.PointerSizedValues","clang-analyzer-osx.MIG","clang-analyzer-osx.NumberObjectConversion","clang-analyzer-osx.ObjCProperty","clang-analyzer-osx.OSObjectRetainCount","clang-analyzer-osx.SecKeychainAPI","clang-analyzer-security.*","clang-analyzer-security.cert.env.InvalidPtr","clang-analyzer-security.FloatLoopCounter","clang-analyzer-security.insecureAPI.*","clang-analyzer-security.insecureAPI.bcmp","clang-analyzer-security.insecureAPI.bcopy","clang-analyzer-security.insecureAPI.bzero","clang-analyzer-security.insecureAPI.decodeValueOfObjCType","clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling","clang-analyzer-security.insecureAPI.getpw","clang-analyzer-security.insecureAPI.gets","clang-analyzer-security.insecureAPI.mkstemp","clang-analyzer-security.insecureAPI.mktemp","clang-analyzer-security.insecureAPI.rand","clang-analyzer-security.insecureAPI.strcpy","clang-analyzer-security.insecureAPI.UncheckedReturn","clang-analyzer-security.insecureAPI.vfork","clang-analyzer-unix.*","clang-analyzer-unix.API","clang-analyzer-unix.cstring.*","clang-analyzer-unix.cstring.BadSizeArg","clang-analyzer-unix.cstring.NullArg","clang-analyzer-unix.Errno","clang-analyzer-unix.Malloc","clang-analyzer-unix.MallocSizeof","clang-analyzer-unix.MismatchedDeallocator","clang-analyzer-unix.StdCLibraryFunctions","clang-analyzer-unix.Vfork","clang-analyzer-valist.*","clang-analyzer-valist.CopyToSelf","clang-analyzer-valist.Uninitialized","clang-analyzer-valist.Unterminated","clang-analyzer-webkit.NoUncountedMemberChecker","clang-analyzer-webkit.RefCntblBaseVirtualDtor","clang-analyzer-webkit.UncountedLambdaCapturesChecker","concurrency-*","concurrency-mt-unsafe","concurrency-thread-canceltype-asynchronous","cppcoreguidelines-*","cppcoreguidelines-avoid-*","cppcoreguidelines-avoid-c-arrays","cppcoreguidelines-avoid-capturing-lambda-coroutines","cppcoreguidelines-avoid-const-or-ref-data-members","cppcoreguidelines-avoid-do-while","cppcoreguidelines-avoid-goto","cppcoreguidelines-avoid-magic-numbers","cppcoreguidelines-avoid-non-const-global-variables","cppcoreguidelines-avoid-reference-coroutine-parameters","cppcoreguidelines-c-copy-assignment-signature","cppcoreguidelines-explicit-virtual-functions","cppcoreguidelines-init-variables","cppcoreguidelines-interfaces-global-init","cppcoreguidelines-macro-to-enum","cppcoreguidelines-macro-usage","cppcoreguidelines-misleading-capture-default-by-value","cppcoreguidelines-missing-std-forward","cppcoreguidelines-narrowing-conversions","cppcoreguidelines-no-*","cppcoreguidelines-no-malloc","cppcoreguidelines-no-suspend-with-lock","cppcoreguidelines-noexcept-*","cppcoreguidelines-noexcept-destructor","cppcoreguidelines-noexcept-move-operations","cppcoreguidelines-noexcept-swap","cppcoreguidelines-non-private-member-variables-in-classes","cppcoreguidelines-owning-memory","cppcoreguidelines-prefer-member-initializer","cppcoreguidelines-pro-bounds-*","cppcoreguidelines-pro-bounds-array-to-pointer-decay","cppcoreguidelines-pro-bounds-constant-array-index","cppcoreguidelines-pro-bounds-pointer-arithmetic","cppcoreguidelines-pro-type-*","cppcoreguidelines-pro-type-const-cast","cppcoreguidelines-pro-type-cstyle-cast","cppcoreguidelines-pro-type-member-init","cppcoreguidelines-pro-type-reinterpret-cast","cppcoreguidelines-pro-type-static-cast-downcast","cppcoreguidelines-pro-type-union-access","cppcoreguidelines-pro-type-vararg","cppcoreguidelines-rvalue-reference-param-not-moved","cppcoreguidelines-slicing","cppcoreguidelines-special-member-functions","cppcoreguidelines-use-default-member-init","cppcoreguidelines-virtual-class-destructor","darwin-*","darwin-avoid-spinlock","darwin-dispatch-once-nonstatic","fuchsia-*","fuchsia-default-*","fuchsia-default-arguments-calls","fuchsia-default-arguments-declarations","fuchsia-header-anon-namespaces","fuchsia-multiple-inheritance","fuchsia-overloaded-operator","fuchsia-statically-constructed-objects","fuchsia-trailing-return","fuchsia-virtual-inheritance","google-*","google-build-*","google-build-explicit-make-pair","google-build-namespaces","google-build-using-namespace","google-default-arguments","google-explicit-constructor","google-global-names-in-headers","google-objc-*","google-objc-avoid-*","google-objc-avoid-nsobject-new","google-objc-avoid-throwing-exception","google-objc-function-naming","google-objc-global-variable-declaration","google-readability-*","google-readability-avoid-underscore-in-googletest-name","google-readability-braces-around-statements","google-readability-casting","google-readability-function-size","google-readability-namespace-comments","google-readability-todo","google-runtime-*","google-runtime-int","google-runtime-operator","google-upgrade-googletest-case","hicpp-*","hicpp-avoid-*","hicpp-avoid-c-arrays","hicpp-avoid-goto","hicpp-braces-around-statements","hicpp-deprecated-headers","hicpp-exception-baseclass","hicpp-explicit-conversions","hicpp-function-size","hicpp-ignored-remove-result","hicpp-invalid-access-moved","hicpp-member-init","hicpp-move-const-arg","hicpp-multiway-paths-covered","hicpp-named-parameter","hicpp-new-delete-operators","hicpp-no-*","hicpp-no-array-decay","hicpp-no-assembler","hicpp-no-malloc","hicpp-noexcept-move","hicpp-signed-bitwise","hicpp-special-member-functions","hicpp-static-assert","hicpp-undelegated-constructor","hicpp-uppercase-literal-suffix","hicpp-use-*","hicpp-use-auto","hicpp-use-emplace","hicpp-use-equals-*","hicpp-use-equals-default","hicpp-use-equals-delete","hicpp-use-noexcept","hicpp-use-nullptr","hicpp-use-override","hicpp-vararg","linuxkernel-must-use-errs","llvm-*","llvm-else-after-return","llvm-header-guard","llvm-include-order","llvm-namespace-comment","llvm-prefer-*","llvm-prefer-isa-or-dyn-cast-in-conditionals","llvm-prefer-register-over-unsigned","llvm-qualified-auto","llvm-twine-local","llvmlibc-*","llvmlibc-callee-namespace","llvmlibc-implementation-in-namespace","llvmlibc-inline-function-decl","llvmlibc-restrict-system-libc-headers","misc-*","misc-confusable-identifiers","misc-const-correctness","misc-coroutine-hostile-raii","misc-definitions-in-headers","misc-header-include-cycle","misc-include-cleaner","misc-misleading-*","misc-misleading-bidirectional","misc-misleading-identifier","misc-misplaced-const","misc-new-delete-overloads","misc-no-recursion","misc-non-*","misc-non-copyable-objects","misc-non-private-member-variables-in-classes","misc-redundant-expression","misc-static-assert","misc-throw-by-value-catch-by-reference","misc-unconventional-assign-operator","misc-uniqueptr-reset-release","misc-unused-*","misc-unused-alias-decls","misc-unused-parameters","misc-unused-using-decls","misc-use-anonymous-namespace","modernize-*","modernize-avoid-*","modernize-avoid-bind","modernize-avoid-c-arrays","modernize-concat-nested-namespaces","modernize-deprecated-*","modernize-deprecated-headers","modernize-deprecated-ios-base-aliases","modernize-loop-convert","modernize-macro-to-enum","modernize-make-*","modernize-make-shared","modernize-make-unique","modernize-pass-by-value","modernize-raw-string-literal","modernize-redundant-void-arg","modernize-replace-*","modernize-replace-auto-ptr","modernize-replace-disallow-copy-and-assign-macro","modernize-replace-random-shuffle","modernize-return-braced-init-list","modernize-shrink-to-fit","modernize-type-traits","modernize-unary-static-assert","modernize-use-*","modernize-use-auto","modernize-use-bool-literals","modernize-use-default","modernize-use-constraints","modernize-use-default-member-init","modernize-use-designated-initializers","modernize-use-emplace","modernize-use-equals-*","modernize-use-equals-default","modernize-use-equals-delete","modernize-use-nodiscard","modernize-use-noexcept","modernize-use-nullptr","modernize-use-override","modernize-use-starts-ends-with","modernize-use-std-*","modernize-use-std-numbers","modernize-use-std-print","modernize-use-trailing-return-type","modernize-use-transparent-functors","modernize-use-uncaught-exceptions","modernize-use-using","mpi-*","mpi-buffer-deref","mpi-type-mismatch","objc-*","objc-assert-equals","objc-avoid-nserror-init","objc-dealloc-in-category","objc-forbidden-subclassing","objc-missing-hash","objc-nsdate-formatter","objc-nsinvocation-argument-lifetime","objc-property-declaration","objc-super-self","openmp-*","openmp-exception-escape","openmp-use-default-none","performance-*","performance-avoid-endl","performance-enum-size","performance-faster-string-find","performance-for-range-copy","performance-implicit-conversion-in-loop","performance-inefficient-*","performance-inefficient-algorithm","performance-inefficient-string-concatenation","performance-inefficient-vector-operation","performance-move-*","performance-move-const-arg","performance-move-constructor-init","performance-no-*","performance-no-automatic-move","performance-no-int-to-ptr","performance-noexcept-*","performance-noexcept-destructor","performance-noexcept-move-constructor","performance-noexcept-swap","performance-trivially-destructible","performance-type-promotion-in-math-fn","performance-unnecessary-*","performance-unnecessary-copy-initialization","performance-unnecessary-value-param","portability-*","portability-restrict-system-includes","portability-simd-intrinsics","portability-std-allocator-const","readability-*","readability-avoid-*","readability-avoid-const-params-in-decls","readability-avoid-nested-conditional-operator","readability-avoid-return-with-void-value","readability-avoid-unconditional-preprocessor-if","readability-braces-around-statements","readability-const-return-type","readability-container-*","readability-container-contains","readability-container-data-pointer","readability-container-size-empty","readability-convert-member-functions-to-static","readability-delete-null-pointer","readability-duplicate-include","readability-else-after-return","readability-function-*","readability-function-cognitive-complexity","readability-function-size","readability-identifier-*","readability-identifier-length","readability-identifier-naming","readability-implicit-bool-conversion","readability-inconsistent-declaration-parameter-name","readability-isolate-declaration","readability-magic-numbers","readability-make-member-function-const","readability-misleading-indentation","readability-misplaced-array-index","readability-named-parameter","readability-non-const-parameter","readability-operators-representation","readability-qualified-auto","readability-redundant-*","readability-redundant-access-specifiers","readability-redundant-casting","readability-redundant-control-flow","readability-redundant-declaration","readability-redundant-function-ptr-dereference","readability-redundant-inline-specifier","readability-redundant-member-init","readability-redundant-preprocessor","readability-redundant-smartptr-get","readability-redundant-string-*","readability-redundant-string-cstr","readability-redundant-string-init","readability-reference-to-constructed-temporary","readability-simplify-*","readability-simplify-boolean-expr","readability-simplify-subscript-expr","readability-static-*","readability-static-accessed-through-instance","readability-static-definition-in-anonymous-namespace","readability-string-compare","readability-suspicious-call-argument","readability-uniqueptr-delete-release","readability-uppercase-literal-suffix","readability-use-*","readability-use-anyofallof","readability-use-std-min-max","zircon-temporary-objects"]},"uniqueItems":true,"markdownDescription":"List of enabled `clang-tidy` checks. The values are appended to the `Checks` in a `.clang-tidy` file or `#C_Cpp.codeAnalysis.clangTidy.config#`, if any. The default check `clang-analyzer-*` is always used unless it is explicitly disabled.","scope":"resource"},"C_Cpp.codeAnalysis.clangTidy.checks.disabled":{"type":"array","items":{"type":"string","enum":["*","abseil-*","abseil-cleanup-ctad","abseil-duration-*","abseil-duration-addition","abseil-duration-comparison","abseil-duration-conversion-cast","abseil-duration-division","abseil-duration-factory-*","abseil-duration-factory-float","abseil-duration-factory-scale","abseil-duration-subtraction","abseil-duration-unnecessary-conversion","abseil-faster-strsplit-delimiter","abseil-no-*","abseil-no-internal-dependencies","abseil-no-namespace","abseil-redundant-strcat-calls","abseil-str-cat-append","abseil-string-find-*","abseil-string-find-startswith","abseil-string-find-str-contains","abseil-time-*","abseil-time-comparison","abseil-time-subtraction","abseil-upgrade-duration-conversions","altera-*","altera-id-dependent-backward-branch","altera-kernel-name-restriction","altera-single-work-item-barrier","altera-struct-pack-align","altera-unroll-loops","android-*","android-cloexec-*","android-cloexec-accept","android-cloexec-accept4","android-cloexec-creat","android-cloexec-dup","android-cloexec-epoll-*","android-cloexec-epoll-create","android-cloexec-epoll-create1","android-cloexec-fopen","android-cloexec-inotify-*","android-cloexec-inotify-init","android-cloexec-inotify-init1","android-cloexec-memfd-create","android-cloexec-open","android-cloexec-pipe","android-cloexec-pipe2","android-cloexec-socket","android-comparison-in-temp-failure-retry","boost-use-to-string","bugprone-*","bugprone-argument-comment","bugprone-assert-side-effect","bugprone-assignment-in-if-condition","bugprone-bad-signal-to-kill-thread","bugprone-bool-pointer-implicit-conversion","bugprone-branch-clone","bugprone-casting-through-void","bugprone-chained-comparison","bugprone-compare-pointer-to-member-virtual-function","bugprone-copy-constructor-init","bugprone-crtp-constructor-accessibility","bugprone-dangling-handle","bugprone-dynamic-static-initializers","bugprone-easily-swappable-parameters","bugprone-empty-catch","bugprone-exception-escape","bugprone-fold-init-type","bugprone-forward-declaration-namespace","bugprone-forwarding-reference-overload","bugprone-implicit-widening-of-multiplication-result","bugprone-inaccurate-erase","bugprone-inc-dec-in-conditions","bugprone-incorrect-*","bugprone-incorrect-enable-if","bugprone-incorrect-roundings","bugprone-infinite-loop","bugprone-integer-division","bugprone-lambda-function-name","bugprone-macro-parentheses","bugprone-macro-repeated-side-effects","bugprone-misplaced-*","bugprone-misplaced-operator-in-strlen-in-alloc","bugprone-misplaced-pointer-arithmetic-in-alloc","bugprone-misplaced-widening-cast","bugprone-move-forwarding-reference","bugprone-multi-level-implicit-pointer-conversion","bugprone-multiple-*","bugprone-multiple-new-in-one-expression","bugprone-multiple-statement-macro","bugprone-narrowing-conversions","bugprone-no-escape","bugprone-non-zero-enum-to-bool-conversion","bugprone-not-null-terminated-result","bugprone-optional-value-conversion","bugprone-parent-virtual-call","bugprone-posix-return","bugprone-redundant-branch-condition","bugprone-reserved-identifier","bugprone-shared-ptr-array-mismatch","bugprone-signal-handler","bugprone-signed-char-misuse","bugprone-sizeof-*","bugprone-sizeof-container","bugprone-sizeof-expression","bugprone-spuriously-wake-up-functions","bugprone-standalone-empty","bugprone-string-*","bugprone-string-constructor","bugprone-string-integer-assignment","bugprone-string-literal-with-embedded-nul","bugprone-stringview-nullptr","bugprone-suspicious-*","bugprone-suspicious-enum-usage","bugprone-suspicious-include","bugprone-suspicious-memory-comparison","bugprone-suspicious-memset-usage","bugprone-suspicious-missing-comma","bugprone-suspicious-realloc-usage","bugprone-suspicious-semicolon","bugprone-suspicious-string-compare","bugprone-suspicious-stringview-data-usage","bugprone-swapped-arguments","bugprone-switch-missing-default-case","bugprone-terminating-continue","bugprone-throw-keyword-missing","bugprone-too-small-loop-variable","bugprone-unchecked-optional-access","bugprone-undefined-memory-manipulation","bugprone-undelegated-constructor","bugprone-unhandled-*","bugprone-unhandled-exception-at-new","bugprone-unhandled-self-assignment","bugprone-unique-ptr-array-mismatch","bugprone-unsafe-functions","bugprone-unused-*","bugprone-unused-local-non-trivial-variable","bugprone-unused-raii","bugprone-unused-return-value","bugprone-use-after-move","bugprone-virtual-near-miss","cert-*","cert-con*","cert-con36-c","cert-con54-cpp","cert-dcl*","cert-dcl03-c","cert-dcl16-c","cert-dcl21-cpp","cert-dcl37-c","cert-dcl50-cpp","cert-dcl51-cpp","cert-dcl54-cpp","cert-dcl58-cpp","cert-dcl59-cpp","cert-env33-c","cert-err*","cert-err09-cpp","cert-err33-c","cert-err34-c","cert-err52-cpp","cert-err58-cpp","cert-err60-cpp","cert-err61-cpp","cert-exp42-c","cert-fio38-c","cert-flp*","cert-flp30-c","cert-flp37-c","cert-mem57-cpp","cert-msc*","cert-msc30-c","cert-msc32-c","cert-msc33-c","cert-msc50-cpp","cert-msc51-cpp","cert-msc54-cpp","cert-oop*","cert-oop11-cpp","cert-oop54-cpp","cert-oop57-cpp","cert-oop58-cpp","cert-pos*","cert-pos44-c","cert-pos47-c","cert-sig30-c","cert-str34-c","clang-analyzer-*","clang-analyzer-core.*","clang-analyzer-core.BitwiseShift","clang-analyzer-core.CallAndMessage","clang-analyzer-core.DivideZero","clang-analyzer-core.DynamicTypePropagation","clang-analyzer-core.NonNullParamChecker","clang-analyzer-core.NullDereference","clang-analyzer-core.StackAddressEscape","clang-analyzer-core.UndefinedBinaryOperatorResult","clang-analyzer-core.uninitialized.*","clang-analyzer-core.uninitialized.ArraySubscript","clang-analyzer-core.uninitialized.Assign","clang-analyzer-core.uninitialized.Branch","clang-analyzer-core.uninitialized.CapturedBlockVariable","clang-analyzer-core.uninitialized.NewArraySize","clang-analyzer-core.uninitialized.UndefReturn","clang-analyzer-core.VLASize","clang-analyzer-cplusplus.*","clang-analyzer-cplusplus.InnerPointer","clang-analyzer-cplusplus.Move","clang-analyzer-cplusplus.NewDelete","clang-analyzer-cplusplus.NewDeleteLeaks","clang-analyzer-cplusplus.PlacementNew","clang-analyzer-cplusplus.PureVirtualCall","clang-analyzer-cplusplus.StringChecker","clang-analyzer-deadcode.DeadStores","clang-analyzer-fuchsia.HandleChecker","clang-analyzer-nullablity.*","clang-analyzer-nullability.NullableDereferenced","clang-analyzer-nullability.NullablePassedToNonnull","clang-analyzer-nullability.NullableReturnedFromNonnull","clang-analyzer-nullability.NullPassedToNonnull","clang-analyzer-nullability.NullReturnedFromNonnull","clang-analyzer-optin.*","clang-analyzer-optin.core.EnumCastOutOfRange","clang-analyzer-optin.cplusplus.*","clang-analyzer-optin.cplusplus.UninitializedObject","clang-analyzer-optin.cplusplus.VirtualCall","clang-analyzer-optin.mpi.MPI-Checker","clang-analyzer-optin.osx.*","clang-analyzer-optin.osx.cocoa.localizability.*","clang-analyzer-optin.osx.cocoa.localizability.EmptyLocalizationContextChecker","clang-analyzer-optin.osx.cocoa.localizability.NonLocalizedStringChecker","clang-analyzer-optin.osx.OSObjectCStyleCast","clang-analyzer-optin.performance.*","clang-analyzer-optin.performance.GCDAntipattern","clang-analyzer-optin.performance.Padding","clang-analyzer-optin.portability.UnixAPI","clang-analyzer-osx.*","clang-analyzer-osx.API","clang-analyzer-osx.cocoa.*","clang-analyzer-osx.cocoa.AtSync","clang-analyzer-osx.cocoa.AutoreleaseWrite","clang-analyzer-osx.cocoa.ClassRelease","clang-analyzer-osx.cocoa.Dealloc","clang-analyzer-osx.cocoa.IncompatibleMethodTypes","clang-analyzer-osx.cocoa.Loops","clang-analyzer-osx.cocoa.MissingSuperCall","clang-analyzer-osx.cocoa.NilArg","clang-analyzer-osx.cocoa.NonNilReturnValue","clang-analyzer-osx.cocoa.NSAutoreleasePool","clang-analyzer-osx.cocoa.NSError","clang-analyzer-osx.cocoa.ObjCGenerics","clang-analyzer-osx.cocoa.RetainCount","clang-analyzer-osx.cocoa.RetainCountBase","clang-analyzer-osx.cocoa.RunLoopAutoreleaseLeak","clang-analyzer-osx.cocoa.SelfInit","clang-analyzer-osx.cocoa.SuperDealloc","clang-analyzer-osx.cocoa.UnusedIvars","clang-analyzer-osx.cocoa.VariadicMethodTypes","clang-analyzer-osx.coreFoundation.*","clang-analyzer-osx.coreFoundation.CFError","clang-analyzer-osx.coreFoundation.CFNumber","clang-analyzer-osx.coreFoundation.CFRetainRelease","clang-analyzer-osx.coreFoundation.containers.*","clang-analyzer-osx.coreFoundation.containers.OutOfBounds","clang-analyzer-osx.coreFoundation.containers.PointerSizedValues","clang-analyzer-osx.MIG","clang-analyzer-osx.NumberObjectConversion","clang-analyzer-osx.ObjCProperty","clang-analyzer-osx.OSObjectRetainCount","clang-analyzer-osx.SecKeychainAPI","clang-analyzer-security.*","clang-analyzer-security.cert.env.InvalidPtr","clang-analyzer-security.FloatLoopCounter","clang-analyzer-security.insecureAPI.*","clang-analyzer-security.insecureAPI.bcmp","clang-analyzer-security.insecureAPI.bcopy","clang-analyzer-security.insecureAPI.bzero","clang-analyzer-security.insecureAPI.decodeValueOfObjCType","clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling","clang-analyzer-security.insecureAPI.getpw","clang-analyzer-security.insecureAPI.gets","clang-analyzer-security.insecureAPI.mkstemp","clang-analyzer-security.insecureAPI.mktemp","clang-analyzer-security.insecureAPI.rand","clang-analyzer-security.insecureAPI.strcpy","clang-analyzer-security.insecureAPI.UncheckedReturn","clang-analyzer-security.insecureAPI.vfork","clang-analyzer-unix.*","clang-analyzer-unix.API","clang-analyzer-unix.cstring.*","clang-analyzer-unix.cstring.BadSizeArg","clang-analyzer-unix.cstring.NullArg","clang-analyzer-unix.Errno","clang-analyzer-unix.Malloc","clang-analyzer-unix.MallocSizeof","clang-analyzer-unix.MismatchedDeallocator","clang-analyzer-unix.StdCLibraryFunctions","clang-analyzer-unix.Vfork","clang-analyzer-valist.*","clang-analyzer-valist.CopyToSelf","clang-analyzer-valist.Uninitialized","clang-analyzer-valist.Unterminated","clang-analyzer-webkit.NoUncountedMemberChecker","clang-analyzer-webkit.RefCntblBaseVirtualDtor","clang-analyzer-webkit.UncountedLambdaCapturesChecker","concurrency-*","concurrency-mt-unsafe","concurrency-thread-canceltype-asynchronous","cppcoreguidelines-*","cppcoreguidelines-avoid-*","cppcoreguidelines-avoid-c-arrays","cppcoreguidelines-avoid-capturing-lambda-coroutines","cppcoreguidelines-avoid-const-or-ref-data-members","cppcoreguidelines-avoid-do-while","cppcoreguidelines-avoid-goto","cppcoreguidelines-avoid-magic-numbers","cppcoreguidelines-avoid-non-const-global-variables","cppcoreguidelines-avoid-reference-coroutine-parameters","cppcoreguidelines-c-copy-assignment-signature","cppcoreguidelines-explicit-virtual-functions","cppcoreguidelines-init-variables","cppcoreguidelines-interfaces-global-init","cppcoreguidelines-macro-to-enum","cppcoreguidelines-macro-usage","cppcoreguidelines-misleading-capture-default-by-value","cppcoreguidelines-missing-std-forward","cppcoreguidelines-narrowing-conversions","cppcoreguidelines-no-*","cppcoreguidelines-no-malloc","cppcoreguidelines-no-suspend-with-lock","cppcoreguidelines-noexcept-*","cppcoreguidelines-noexcept-destructor","cppcoreguidelines-noexcept-move-operations","cppcoreguidelines-noexcept-swap","cppcoreguidelines-non-private-member-variables-in-classes","cppcoreguidelines-owning-memory","cppcoreguidelines-prefer-member-initializer","cppcoreguidelines-pro-bounds-*","cppcoreguidelines-pro-bounds-array-to-pointer-decay","cppcoreguidelines-pro-bounds-constant-array-index","cppcoreguidelines-pro-bounds-pointer-arithmetic","cppcoreguidelines-pro-type-*","cppcoreguidelines-pro-type-const-cast","cppcoreguidelines-pro-type-cstyle-cast","cppcoreguidelines-pro-type-member-init","cppcoreguidelines-pro-type-reinterpret-cast","cppcoreguidelines-pro-type-static-cast-downcast","cppcoreguidelines-pro-type-union-access","cppcoreguidelines-pro-type-vararg","cppcoreguidelines-rvalue-reference-param-not-moved","cppcoreguidelines-slicing","cppcoreguidelines-special-member-functions","cppcoreguidelines-use-default-member-init","cppcoreguidelines-virtual-class-destructor","darwin-*","darwin-avoid-spinlock","darwin-dispatch-once-nonstatic","fuchsia-*","fuchsia-default-*","fuchsia-default-arguments-calls","fuchsia-default-arguments-declarations","fuchsia-header-anon-namespaces","fuchsia-multiple-inheritance","fuchsia-overloaded-operator","fuchsia-statically-constructed-objects","fuchsia-trailing-return","fuchsia-virtual-inheritance","google-*","google-build-*","google-build-explicit-make-pair","google-build-namespaces","google-build-using-namespace","google-default-arguments","google-explicit-constructor","google-global-names-in-headers","google-objc-*","google-objc-avoid-*","google-objc-avoid-nsobject-new","google-objc-avoid-throwing-exception","google-objc-function-naming","google-objc-global-variable-declaration","google-readability-*","google-readability-avoid-underscore-in-googletest-name","google-readability-braces-around-statements","google-readability-casting","google-readability-function-size","google-readability-namespace-comments","google-readability-todo","google-runtime-*","google-runtime-int","google-runtime-operator","google-upgrade-googletest-case","hicpp-*","hicpp-avoid-*","hicpp-avoid-c-arrays","hicpp-avoid-goto","hicpp-braces-around-statements","hicpp-deprecated-headers","hicpp-exception-baseclass","hicpp-explicit-conversions","hicpp-function-size","hicpp-ignored-remove-result","hicpp-invalid-access-moved","hicpp-member-init","hicpp-move-const-arg","hicpp-multiway-paths-covered","hicpp-named-parameter","hicpp-new-delete-operators","hicpp-no-*","hicpp-no-array-decay","hicpp-no-assembler","hicpp-no-malloc","hicpp-noexcept-move","hicpp-signed-bitwise","hicpp-special-member-functions","hicpp-static-assert","hicpp-undelegated-constructor","hicpp-uppercase-literal-suffix","hicpp-use-*","hicpp-use-auto","hicpp-use-emplace","hicpp-use-equals-*","hicpp-use-equals-default","hicpp-use-equals-delete","hicpp-use-noexcept","hicpp-use-nullptr","hicpp-use-override","hicpp-vararg","linuxkernel-must-use-errs","llvm-*","llvm-else-after-return","llvm-header-guard","llvm-include-order","llvm-namespace-comment","llvm-prefer-*","llvm-prefer-isa-or-dyn-cast-in-conditionals","llvm-prefer-register-over-unsigned","llvm-qualified-auto","llvm-twine-local","llvmlibc-*","llvmlibc-callee-namespace","llvmlibc-implementation-in-namespace","llvmlibc-inline-function-decl","llvmlibc-restrict-system-libc-headers","misc-*","misc-confusable-identifiers","misc-const-correctness","misc-coroutine-hostile-raii","misc-definitions-in-headers","misc-header-include-cycle","misc-include-cleaner","misc-misleading-*","misc-misleading-bidirectional","misc-misleading-identifier","misc-misplaced-const","misc-new-delete-overloads","misc-no-recursion","misc-non-*","misc-non-copyable-objects","misc-non-private-member-variables-in-classes","misc-redundant-expression","misc-static-assert","misc-throw-by-value-catch-by-reference","misc-unconventional-assign-operator","misc-uniqueptr-reset-release","misc-unused-*","misc-unused-alias-decls","misc-unused-parameters","misc-unused-using-decls","misc-use-anonymous-namespace","modernize-*","modernize-avoid-*","modernize-avoid-bind","modernize-avoid-c-arrays","modernize-concat-nested-namespaces","modernize-deprecated-*","modernize-deprecated-headers","modernize-deprecated-ios-base-aliases","modernize-loop-convert","modernize-macro-to-enum","modernize-make-*","modernize-make-shared","modernize-make-unique","modernize-pass-by-value","modernize-raw-string-literal","modernize-redundant-void-arg","modernize-replace-*","modernize-replace-auto-ptr","modernize-replace-disallow-copy-and-assign-macro","modernize-replace-random-shuffle","modernize-return-braced-init-list","modernize-shrink-to-fit","modernize-type-traits","modernize-unary-static-assert","modernize-use-*","modernize-use-auto","modernize-use-bool-literals","modernize-use-default","modernize-use-constraints","modernize-use-default-member-init","modernize-use-designated-initializers","modernize-use-emplace","modernize-use-equals-*","modernize-use-equals-default","modernize-use-equals-delete","modernize-use-nodiscard","modernize-use-noexcept","modernize-use-nullptr","modernize-use-override","modernize-use-starts-ends-with","modernize-use-std-*","modernize-use-std-numbers","modernize-use-std-print","modernize-use-trailing-return-type","modernize-use-transparent-functors","modernize-use-uncaught-exceptions","modernize-use-using","mpi-*","mpi-buffer-deref","mpi-type-mismatch","objc-*","objc-assert-equals","objc-avoid-nserror-init","objc-dealloc-in-category","objc-forbidden-subclassing","objc-missing-hash","objc-nsdate-formatter","objc-nsinvocation-argument-lifetime","objc-property-declaration","objc-super-self","openmp-*","openmp-exception-escape","openmp-use-default-none","performance-*","performance-avoid-endl","performance-enum-size","performance-faster-string-find","performance-for-range-copy","performance-implicit-conversion-in-loop","performance-inefficient-*","performance-inefficient-algorithm","performance-inefficient-string-concatenation","performance-inefficient-vector-operation","performance-move-*","performance-move-const-arg","performance-move-constructor-init","performance-no-*","performance-no-automatic-move","performance-no-int-to-ptr","performance-noexcept-*","performance-noexcept-destructor","performance-noexcept-move-constructor","performance-noexcept-swap","performance-trivially-destructible","performance-type-promotion-in-math-fn","performance-unnecessary-*","performance-unnecessary-copy-initialization","performance-unnecessary-value-param","portability-*","portability-restrict-system-includes","portability-simd-intrinsics","portability-std-allocator-const","readability-*","readability-avoid-*","readability-avoid-const-params-in-decls","readability-avoid-nested-conditional-operator","readability-avoid-return-with-void-value","readability-avoid-unconditional-preprocessor-if","readability-braces-around-statements","readability-const-return-type","readability-container-*","readability-container-contains","readability-container-data-pointer","readability-container-size-empty","readability-convert-member-functions-to-static","readability-delete-null-pointer","readability-duplicate-include","readability-else-after-return","readability-function-*","readability-function-cognitive-complexity","readability-function-size","readability-identifier-*","readability-identifier-length","readability-identifier-naming","readability-implicit-bool-conversion","readability-inconsistent-declaration-parameter-name","readability-isolate-declaration","readability-magic-numbers","readability-make-member-function-const","readability-misleading-indentation","readability-misplaced-array-index","readability-named-parameter","readability-non-const-parameter","readability-operators-representation","readability-qualified-auto","readability-redundant-*","readability-redundant-access-specifiers","readability-redundant-casting","readability-redundant-control-flow","readability-redundant-declaration","readability-redundant-function-ptr-dereference","readability-redundant-inline-specifier","readability-redundant-member-init","readability-redundant-preprocessor","readability-redundant-smartptr-get","readability-redundant-string-*","readability-redundant-string-cstr","readability-redundant-string-init","readability-reference-to-constructed-temporary","readability-simplify-*","readability-simplify-boolean-expr","readability-simplify-subscript-expr","readability-static-*","readability-static-accessed-through-instance","readability-static-definition-in-anonymous-namespace","readability-string-compare","readability-suspicious-call-argument","readability-uniqueptr-delete-release","readability-uppercase-literal-suffix","readability-use-*","readability-use-anyofallof","readability-use-std-min-max","zircon-temporary-objects"]},"uniqueItems":true,"markdownDescription":"List of disabled `clang-tidy` checks. The values are appended to the `Checks` in a `.clang-tidy` file or `#C_Cpp.codeAnalysis.clangTidy.config#`, if any.","scope":"resource"}}},{"title":"Debugging","properties":{"C_Cpp.debugger.useBacktickCommandSubstitution":{"type":"boolean","default":false,"markdownDescription":"If `true`, debugger shell command substitution will use obsolete backtick ``(`)``.","scope":"window"},"C_Cpp.sshTargetsView":{"type":"string","enum":["enabled","disabled","default"],"default":"default","description":"Controls whether the SSH Targets view is visible. By default, enable the view when an SSH command is invoked.","scope":"window"},"C_Cpp.debugShortcut":{"type":"boolean","default":true,"description":"Show the \"Run and Debug\" play button and \"Add Debug Configuration\" gear in the editor title bar for C++ files.","scope":"resource"}}},{"title":"Resource Management","properties":{"C_Cpp.references.maxConcurrentThreads":{"type":["integer","null"],"markdownDescription":"The maximum number of concurrent threads to use for 'Find All References' and 'Rename'. The default of `null` (empty) uses the value inherited from `#C_Cpp.maxConcurrentThreads#`.","default":null,"minimum":1,"maximum":32,"scope":"machine"},"C_Cpp.references.maxCachedProcesses":{"type":["integer","null"],"markdownDescription":"The maximum number of processes to keep in memory for 'Find All References' and 'Rename'. The default of `0` disables this feature. The value of `null` (empty) uses the value inherited from `#C_Cpp.maxCachedProcesses#`.","default":0,"minimum":0,"maximum":32,"scope":"machine"},"C_Cpp.references.maxMemory":{"type":["integer","null"],"markdownDescription":"Fewer 'Find All References' and 'Rename' processes will be cached and run concurrently after this memory usage (in MB) is exceeded. The default of `null` (empty) uses the value inherited from `#C_Cpp.maxMemory#`.","default":null,"minimum":256,"maximum":65536,"scope":"machine"},"C_Cpp.intelliSenseCachePath":{"type":"string","markdownDescription":"Defines the folder path for cached precompiled headers used by IntelliSense. The default cache path is `%LocalAppData%/Microsoft/vscode-cpptools` on Windows, `$XDG_CACHE_HOME/vscode-cpptools/` on Linux (or `$HOME/.cache/vscode-cpptools/` if `XDG_CACHE_HOME` is not defined), and `$HOME/Library/Caches/vscode-cpptools/` on macOS. The default path will be used if no path is specified or if a specified path is invalid.","scope":"machine-overridable"},"C_Cpp.intelliSenseCacheSize":{"type":"number","default":5120,"markdownDescription":"Maximum size of the per-workspace hard drive space in megabytes (MB) for cached precompiled headers; the actual usage may fluctuate around this value. The default size is `5120` MB. Precompiled header caching is disabled when the size is `0`.","scope":"machine-overridable","minimum":0},"C_Cpp.intelliSenseMemoryLimit":{"type":"number","default":4096,"markdownDescription":"Memory usage limit in megabytes (MB) of an IntelliSense process. The default is `4096` and the maximum is `16384`. The extension will shutdown and restart an IntelliSense process when it exceeds the limit.","scope":"machine-overridable","minimum":256,"maximum":16384},"C_Cpp.maxConcurrentThreads":{"type":["integer","null"],"markdownDescription":"The maximum number of concurrent threads to use for language service processing. The value is a hint and may not always be used. The default of `null` (empty) uses the number of logical processors available.","default":null,"minimum":1,"maximum":32,"scope":"machine"},"C_Cpp.maxCachedProcesses":{"type":["integer","null"],"markdownDescription":"The maximum number of cached processes to use for language service processing. The default of `null` (empty) uses twice the number of logical processors available.","default":null,"minimum":0,"maximum":256,"scope":"machine"},"C_Cpp.maxMemory":{"type":["integer","null"],"markdownDescription":"The maximum memory (in MB) available for language service processing. Fewer processes will be cached and run concurrently after this memory usage is exceeded. The default of `null` (empty) uses the system's free memory.","default":null,"minimum":256,"maximum":65536,"scope":"machine"},"C_Cpp.maxSymbolSearchResults":{"type":"integer","markdownDescription":"The maximum number of results to show for 'Go to Symbol in Workspace'. The default is `5000`.","default":5000,"minimum":500,"maximum":10000,"scope":"window"},"C_Cpp.intelliSense.maxCachedProcesses":{"type":["integer","null"],"markdownDescription":"The maximum number of IntelliSense processes to keep running. The default of `null` (empty) uses value inherited from `#C_Cpp.maxCachedProcesses#`.","default":null,"minimum":2,"maximum":128,"scope":"machine"},"C_Cpp.intelliSense.maxMemory":{"type":["integer","null"],"markdownDescription":"Older IntelliSense processes will shut down before new processes are created after this memory usage (in MB) is exceeded. The default of `null` (empty) uses the value inherited from `#C_Cpp.maxMemory#`.","default":null,"minimum":256,"maximum":65536,"scope":"machine"}}},{"title":"Miscellaneous","properties":{"C_Cpp.vcpkg.enabled":{"type":"boolean","default":true,"markdownDescription":"Enable integration services for the [vcpkg dependency manager](https://aka.ms/vcpkg/).","scope":"resource"},"C_Cpp.loggingLevel":{"type":"string","enum":["None","Error","Warning","Information","Debug"],"default":"Error","markdownDescription":"The verbosity of logging in the Output Panel. The order of levels from least verbose to most verbose is: `None` < `Error` < `Warning` < `Information` < `Debug`.","scope":"window"},"C_Cpp.autoAddFileAssociations":{"type":"boolean","default":true,"markdownDescription":"Controls whether files are automatically added to `#files.associations#` when they are the target of a navigation operation from a C/C++ file.","scope":"window"},"C_Cpp.preferredPathSeparator":{"type":"string","enum":["Forward Slash","Backslash"],"default":"Forward Slash","markdownDescription":"The character used as a path separator for `#include` auto-completion results.","scope":"machine-overridable"},"C_Cpp.updateChannel":{"type":"string","enum":["Default","Insiders"],"default":"Default","markdownDescription":"Set to `Insiders` to automatically download and install the latest Insiders builds of the extension, which include upcoming features and bug fixes.","scope":"application","deprecationMessage":"This setting is deprecated. Pre-release extensions are now available via the Marketplace."},"C_Cpp.experimentalFeatures":{"type":"string","enum":["enabled","disabled"],"default":"disabled","description":"Controls whether \"experimental\" features are usable.","scope":"window"},"C_Cpp.caseSensitiveFileSupport":{"type":"string","enum":["default","enabled"],"default":"default","markdownDescription":"If set to `default`, the file system of the workspace is assumed to be case insensitive on Windows and case sensitive on macOS or Linux. If set to `enabled`, the file system of the workspace is assumed to be case sensitive on Windows.","scope":"window"},"C_Cpp.addNodeAddonIncludePaths":{"type":"boolean","default":false,"markdownDescription":"Add include paths from `nan` and `node-addon-api` when they are dependencies.","scope":"application"}}}],"commands":[{"command":"C_Cpp.ConfigurationSelect","title":"Select a Configuration...","category":"C/C++"},{"command":"C_Cpp.ConfigurationProviderSelect","title":"Change Configuration Provider...","category":"C/C++"},{"command":"C_Cpp.ConfigurationEditJSON","title":"Edit Configurations (JSON)","category":"C/C++"},{"command":"C_Cpp.ConfigurationEditUI","title":"Edit Configurations (UI)","category":"C/C++"},{"command":"C_Cpp.SelectIntelliSenseConfiguration","title":"Select IntelliSense Configuration...","category":"C/C++"},{"command":"C_Cpp.InstallCompiler","title":"Install a C++ Compiler","category":"C/C++"},{"command":"C_Cpp.RescanCompilers","title":"Rescan for Compilers","category":"C/C++"},{"command":"C_Cpp.SwitchHeaderSource","title":"Switch Header/Source","category":"C/C++"},{"command":"C_Cpp.EnableErrorSquiggles","title":"Enable Error Squiggles","category":"C/C++"},{"command":"C_Cpp.DisableErrorSquiggles","title":"Disable Error Squiggles","category":"C/C++"},{"command":"C_Cpp.ToggleDimInactiveRegions","title":"Toggle Inactive Region Colorization","category":"C/C++"},{"command":"C_Cpp.ResetDatabase","title":"Reset IntelliSense Database","category":"C/C++"},{"command":"C_Cpp.TakeSurvey","title":"Take Survey","category":"C/C++"},{"command":"C_Cpp.RestartIntelliSenseForFile","title":"Restart IntelliSense for Active File","category":"C/C++"},{"command":"C_Cpp.LogDiagnostics","title":"Log Diagnostics","category":"C/C++"},{"command":"C_Cpp.RescanWorkspace","title":"Rescan Workspace","category":"C/C++"},{"command":"C_Cpp.VcpkgClipboardInstallSuggested","title":"Copy vcpkg install command to clipboard","category":"C/C++"},{"command":"C_Cpp.VcpkgOnlineHelpSuggested","title":"Visit the vcpkg help page","category":"C/C++"},{"command":"C_Cpp.GenerateEditorConfig","title":"Generate EditorConfig contents from VC Format settings","category":"C/C++"},{"command":"C_Cpp.referencesViewGroupByType","category":"C/C++","title":"Group by Reference Type","icon":{"light":"assets/ref-group-by-type-light.svg","dark":"assets/ref-group-by-type-dark.svg"}},{"command":"C_Cpp.referencesViewUngroupByType","category":"C/C++","title":"Ungroup by Reference Type","icon":{"light":"assets/ref-ungroup-by-type-light.svg","dark":"assets/ref-ungroup-by-type-dark.svg"}},{"command":"C_Cpp.GoToNextDirectiveInGroup","title":"Go to next preprocessor directive in conditional group","category":"C/C++"},{"command":"C_Cpp.GoToPrevDirectiveInGroup","title":"Go to previous preprocessor directive in conditional group","category":"C/C++"},{"command":"C_Cpp.CreateDeclarationOrDefinition","title":"Create Declaration / Definition","category":"C/C++"},{"command":"C_Cpp.RunCodeAnalysisOnActiveFile","title":"Run Code Analysis on Active File","category":"C/C++"},{"command":"C_Cpp.RunCodeAnalysisOnOpenFiles","title":"Run Code Analysis on Open Files","category":"C/C++"},{"command":"C_Cpp.RunCodeAnalysisOnAllFiles","title":"Run Code Analysis on All Files","category":"C/C++"},{"command":"C_Cpp.RemoveAllCodeAnalysisProblems","title":"Clear All Code Analysis Problems","category":"C/C++"},{"command":"C_Cpp.BuildAndDebugFile","title":"Debug C/C++ File","category":"C/C++","icon":"$(debug-alt)"},{"command":"C_Cpp.BuildAndRunFile","title":"Run C/C++ File","category":"C/C++","icon":"$(run)"},{"command":"C_Cpp.AddDebugConfiguration","title":"Add Debug Configuration","category":"C/C++","icon":"$(debug-configure)"},{"command":"C_Cpp.GenerateDoxygenComment","title":"Generate Doxygen Comment","category":"C/C++"},{"command":"C_Cpp.addSshTarget","category":"C/C++","title":"Add SSH target","icon":"$(plus)"},{"command":"C_Cpp.removeSshTarget","category":"C/C++","title":"Remove SSH target","icon":"$(remove)"},{"command":"C_Cpp.setActiveSshTarget","category":"C/C++","title":"Set this SSH target as the active target","icon":"$(check)"},{"command":"C_Cpp.selectActiveSshTarget","category":"C/C++","title":"Select an active SSH target"},{"command":"C_Cpp.selectSshTarget","category":"C/C++","title":"Select SSH target"},{"command":"C_Cpp.activeSshTarget","category":"C/C++","title":"Get the active SSH target"},{"command":"C_Cpp.refreshCppSshTargetsView","category":"C/C++","title":"Refresh","icon":"$(refresh)"},{"command":"C_Cpp.sshTerminal","category":"C/C++","title":"Connect to this SSH target in a new terminal","icon":"$(terminal)"}],"keybindings":[{"command":"C_Cpp.SwitchHeaderSource","key":"Alt+O","when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && editorTextFocus && !(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"},{"command":"editor.action.codeAction","key":"ctrl+shift+r ctrl+i","args":{"kind":"refactor.inline.macro","apply":"first"},"when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && editorTextFocus && !(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"},{"command":"editor.action.codeAction","key":"ctrl+shift+r ctrl+e","args":{"kind":"refactor.extract.function","apply":"first"},"when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && editorTextFocus && !(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"}],"debuggers":[{"type":"cppdbg","label":"C++ (GDB/LLDB)","languages":["ada","c","cpp","cuda-cpp","rust"],"_aiKeyComment":"Ignore 'Property aiKey is not allowed'. See https://github.com/microsoft/vscode/issues/76493","aiKey":"0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255","variables":{"pickProcess":"extension.pickNativeProcess","pickRemoteProcess":"extension.pickRemoteNativeProcess"},"configurationAttributes":{"launch":{"type":"object","required":["program"],"properties":{"program":{"type":"string","description":"Full path to program executable.","default":"${workspaceRoot}/a.out"},"args":{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[]},"type":{"type":"string","description":"The type of the engine. Must be \"cppdbg\".","default":"cppdbg"},"targetArchitecture":{"type":"string","description":"The architecture of the debuggee. This will automatically be detected unless this parameter is set. Allowed values are x86, arm, arm64, mips, x64, amd64, x86_64.","default":"x64"},"cwd":{"type":"string","description":"The working directory of the target.","default":"."},"setupCommands":{"type":"array","description":"One or more GDB/LLDB commands to execute in order to setup the underlying debugger. Example: \"setupCommands\": [ { \"text\": \"-enable-pretty-printing\", \"description\": \"Enable GDB pretty printing\", \"ignoreFailures\": true }].","items":{"type":"object","default":{},"properties":{"text":{"type":"string","description":"The debugger command to execute.","default":""},"description":{"type":"string","description":"Optional description for the command.","default":""},"ignoreFailures":{"type":"boolean","description":"If true, failures from the command should be ignored. Default value is false.","default":false}}},"default":[]},"postRemoteConnectCommands":{"type":"array","description":"One or more commands that execute after remote connection to a debug server.","items":{"type":"object","default":{},"properties":{"text":{"type":"string","description":"The debugger command to execute.","default":""},"description":{"type":"string","description":"Optional description for the command.","default":""},"ignoreFailures":{"type":"boolean","description":"If true, failures from the command should be ignored. Default value is false.","default":false}}},"default":[]},"customLaunchSetupCommands":{"type":"array","description":"If provided, this replaces the default commands used to launch a target with some other commands. For example, this can be \"-target-attach\" in order to attach to a target process. An empty command list replaces the launch commands with nothing, which can be useful if the debugger is being provided launch options as command line options. Example: \"customLaunchSetupCommands\": [ { \"text\": \"target-run\", \"description\": \"run target\", \"ignoreFailures\": false }].","items":{"type":"object","default":{},"properties":{"text":{"type":"string","description":"The debugger command to execute.","default":""},"description":{"type":"string","description":"Optional description for the command.","default":""},"ignoreFailures":{"type":"boolean","description":"If true, failures from the command should be ignored. Default value is false.","default":false}}},"default":[]},"launchCompleteCommand":{"enum":["exec-run","exec-continue","None"],"description":"The command to execute after the debugger is fully setup in order to cause the target process to run. Allowed values are \"exec-run\", \"exec-continue\", \"None\". The default value is \"exec-run\".","default":"exec-run"},"visualizerFile":{"anyOf":[{"type":"string","default":""},{"type":"array","default":[],"items":{"type":"string"}}],"description":".natvis file to be used when debugging this process. This option is not compatible with GDB pretty printing. Please also see \"showDisplayString\" if using this setting."},"svdPath":{"type":"string","description":"%c_cpp.debuggers.cppdbg.visualizerFile.description","default":""},"showDisplayString":{"type":"boolean","description":"When a visualizerFile is specified, showDisplayString will enable the display string. Turning this option on can cause slower performance during debugging.","default":true},"environment":{"type":"array","description":"Environment variables to add to the environment for the program. Example: [ { \"name\": \"config\", \"value\": \"Debug\" } ], not [ { \"config\": \"Debug\" } ].","items":{"type":"object","default":{},"properties":{"name":{"type":"string"},"value":{"type":"string"}}},"default":[]},"envFile":{"type":"string","description":"Absolute path to a file containing environment variable definitions. This file has key value pairs separated by an equals sign per line. E.g. KEY=VALUE.","default":"${workspaceFolder}/.env"},"additionalSOLibSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for .so files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"MIMode":{"type":"string","description":"Indicates the console debugger that the MIDebugEngine will connect to. Allowed values are \"gdb\" \"lldb\".","default":"gdb"},"miDebuggerPath":{"type":"string","description":"The path to the MI debugger (such as gdb). When unspecified, it will search path first for the debugger.","default":"/usr/bin/gdb"},"miDebuggerArgs":{"type":"string","description":"Additional arguments for the MI debugger (such as gdb).","default":""},"miDebuggerServerAddress":{"type":"string","description":"Network address of the MI Debugger Server to connect to (example: localhost:1234).","default":"serveraddress:port"},"useExtendedRemote":{"type":"boolean","description":"Connect to the MI Debugger Server with target extended-remote mode.","default":false},"stopAtEntry":{"type":"boolean","description":"Optional parameter. If true, the debugger should stop at the entrypoint of the target. If processId is passed, has no effect.","default":false},"debugServerPath":{"type":"string","description":"Optional full path to the debug server to launch. Defaults to null. It is used in conjunction with either \"miDebugServerAddress\" or your own server with a \"customSetupCommand\" that runs \"-target-select remote <server:port>\".","default":""},"debugServerArgs":{"type":"string","description":"Optional debug server args. Defaults to null.","default":""},"serverStarted":{"type":"string","description":"Optional server-started pattern to look for in the debug server output. Defaults to null.","default":""},"filterStdout":{"type":"boolean","description":"Search stdout stream for server-started pattern and log stdout to debug output. Defaults to true.","default":true},"filterStderr":{"type":"boolean","description":"Search stderr stream for server-started pattern and log stderr to debug output. Defaults to false.","default":false},"serverLaunchTimeout":{"type":"integer","description":"Optional time, in milliseconds, for the debugger to wait for the debugServer to start up. Default is 10000.","default":"10000"},"coreDumpPath":{"type":"string","description":"Optional full path to a core dump file for the specified program. Defaults to null.","default":""},"externalConsole":{"type":"boolean","description":"If true, a console is launched for the debuggee. If false, on Linux and Windows, it will appear in the Integrated Console.","default":false},"avoidWindowsConsoleRedirection":{"type":"boolean","description":"If true, disables debuggee console redirection that is required for Integrated Terminal support.","default":false},"sourceFileMap":{"anyOf":[{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'.","default":{"<source-path>":"<target-path>"}},{"description":"Current and compile-time paths to the same source trees. Files found under the EditorPath are mapped to the CompileTimePath path for breakpoint matching and mapped from CompileTimePath to EditorPath when displaying stacktrace locations.","type":"object","default":{"<source-path>":{"editorPath":"","useForBreakpoints":true}},"properties":{"<source-path>":{"type":"object","default":{"editorPath":"","useForBreakpoints":true},"properties":{"editorPath":{"type":"string","description":"The path to the source tree the editor will use.","default":""},"useForBreakpoints":{"type":"boolean","description":"False if this entry is only used for stack frame location mapping. True if this entry should also be used when specifying breakpoint locations.","default":true}}}}}]},"logging":{"description":"Optional flags to determine what types of messages should be logged to the Debug Console.","type":"object","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"engineLogging":{"anyOf":[{"type":"string","enum":["verbose","warning","error","none"],"enumDescriptions":["Logs that are used for interactive investigation during development. These logs should primarily contain information useful for debugging and have no long-term value.","Logs that highlight an abnormal or unexpected event in the application flow, but do not otherwise cause the application execution to stop.","Logs that highlight when the current flow of execution is stopped due to a failure. These should indicate a failure in the current activity, not an application-wide failure.","Not used for writing log messages. Specifies that a logging category should not write any messages."],"description":"Optional flag to determine whether diagnostic debug engine messages should be logged to the Debug Console. Defaults to false.","default":"none"},{"type":"boolean","description":"Optional flag to determine whether diagnostic debug engine messages should be logged to the Debug Console. Defaults to false.","default":false}]},"trace":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command tracing should be logged to the Debug Console. Defaults to false.","default":false},"traceResponse":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command and response tracing should be logged to the Debug Console. Defaults to false.","default":false},"natvisDiagnostics":{"anyOf":[{"type":"string","enum":["verbose","warning","error","none"],"enumDescriptions":["Logs that are used for interactive investigation during development. These logs should primarily contain information useful for debugging and have no long-term value.","Logs that highlight an abnormal or unexpected event in the application flow, but do not otherwise cause the application execution to stop.","Logs that highlight when the current flow of execution is stopped due to a failure. These should indicate a failure in the current activity, not an application-wide failure.","Not used for writing log messages. Specifies that a logging category should not write any messages."],"description":"Optional flag to determine whether diagnostic natvis messages should be logged to the Debug Console. Defaults to None.","default":"none"},{"type":"boolean","description":"Optional flag to determine whether diagnostic natvis messages should be logged to the Debug Console. Defaults to None.","default":false}]}}},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the MI-enabled debugger backend executable (such as gdb).","type":"object","default":{"pipeCwd":"/usr/bin","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'.","pipeArgs":[],"debuggerPath":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"/usr/bin"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'."},"pipeArgs":{"type":"array","description":"Command line arguments passed to the pipe program to configure the connection.","items":{"type":"string"},"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine, for example /usr/bin/gdb.","default":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}},"quoteArgs":{"exceptions":{"type":"boolean","description":"If the pipeProgram's individual arguments contain characters (such as spaces or tabs), should it be quoted? If 'false', the debugger command will no longer be automatically quoted. Default is 'true'.","default":true}}}},"symbolLoadInfo":{"description":"Explicit control of symbol loading.","type":"object","default":{"loadAll":true,"exceptionList":""},"properties":{"loadAll":{"type":"boolean","description":"If true, symbols for all libs will be loaded, otherwise no solib symbols will be loaded. Default value is true.","default":true},"exceptionList":{"type":"string","description":"List of filenames (wildcards allowed) separated by semicolons ';'. Modifies behavior of LoadAll. If LoadAll is true then don't load symbols for libs that match any name in the list. Otherwise only load symbols for libs that match. Example: \"foo.so;bar.so\".","default":""}}},"stopAtConnect":{"type":"boolean","description":"If true, the debugger should stop after connecting to the target. If false, the debugger will continue after connecting. Defaults to false.","default":false},"hardwareBreakpoints":{"description":"Explicit control of hardware breakpoint behavior for remote targets.","default":{},"type":"object","properties":{"require":{"type":"boolean","description":"If true, always use hardware breakpoints. Defaults to false.","default":false},"limit":{"type":"integer","description":"Optional limit on the number of available hardware breakpoints to use. Only enforced when \"require\" is true and \"limit\" is greater than 0. Defaults to 0.","default":0}}},"unknownBreakpointHandling":{"type":"string","enum":["throw","stop"],"default":"throw","description":"Controls how breakpoints set externally (usually via raw GDB commands) are handled when hit.\nAllowed values are \"throw\", which acts as if an exception was thrown by the application, and \"stop\", which only pauses the debug session. The default value is \"throw\"."},"variables":{"type":"object","description":"Variables for recursive substitution in this launch configuration. Each variable may refer to others.","default":{"<variable-name>":"<variable-value>"},"properties":{},"additionalProperties":{"type":"string","description":"Variable for recursive substitution in this launch configuration. The value may refer to other variables.","default":""}},"deploySteps":{"type":"array","description":"Steps needed to deploy the application. Order matters.","items":{"anyOf":[{"type":"object","description":"Copy files using SCP or rsync.","default":{},"required":["type","files","host","targetDir"],"properties":{"type":{"type":"string","description":"Copy files using SCP or rsync.","default":"","enum":["scp","rsync"]},"files":{"anyOf":[{"type":"string"},{"type":"array","items":{"type":"string"}}],"description":"Files to be copied. Supports path pattern.","default":""},"host":{"anyOf":[{"type":"string","description":"Host information.","default":"hello@microsoft.com"},{"type":"object","description":"Host information.","default":{},"required":["hostName"],"properties":{"user":{"type":"string","description":"User logging into the host.","default":""},"hostName":{"type":"string","description":"Host name.","default":""},"port":{"anyOf":[{"type":"number"},{"type":"string","pattern":"^\\d+$|^\\${.+}$"}],"description":"SSH port on the host. Default is 22.","default":22},"jumpHosts":{"type":"array","description":"Connect to the target host by first making a connection to the jump hosts.","items":{"type":"object","default":{},"required":["hostName"],"properties":{"user":{"type":"string","description":"User logging into the host.","default":""},"hostName":{"type":"string","description":"Host name.","default":""},"port":{"anyOf":[{"type":"number"},{"type":"string","pattern":"^\\d+$|^\\${.+}$"}],"description":"SSH port on the host. Default is 22.","default":22}}}},"localForwards":{"type":"array","description":"Forward connections to the given TCP port or Unix socket on the local (client) host to the given host and port, or Unix socket, on the remote side","items":{"type":"object","default":{},"properties":{"bindAddress":{"type":"string","description":"Local address","default":""},"port":{"anyOf":[{"type":"number"},{"type":"string","pattern":"^\\d+$|^\\${.+}$"}],"description":"Local port"},"host":{"type":"string","description":"Host name","default":""},"hostPort":{"anyOf":[{"type":"number"},{"type":"string","pattern":"^\\d+$|^\\${.+}$"}],"description":"Host port"},"localSocket":{"type":"string","description":"Local socket","default":""},"remoteSocket":{"type":"string","description":"Remote socket","default":""}}}}}}]},"targetDir":{"type":"string","description":"Target directory.","default":""},"recursive":{"type":"boolean","description":"If true, copies folders recursively.","default":"true"},"debug":{"type":"boolean","description":"If true, skip when starting without debugging. If false, skip when starting debugging. If undefined, never skip."}},"allOf":[{"if":{"properties":{"type":{"const":"scp"}}},"then":{"properties":{"scpPath":{"type":"string","description":"Optional full path to SCP. Assumes SCP is on PATH if not specified","default":""}}}},{"if":{"properties":{"type":{"const":"rsync"}}},"then":{"properties":{"rsyncPath":{"type":"string","description":"Optional full path to rsync. Assumes rsync is on PATH if not specified","default":""}}}}]},{"type":"object","description":"SSH command step.","default":{},"required":["type","host","command"],"properties":{"type":{"type":"string","description":"SSH command step.","default":"","enum":["ssh"]},"host":{"anyOf":[{"type":"string","description":"Host information.","default":"hello@microsoft.com"},{"type":"object","description":"Host information.","default":{},"required":["hostName"],"properties":{"user":{"type":"string","description":"User logging into the host.","default":""},"hostName":{"type":"string","description":"Host name.","default":""},"port":{"anyOf":[{"type":"number"},{"type":"string","pattern":"^\\d+$|^\\${.+}$"}],"description":"SSH port on the host. Default is 22.","default":22},"jumpHosts":{"type":"array","description":"Connect to the target host by first making a connection to the jump hosts.","items":{"type":"object","default":{},"required":["hostName"],"properties":{"user":{"type":"string","description":"User logging into the host.","default":""},"hostName":{"type":"string","description":"Host name.","default":""},"port":{"anyOf":[{"type":"number"},{"type":"string","pattern":"^\\d+$|^\\${.+}$"}],"description":"SSH port on the host. Default is 22.","default":22}}}},"localForwards":{"type":"array","description":"Forward connections to the given TCP port or Unix socket on the local (client) host to the given host and port, or Unix socket, on the remote side","items":{"type":"object","default":{},"properties":{"bindAddress":{"type":"string","description":"Local address","default":""},"port":{"anyOf":[{"type":"number"},{"type":"string","pattern":"^\\d+$|^\\${.+}$"}],"description":"Local port"},"host":{"type":"string","description":"Host name","default":""},"hostPort":{"anyOf":[{"type":"number"},{"type":"string","pattern":"^\\d+$|^\\${.+}$"}],"description":"Host port"},"localSocket":{"type":"string","description":"Local socket","default":""},"remoteSocket":{"type":"string","description":"Remote socket","default":""}}}}}}]},"command":{"type":"string","description":"Command to be executed via SSH. The command after '-c' in SSH command.","default":""},"sshPath":{"type":"string","description":"Optional full path to SSH. Assumes SSH is on PATH if not specified","default":""},"continueOn":{"type":"string","description":"An optional finish pattern in output. When this pattern is seen in the output, continue the deploy procedures regardless of whether this step returns.","default":""},"debug":{"type":"boolean","description":"If true, skip when starting without debugging. If false, skip when starting debugging. If undefined, never skip."}}},{"type":"object","description":"Shell command step.","default":{},"required":["type","command"],"properties":{"type":{"type":"string","description":"Shell command step.","default":"","enum":["shell"]},"command":{"type":"string","description":"Shell command to be executed.","default":""},"continueOn":{"type":"string","description":"An optional finish pattern in output. When this pattern is seen in the output, continue the deploy procedures regardless of whether this step returns.","default":""},"debug":{"type":"boolean","description":"If true, skip when starting without debugging. If false, skip when starting debugging. If undefined, never skip."}}},{"type":"object","description":"VS Code command to be invoked. Can be a command in VS Code or an active extension.","default":{},"required":["type","command"],"properties":{"type":{"type":"string","description":"VS Code command to be invoked. Can be a command in VS Code or an active extension.","default":"","enum":["command"]},"command":{"type":"string","description":"VS Code command to be invoked.","default":""},"args":{"type":"array","description":"Arguments to the VS Code command.","items":{"type":"string"}}}}]},"default":[]}}},"attach":{"type":"object","default":{},"required":["program"],"properties":{"program":{"type":"string","description":"Full path to program executable.","default":"${workspaceRoot}/a.out"},"type":{"type":"string","description":"The type of the engine. Must be \"cppdbg\".","default":"cppdbg"},"targetArchitecture":{"type":"string","description":"The architecture of the debuggee. This will automatically be detected unless this parameter is set. Allowed values are x86, arm, arm64, mips, x64, amd64, x86_64.","default":"x64"},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process. This option is not compatible with GDB pretty printing. Please also see \"showDisplayString\" if using this setting.","default":""},"showDisplayString":{"type":"boolean","description":"When a visualizerFile is specified, showDisplayString will enable the display string. Turning this option on can cause slower performance during debugging.","default":true},"additionalSOLibSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for .so files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"MIMode":{"type":"string","description":"Indicates the console debugger that the MIDebugEngine will connect to. Allowed values are \"gdb\" \"lldb\".","default":"gdb"},"miDebuggerPath":{"type":"string","description":"The path to the MI debugger (such as gdb). When unspecified, it will search path first for the debugger.","default":"/usr/bin/gdb"},"miDebuggerArgs":{"type":"string","description":"Additional arguments for the MI debugger (such as gdb).","default":""},"miDebuggerServerAddress":{"type":"string","description":"Network address of the MI Debugger Server to connect to (example: localhost:1234).","default":"serveraddress:port"},"useExtendedRemote":{"type":"boolean","description":"Connect to the MI Debugger Server with target extended-remote mode.","default":false},"processId":{"anyOf":[{"type":"string","description":"Optional process id to attach the debugger to. Use \"${command:pickProcess}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":"${command:pickProcess}"},{"type":"integer","description":"Optional process id to attach the debugger to. Use \"${command:pickProcess}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":0}]},"filterStdout":{"type":"boolean","description":"Search stdout stream for server-started pattern and log stdout to debug output. Defaults to true.","default":true},"filterStderr":{"type":"boolean","description":"Search stderr stream for server-started pattern and log stderr to debug output. Defaults to false.","default":false},"sourceFileMap":{"anyOf":[{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'.","default":{"<source-path>":"<target-path>"}},{"description":"Current and compile-time paths to the same source trees. Files found under the EditorPath are mapped to the CompileTimePath path for breakpoint matching and mapped from CompileTimePath to EditorPath when displaying stacktrace locations.","type":"object","default":{"<source-path>":{"editorPath":"","useForBreakpoints":true}},"properties":{"<source-path>":{"type":"object","default":{"editorPath":"","useForBreakpoints":true},"properties":{"editorPath":{"type":"string","description":"The path to the source tree the editor will use.","default":""},"useForBreakpoints":{"type":"boolean","description":"False if this entry is only used for stack frame location mapping. True if this entry should also be used when specifying breakpoint locations.","default":true}}}}}]},"logging":{"description":"Optional flags to determine what types of messages should be logged to the Debug Console.","type":"object","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"engineLogging":{"anyOf":[{"type":"string","enum":["verbose","warning","error","none"],"enumDescriptions":["Logs that are used for interactive investigation during development. These logs should primarily contain information useful for debugging and have no long-term value.","Logs that highlight an abnormal or unexpected event in the application flow, but do not otherwise cause the application execution to stop.","Logs that highlight when the current flow of execution is stopped due to a failure. These should indicate a failure in the current activity, not an application-wide failure.","Not used for writing log messages. Specifies that a logging category should not write any messages."],"description":"Optional flag to determine whether diagnostic debug engine messages should be logged to the Debug Console. Defaults to false.","default":"none"},{"type":"boolean","description":"Optional flag to determine whether diagnostic debug engine messages should be logged to the Debug Console. Defaults to false.","default":false}]},"trace":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command tracing should be logged to the Debug Console. Defaults to false.","default":false},"traceResponse":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command and response tracing should be logged to the Debug Console. Defaults to false.","default":false},"natvisDiagnostics":{"anyOf":[{"type":"string","enum":["verbose","warning","error","none"],"enumDescriptions":["Logs that are used for interactive investigation during development. These logs should primarily contain information useful for debugging and have no long-term value.","Logs that highlight an abnormal or unexpected event in the application flow, but do not otherwise cause the application execution to stop.","Logs that highlight when the current flow of execution is stopped due to a failure. These should indicate a failure in the current activity, not an application-wide failure.","Not used for writing log messages. Specifies that a logging category should not write any messages."],"description":"Optional flag to determine whether diagnostic natvis messages should be logged to the Debug Console. Defaults to None.","default":"none"},{"type":"boolean","description":"Optional flag to determine whether diagnostic natvis messages should be logged to the Debug Console. Defaults to None.","default":false}]}}},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the MI-enabled debugger backend executable (such as gdb).","type":"object","default":{"pipeCwd":"/usr/bin","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'.","pipeArgs":[],"debuggerPath":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"/usr/bin"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'."},"pipeArgs":{"type":"array","description":"Command line arguments passed to the pipe program to configure the connection.","items":{"type":"string"},"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine, for example /usr/bin/gdb.","default":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}},"quoteArgs":{"exceptions":{"type":"boolean","description":"If the pipeProgram's individual arguments contain characters (such as spaces or tabs), should it be quoted? If 'false', the debugger command will no longer be automatically quoted. Default is 'true'.","default":true}}}},"setupCommands":{"type":"array","description":"One or more GDB/LLDB commands to execute in order to setup the underlying debugger. Example: \"setupCommands\": [ { \"text\": \"-enable-pretty-printing\", \"description\": \"Enable GDB pretty printing\", \"ignoreFailures\": true }].","items":{"type":"object","default":{},"properties":{"text":{"type":"string","description":"The debugger command to execute.","default":""},"description":{"type":"string","description":"Optional description for the command.","default":""},"ignoreFailures":{"type":"boolean","description":"If true, failures from the command should be ignored. Default value is false.","default":false}}},"default":[]},"symbolLoadInfo":{"description":"Explicit control of symbol loading.","type":"object","default":{"loadAll":true,"exceptionList":""},"properties":{"loadAll":{"type":"boolean","description":"If true, symbols for all libs will be loaded, otherwise no solib symbols will be loaded. Default value is true.","default":true},"exceptionList":{"type":"string","description":"List of filenames (wildcards allowed) separated by semicolons ';'. Modifies behavior of LoadAll. If LoadAll is true then don't load symbols for libs that match any name in the list. Otherwise only load symbols for libs that match. Example: \"foo.so;bar.so\".","default":""}}},"variables":{"type":"object","description":"Variables for recursive substitution in this launch configuration. Each variable may refer to others.","default":{"<variable-name>":"<variable-value>"},"properties":{},"additionalProperties":{"type":"string","description":"Variable for recursive substitution in this launch configuration. The value may refer to other variables.","default":""}},"deploySteps":{"type":"array","description":"Steps needed to deploy the application. Order matters.","items":{"anyOf":[{"type":"object","description":"Copy files using SCP or rsync.","default":{},"required":["type","files","host","targetDir"],"properties":{"type":{"type":"string","description":"Copy files using SCP or rsync.","default":"","enum":["scp","rsync"]},"files":{"anyOf":[{"type":"string"},{"type":"array","items":{"type":"string"}}],"description":"Files to be copied. Supports path pattern.","default":""},"host":{"anyOf":[{"type":"string","description":"Host information.","default":"hello@microsoft.com"},{"type":"object","description":"Host information.","default":{},"required":["hostName"],"properties":{"user":{"type":"string","description":"User logging into the host.","default":""},"hostName":{"type":"string","description":"Host name.","default":""},"port":{"anyOf":[{"type":"number"},{"type":"string","pattern":"^\\d+$|^\\${.+}$"}],"description":"SSH port on the host. Default is 22.","default":22},"jumpHosts":{"type":"array","description":"Connect to the target host by first making a connection to the jump hosts.","items":{"type":"object","default":{},"required":["hostName"],"properties":{"user":{"type":"string","description":"User logging into the host.","default":""},"hostName":{"type":"string","description":"Host name.","default":""},"port":{"anyOf":[{"type":"number"},{"type":"string","pattern":"^\\d+$|^\\${.+}$"}],"description":"SSH port on the host. Default is 22.","default":22}}}},"localForwards":{"type":"array","description":"Forward connections to the given TCP port or Unix socket on the local (client) host to the given host and port, or Unix socket, on the remote side","items":{"type":"object","default":{},"properties":{"bindAddress":{"type":"string","description":"Local address","default":""},"port":{"anyOf":[{"type":"number"},{"type":"string","pattern":"^\\d+$|^\\${.+}$"}],"description":"Local port"},"host":{"type":"string","description":"Host name","default":""},"hostPort":{"anyOf":[{"type":"number"},{"type":"string","pattern":"^\\d+$|^\\${.+}$"}],"description":"Host port"},"localSocket":{"type":"string","description":"Local socket","default":""},"remoteSocket":{"type":"string","description":"Remote socket","default":""}}}}}}]},"targetDir":{"type":"string","description":"Target directory.","default":""},"recursive":{"type":"boolean","description":"If true, copies folders recursively.","default":"true"},"debug":{"type":"boolean","description":"If true, skip when starting without debugging. If false, skip when starting debugging. If undefined, never skip."}},"allOf":[{"if":{"properties":{"type":{"const":"scp"}}},"then":{"properties":{"scpPath":{"type":"string","description":"Optional full path to SCP. Assumes SCP is on PATH if not specified","default":""}}}},{"if":{"properties":{"type":{"const":"rsync"}}},"then":{"properties":{"rsyncPath":{"type":"string","description":"Optional full path to rsync. Assumes rsync is on PATH if not specified","default":""}}}}]},{"type":"object","description":"SSH command step.","default":{},"required":["type","host","command"],"properties":{"type":{"type":"string","description":"SSH command step.","default":"","enum":["ssh"]},"host":{"anyOf":[{"type":"string","description":"Host information.","default":"hello@microsoft.com"},{"type":"object","description":"Host information.","default":{},"required":["hostName"],"properties":{"user":{"type":"string","description":"User logging into the host.","default":""},"hostName":{"type":"string","description":"Host name.","default":""},"port":{"anyOf":[{"type":"number"},{"type":"string","pattern":"^\\d+$|^\\${.+}$"}],"description":"SSH port on the host. Default is 22.","default":22},"jumpHosts":{"type":"array","description":"Connect to the target host by first making a connection to the jump hosts.","items":{"type":"object","default":{},"required":["hostName"],"properties":{"user":{"type":"string","description":"User logging into the host.","default":""},"hostName":{"type":"string","description":"Host name.","default":""},"port":{"anyOf":[{"type":"number"},{"type":"string","pattern":"^\\d+$|^\\${.+}$"}],"description":"SSH port on the host. Default is 22.","default":22}}}},"localForwards":{"type":"array","description":"Forward connections to the given TCP port or Unix socket on the local (client) host to the given host and port, or Unix socket, on the remote side","items":{"type":"object","default":{},"properties":{"bindAddress":{"type":"string","description":"Local address","default":""},"port":{"anyOf":[{"type":"number"},{"type":"string","pattern":"^\\d+$|^\\${.+}$"}],"description":"Local port"},"host":{"type":"string","description":"Host name","default":""},"hostPort":{"anyOf":[{"type":"number"},{"type":"string","pattern":"^\\d+$|^\\${.+}$"}],"description":"Host port"},"localSocket":{"type":"string","description":"Local socket","default":""},"remoteSocket":{"type":"string","description":"Remote socket","default":""}}}}}}]},"command":{"type":"string","description":"Command to be executed via SSH. The command after '-c' in SSH command.","default":""},"sshPath":{"type":"string","description":"Optional full path to SSH. Assumes SSH is on PATH if not specified","default":""},"continueOn":{"type":"string","description":"An optional finish pattern in output. When this pattern is seen in the output, continue the deploy procedures regardless of whether this step returns.","default":""},"debug":{"type":"boolean","description":"If true, skip when starting without debugging. If false, skip when starting debugging. If undefined, never skip."}}},{"type":"object","description":"Shell command step.","default":{},"required":["type","command"],"properties":{"type":{"type":"string","description":"Shell command step.","default":"","enum":["shell"]},"command":{"type":"string","description":"Shell command to be executed.","default":""},"continueOn":{"type":"string","description":"An optional finish pattern in output. When this pattern is seen in the output, continue the deploy procedures regardless of whether this step returns.","default":""},"debug":{"type":"boolean","description":"If true, skip when starting without debugging. If false, skip when starting debugging. If undefined, never skip."}}},{"type":"object","description":"VS Code command to be invoked. Can be a command in VS Code or an active extension.","default":{},"required":["type","command"],"properties":{"type":{"type":"string","description":"VS Code command to be invoked. Can be a command in VS Code or an active extension.","default":"","enum":["command"]},"command":{"type":"string","description":"VS Code command to be invoked.","default":""},"args":{"type":"array","description":"Arguments to the VS Code command.","items":{"type":"string"}}}}]},"default":[]}}}}},{"type":"cppvsdbg","label":"C++ (Windows)","when":"workspacePlatform == windows","languages":["ada","c","cpp","cuda-cpp","rust"],"_aiKeyComment":"Ignore 'Property aiKey is not allowed'. See https://github.com/microsoft/vscode/issues/76493","aiKey":"0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255","variables":{"pickProcess":"extension.pickNativeProcess"},"configurationAttributes":{"launch":{"type":"object","required":["program","cwd"],"properties":{"program":{"type":"string","description":"Full path to program executable.","default":"${workspaceRoot}/program.exe"},"args":{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[]},"type":{"type":"string","description":"The type of the engine. Must be \"cppvsdbg\".","default":"cppvsdbg"},"cwd":{"type":"string","description":"The working directory of the target.","default":"${workspaceRoot}"},"environment":{"type":"array","description":"Environment variables to add to the environment for the program. Example: [ { \"name\": \"config\", \"value\": \"Debug\" } ], not [ { \"config\": \"Debug\" } ].","items":{"type":"object","default":{},"properties":{"name":{"type":"string"},"value":{"type":"string"}}},"default":[]},"envFile":{"type":"string","description":"Absolute path to a file containing environment variable definitions. This file has key value pairs separated by an equals sign per line. E.g. KEY=VALUE.","default":"${workspaceFolder}/.env"},"symbolSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for symbol (that is, pdb) files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"stopAtEntry":{"type":"boolean","description":"Optional parameter. If true, the debugger should stop at the entrypoint of the target. If processId is passed, has no effect.","default":false},"dumpPath":{"type":"string","description":"Optional full path to a dump file for the specified program. Example: \"c:\\temp\\app.dmp\". Defaults to null.","default":""},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process.","default":""},"externalConsole":{"type":"boolean","description":"[Deprecated by 'console'] If true, a console is launched for the debuggee. If false, no console is launched.","default":false},"console":{"type":"string","enum":["internalConsole","integratedTerminal","externalTerminal","newExternalWindow"],"enumDescriptions":["Output to the VS Code Debug Console. This doesn't support reading console input (ex:'std::cin' or 'scanf').","VS Code's integrated terminal.","Console applications will be launched in an external terminal window. The window will be reused in relaunch scenarios and will not automatically disappear when the application exits.","Console applications will be launched in their own external console window which will end when the application stops. Non-console applications will run without a terminal, and stdout/stderr will be ignored."],"description":"Where to launch the debug target. Defaults to 'internalConsole' if not defined.","default":"internalConsole"},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'.","default":{"<source-path>":"<target-path>"}},"enableDebugHeap":{"type":"boolean","description":"If false, the process will be launched with debug heap disabled. This sets the environment variable '_NO_DEBUG_HEAP' to '1'.","default":false},"logging":{"type":"object","description":"Optional flags to determine what types of messages should be logged to the Debug Console.","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic debug engine messages should be logged to the Debug Console. Defaults to false.","default":false},"threadExit":{"type":"boolean","description":"Optional flag to determine whether thread exit messages should be logged to the Debug Console. Default: false.","default":false},"processExit":{"type":"boolean","description":"Optional flag to determine whether target process exit messages should be logged to the Debug Console. Default: true.","default":true}}},"requireExactSource":{"type":"boolean","description":"Optional flag to require current source code to match the pdb.","default":true},"symbolOptions":{"description":"Options to control how symbols (.pdb files) are found and loaded.","default":{"searchPaths":[],"searchMicrosoftSymbolServer":false},"type":"object","properties":{"searchPaths":{"type":"array","items":{"type":"string"},"description":"Array of symbol server URLs (example: http​://MyExampleSymbolServer) or directories (example: /build/symbols) to search for .pdb files. These directories will be searched in addition to the default locations -- next to the module and the path where the pdb was originally dropped to.","default":[]},"searchMicrosoftSymbolServer":{"type":"boolean","description":"If 'true' the Microsoft Symbol server (https​://msdl.microsoft.com​/download/symbols) is added to the symbols search path. If unspecified, this option defaults to 'false'.","default":false},"cachePath":{"type":"string","description":"Directory where symbols downloaded from symbol servers should be cached. If unspecified, on Windows the debugger will default to %TEMP%\\SymbolCache.","default":"%TEMP%\\SymbolCache"},"moduleFilter":{"description":"Provides options to control which modules (.dll files) the debugger will attempt to load symbols (.pdb files) for.","default":{"mode":"loadAllButExcluded","excludedModules":[]},"type":"object","required":["mode"],"properties":{"mode":{"type":"string","enum":["loadAllButExcluded","loadOnlyIncluded"],"enumDescriptions":["Load symbols for all modules unless the module is in the 'excludedModules' array.","Do not attempt to load symbols for ANY module unless it is in the 'includedModules' array, or it is included through the 'includeSymbolsNextToModules' setting."],"description":"Controls which of the two basic operating modes the module filter operates in.","default":"loadAllButExcluded"},"excludedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should NOT load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadAllButExcluded'.","default":[]},"includedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":["MyExampleModule.dll"]},"includeSymbolsNextToModules":{"type":"boolean","description":"If true, for any module NOT in the 'includedModules' array, the debugger will still check next to the module itself and the launching executable, but it will not check paths on the symbol search list. This option defaults to 'true'.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":true}}}}}}},"attach":{"type":"object","default":{},"required":["processId"],"properties":{"type":{"type":"string","description":"The type of the engine. Must be \"cppvsdbg\".","default":"cppvsdbg"},"symbolSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for symbol (that is, pdb) files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"processId":{"anyOf":[{"type":"string","description":"Optional process id to attach the debugger to. Use \"${command:pickProcess}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":"${command:pickProcess}"},{"type":"integer","description":"Optional process id to attach the debugger to. Use \"${command:pickProcess}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":0}]},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process.","default":""},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'.","default":{"<source-path>":"<target-path>"}},"logging":{"type":"object","description":"Optional flags to determine what types of messages should be logged to the Debug Console.","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"trace":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command tracing should be logged to the Debug Console. Defaults to false.","default":false}}},"requireExactSource":{"type":"boolean","description":"Optional flag to require current source code to match the pdb.","default":true},"symbolOptions":{"description":"Options to control how symbols (.pdb files) are found and loaded.","default":{"searchPaths":[],"searchMicrosoftSymbolServer":false},"type":"object","properties":{"searchPaths":{"type":"array","items":{"type":"string"},"description":"Array of symbol server URLs (example: http​://MyExampleSymbolServer) or directories (example: /build/symbols) to search for .pdb files. These directories will be searched in addition to the default locations -- next to the module and the path where the pdb was originally dropped to.","default":[]},"searchMicrosoftSymbolServer":{"type":"boolean","description":"If 'true' the Microsoft Symbol server (https​://msdl.microsoft.com​/download/symbols) is added to the symbols search path. If unspecified, this option defaults to 'false'.","default":false},"cachePath":{"type":"string","description":"Directory where symbols downloaded from symbol servers should be cached. If unspecified, on Windows the debugger will default to %TEMP%\\SymbolCache.","default":"%TEMP%\\SymbolCache"},"moduleFilter":{"description":"Provides options to control which modules (.dll files) the debugger will attempt to load symbols (.pdb files) for.","default":{"mode":"loadAllButExcluded","excludedModules":[]},"type":"object","required":["mode"],"properties":{"mode":{"type":"string","enum":["loadAllButExcluded","loadOnlyIncluded"],"enumDescriptions":["Load symbols for all modules unless the module is in the 'excludedModules' array.","Do not attempt to load symbols for ANY module unless it is in the 'includedModules' array, or it is included through the 'includeSymbolsNextToModules' setting."],"description":"Controls which of the two basic operating modes the module filter operates in.","default":"loadAllButExcluded"},"excludedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should NOT load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadAllButExcluded'.","default":[]},"includedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":["MyExampleModule.dll"]},"includeSymbolsNextToModules":{"type":"boolean","description":"If true, for any module NOT in the 'includedModules' array, the debugger will still check next to the module itself and the launching executable, but it will not check paths on the symbol search list. This option defaults to 'true'.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":true}}}}}}}}}],"breakpoints":[{"language":"ada"},{"language":"c"},{"language":"cpp"},{"language":"cuda-cpp"},{"language":"cuda"},{"language":"rust"}],"jsonValidation":[{"fileMatch":"c_cpp_properties.json","url":"cpptools-schema:///c_cpp_properties.schema.json"}],"menus":{"view/title":[{"command":"C_Cpp.referencesViewGroupByType","when":"view == CppReferencesView && refView.isGroupedByFile","group":"navigation"},{"command":"C_Cpp.referencesViewUngroupByType","when":"view == CppReferencesView && !refView.isGroupedByFile","group":"navigation"},{"command":"C_Cpp.addSshTarget","when":"view == CppSshTargetsView","group":"navigation"},{"command":"C_Cpp.refreshCppSshTargetsView","when":"view == CppSshTargetsView","group":"navigation"}],"view/item/context":[{"command":"C_Cpp.setActiveSshTarget","when":"viewItem == CppSshTargetsView.targetLeafCanSetActive || viewItem == CppSshTargetsView.targetLeafRemovableCanSetActive","group":"inline@0"},{"command":"C_Cpp.sshTerminal","when":"view == CppSshTargetsView","group":"inline@1"},{"command":"C_Cpp.removeSshTarget","when":"viewItem == CppSshTargetsView.targetLeafRemovable || viewItem == CppSshTargetsView.targetLeafRemovableCanSetActive","group":"inline@2"}],"editor/title/run":[{"command":"C_Cpp.BuildAndDebugFile","when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && config.C_Cpp.debugShortcut && cpptools.buildAndDebug.isSourceFile","group":"navigation@0"},{"command":"C_Cpp.BuildAndRunFile","when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && config.C_Cpp.debugShortcut && cpptools.buildAndDebug.isSourceFile","group":"navigation@1"}],"editor/title":[{"command":"C_Cpp.AddDebugConfiguration","when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && config.C_Cpp.debugShortcut && cpptools.buildAndDebug.isSourceFile && cpptools.buildAndDebug.isFolderOpen","group":"navigation"}],"editor/context":[{"command":"C_Cpp.SwitchHeaderSource","when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && !(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)","group":"custom1@1"},{"command":"workbench.action.gotoSymbol","when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && !(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)","group":"custom1@2"},{"command":"workbench.action.showAllSymbols","when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && !(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)","group":"custom1@3"},{"command":"C_Cpp.RunCodeAnalysisOnActiveFile","when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && config.C_Cpp.intelliSenseEngine =~ /^[dD]efault$/","group":"custom2@1"},{"command":"C_Cpp.RestartIntelliSenseForFile","when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && config.C_Cpp.intelliSenseEngine =~ /^[dD]efault$/","group":"custom2@2"},{"command":"C_Cpp.AddDebugConfiguration","when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && config.C_Cpp.debugShortcut && cpptools.buildAndDebug.isSourceFile && cpptools.buildAndDebug.isFolderOpen","group":"custom2@3"},{"command":"C_Cpp.GenerateDoxygenComment","when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && !(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)","group":"custom2@4"},{"command":"C_Cpp.CreateDeclarationOrDefinition","when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && !(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)","group":"custom2@5"}],"commandPalette":[{"command":"C_Cpp.ConfigurationSelect","when":"!(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"},{"command":"C_Cpp.ConfigurationProviderSelect","when":"!(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"},{"command":"C_Cpp.ConfigurationEditJSON","when":"!(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"},{"command":"C_Cpp.ConfigurationEditUI","when":"!(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"},{"command":"C_Cpp.SelectIntelliSenseConfiguration","when":"!(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"},{"command":"C_Cpp.SwitchHeaderSource","when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && !(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"},{"command":"C_Cpp.EnableErrorSquiggles","when":"config.C_Cpp.intelliSenseEngine =~ /^[dD]efault$/"},{"command":"C_Cpp.DisableErrorSquiggles","when":"config.C_Cpp.intelliSenseEngine =~ /^[dD]efault$/"},{"command":"C_Cpp.ToggleDimInactiveRegions","when":"config.C_Cpp.intelliSenseEngine =~ /^[dD]efault$/"},{"command":"C_Cpp.ResetDatabase","when":"!(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"},{"command":"C_Cpp.RestartIntelliSenseForFile","when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && config.C_Cpp.intelliSenseEngine =~ /^[dD]efault$/"},{"command":"C_Cpp.LogDiagnostics","when":"!(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"},{"command":"C_Cpp.RescanWorkspace","when":"!(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"},{"command":"C_Cpp.VcpkgClipboardInstallSuggested","when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && config.C_Cpp.intelliSenseEngine =~ /^[dD]efault$/"},{"command":"C_Cpp.GenerateEditorConfig","when":"!(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"},{"command":"C_Cpp.GoToNextDirectiveInGroup","when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && !(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"},{"command":"C_Cpp.GoToPrevDirectiveInGroup","when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && !(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"},{"command":"C_Cpp.CreateDeclarationOrDefinition","when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && !(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"},{"command":"C_Cpp.RunCodeAnalysisOnActiveFile","when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && config.C_Cpp.intelliSenseEngine =~ /^[dD]efault$/"},{"command":"C_Cpp.RunCodeAnalysisOnOpenFiles","when":"config.C_Cpp.intelliSenseEngine =~ /^[dD]efault$/"},{"command":"C_Cpp.RunCodeAnalysisOnAllFiles","when":"config.C_Cpp.intelliSenseEngine =~ /^[dD]efault$/"},{"command":"C_Cpp.RemoveAllCodeAnalysisProblems","when":"config.C_Cpp.intelliSenseEngine =~ /^[dD]efault$/"},{"command":"C_Cpp.BuildAndDebugFile","when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && config.C_Cpp.debugShortcut && cpptools.buildAndDebug.isSourceFile"},{"command":"C_Cpp.BuildAndRunFile","when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && config.C_Cpp.debugShortcut && cpptools.buildAndDebug.isSourceFile"},{"command":"C_Cpp.AddDebugConfiguration","when":"config.C_Cpp.debugShortcut && cpptools.buildAndDebug.isFolderOpen"},{"command":"C_Cpp.GenerateDoxygenComment","when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && !(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"},{"command":"C_Cpp.referencesViewGroupByType","when":"cpptools.hasReferencesResults"},{"command":"C_Cpp.referencesViewUngroupByType","when":"cpptools.hasReferencesResults"},{"command":"C_Cpp.InstallCompiler","when":"never"},{"command":"C_Cpp.RescanCompilers","when":"never"},{"command":"C_Cpp.addSshTarget","when":"never"},{"command":"C_Cpp.removeSshTarget","when":"never"},{"command":"C_Cpp.setActiveSshTarget","when":"never"},{"command":"C_Cpp.selectSshTarget","when":"never"},{"command":"C_Cpp.activeSshTarget","when":"never"},{"command":"C_Cpp.refreshCppSshTargetsView","when":"never"},{"command":"C_Cpp.sshTerminal","when":"never"}]},"configurationDefaults":{"[cpp]":{"editor.wordBasedSuggestions":"off","editor.semanticHighlighting.enabled":true,"editor.stickyScroll.defaultModel":"foldingProviderModel","editor.suggest.insertMode":"replace"},"[cuda-cpp]":{"editor.wordBasedSuggestions":"off","editor.semanticHighlighting.enabled":true,"editor.stickyScroll.defaultModel":"foldingProviderModel","editor.suggest.insertMode":"replace"},"[c]":{"editor.wordBasedSuggestions":"off","editor.semanticHighlighting.enabled":true,"editor.stickyScroll.defaultModel":"foldingProviderModel","editor.suggest.insertMode":"replace"}},"semanticTokenTypes":[{"id":"referenceType","superType":"class","description":"Style for C++/CLI reference types."},{"id":"cliProperty","superType":"property","description":"Style for C++/CLI properties."},{"id":"genericType","superType":"class","description":"Style for C++/CLI generic types."},{"id":"valueType","superType":"class","description":"Style for C++/CLI value types."},{"id":"templateFunction","superType":"function","description":"Style for C++ template functions."},{"id":"templateType","superType":"class","description":"Style for C++ template types."},{"id":"operatorOverload","superType":"operator","description":"Style for C++ overloaded operators."},{"id":"memberOperatorOverload","superType":"operator","description":"Style for C++ overloaded operator member functions."},{"id":"newOperator","superType":"operator","description":"Style for C++ `new` or `delete` operators."},{"id":"customLiteral","superType":"number","description":"Style for C++ user-defined literals."},{"id":"numberLiteral","superType":"number","description":"Style for C++ user-defined literal numbers."},{"id":"stringLiteral","superType":"string","description":"Style for C++ user-defined literal strings."}],"semanticTokenModifiers":[{"id":"global","description":"Style to use for symbols that are global."},{"id":"local","description":"Style to use for symbols that are local."}],"semanticTokenScopes":[{"language":"c","scopes":{"namespace":["entity.name.namespace.c"],"type":["entity.name.type.c"],"type.defaultLibrary":["support.type.c"],"struct":["storage.type.struct.c"],"class":["entity.name.type.class.c"],"class.defaultLibrary":["support.class.c"],"interface":["entity.name.type.interface.c"],"enum":["entity.name.type.enum.c"],"function":["entity.name.function.c"],"function.defaultLibrary":["support.function.c"],"method":["entity.name.function.member.c"],"variable":["variable.other.readwrite.c","entity.name.variable.c"],"variable.readonly":["variable.other.constant.c"],"variable.readonly.defaultLibrary":["support.constant.c"],"parameter":["variable.parameter.c"],"property":["variable.other.property.c"],"property.readonly":["variable.other.constant.property.c"],"enumMember":["variable.other.enummember.c"],"event":["variable.other.event.c"],"label":["entity.name.label.c"],"variable.global":["variable.other.global.c"],"variable.local":["variable.other.local.c"],"property.static":["variable.other.property.static.c"],"method.static":["entity.name.function.member.static.c"],"macro":["entity.name.function.preprocessor.c","entity.name.function.macro.c"],"referenceType":["entity.name.type.class.reference.c"],"cliProperty":["variable.other.property.cli.c"],"genericType":["entity.name.type.class.generic.c"],"valueType":["entity.name.type.class.value.c"],"templateFunction":["entity.name.function.templated.c"],"templateType":["entity.name.type.class.templated.c"],"operatorOverload":["entity.name.function.operator.c"],"memberOperatorOverload":["entity.name.function.operator.member.c"],"newOperator":["keyword.operator.new.c"],"numberLiteral":["entity.name.operator.custom-literal.number.c"],"customLiteral":["entity.name.operator.custom-literal.c"],"stringLiteral":["entity.name.operator.custom-literal.string.c"]}},{"language":"cpp","scopes":{"namespace":["entity.name.namespace.cpp"],"type":["entity.name.type.cpp"],"type.defaultLibrary":["support.type.cpp"],"struct":["storage.type.struct.cpp"],"class":["entity.name.type.class.cpp"],"class.defaultLibrary":["support.class.cpp"],"interface":["entity.name.type.interface.cpp"],"enum":["entity.name.type.enum.cpp"],"function":["entity.name.function.cpp"],"function.defaultLibrary":["support.function.cpp"],"method":["entity.name.function.member.cpp"],"variable":["variable.other.readwrite.cpp","entity.name.variable.cpp"],"variable.readonly":["variable.other.constant.cpp"],"variable.readonly.defaultLibrary":["support.constant.cpp"],"parameter":["variable.parameter.cpp"],"property":["variable.other.property.cpp"],"property.readonly":["variable.other.constant.property.cpp"],"enumMember":["variable.other.enummember.cpp"],"event":["variable.other.event.cpp"],"label":["entity.name.label.cpp"],"variable.global":["variable.other.global.cpp"],"variable.local":["variable.other.local.cpp"],"property.static":["variable.other.property.static.cpp"],"method.static":["entity.name.function.member.static.cpp"],"macro":["entity.name.function.preprocessor.cpp","entity.name.function.macro.cpp"],"referenceType":["entity.name.type.class.reference.cpp"],"cliProperty":["variable.other.property.cli.cpp"],"genericType":["entity.name.type.class.generic.cpp"],"valueType":["entity.name.type.class.value.cpp"],"templateFunction":["entity.name.function.templated.cpp"],"templateType":["entity.name.type.class.templated.cpp"],"operatorOverload":["entity.name.function.operator.cpp"],"memberOperatorOverload":["entity.name.function.operator.member.cpp"],"newOperator":["keyword.operator.new.cpp"],"numberLiteral":["entity.name.operator.custom-literal.number.cpp"],"customLiteral":["entity.name.operator.custom-literal.cpp"],"stringLiteral":["entity.name.operator.custom-literal.string.cpp"]}},{"language":"cuda-cpp","scopes":{"namespace":["entity.name.namespace.cuda-cpp"],"type":["entity.name.type.cuda-cpp"],"type.defaultLibrary":["support.type.cuda-cpp"],"struct":["storage.type.struct.cuda-cpp"],"class":["entity.name.type.class.cuda-cpp"],"class.defaultLibrary":["support.class.cuda-cpp"],"interface":["entity.name.type.interface.cuda-cpp"],"enum":["entity.name.type.enum.cuda-cpp"],"function":["entity.name.function.cuda-cpp"],"function.defaultLibrary":["support.function.cuda-cpp"],"method":["entity.name.function.member.cuda-cpp"],"variable":["variable.other.readwrite.cuda-cpp","entity.name.variable.cuda-cpp"],"variable.readonly":["variable.other.constant.cuda-cpp"],"variable.readonly.defaultLibrary":["support.constant.cuda-cpp"],"parameter":["variable.parameter.cuda-cpp"],"property":["variable.other.property.cuda-cpp"],"property.readonly":["variable.other.constant.property.cuda-cpp"],"enumMember":["variable.other.enummember.cuda-cpp"],"event":["variable.other.event.cuda-cpp"],"label":["entity.name.label.cuda-cpp"],"variable.global":["variable.other.global.cuda-cpp"],"variable.local":["variable.other.local.cuda-cpp"],"property.static":["variable.other.property.static.cuda-cpp"],"method.static":["entity.name.function.member.static.cuda-cpp"],"macro":["entity.name.function.preprocessor.cuda-cpp","entity.name.function.macro.cuda-cpp"],"referenceType":["entity.name.type.class.reference.cuda-cpp"],"cliProperty":["variable.other.property.cli.cuda-cpp"],"genericType":["entity.name.type.class.generic.cuda-cpp"],"valueType":["entity.name.type.class.value.cuda-cpp"],"templateFunction":["entity.name.function.templated.cuda-cpp"],"templateType":["entity.name.type.class.templated.cuda-cpp"],"operatorOverload":["entity.name.function.operator.cuda-cpp"],"memberOperatorOverload":["entity.name.function.operator.member.cuda-cpp"],"newOperator":["keyword.operator.new.cuda-cpp"],"numberLiteral":["entity.name.operator.custom-literal.number.cuda-cpp"],"customLiteral":["entity.name.operator.custom-literal.cuda-cpp"],"stringLiteral":["entity.name.operator.custom-literal.string.cuda-cpp"]}}],"codeActions":[{"languages":["c","cpp","cuda-cpp"],"actions":{"kind":"refactor.inline.macro","title":"Inline macro","description":"Replace the macro invocation with the expanded code."}},{"languages":["c","cpp","cuda-cpp"],"actions":{"kind":"refactor.extract.function","title":"Extract to function","description":"Extract the selected code to a free or member function."}}],"languageModelTools":[{"name":"cpptools-lmtool-configuration","toolReferenceName":"cpp","displayName":"C/C++ configuration","canBeReferencedInPrompt":true,"userDescription":"Configuration of the active C or C++ file, like language standard version and target platform.","modelDescription":"For the active C or C++ file, this tool provides: the language (C, C++, or CUDA), the language standard version (such as C++11, C++14, C++17, or C++20), the compiler (such as GCC, Clang, or MSVC), the target platform (such as x86, x64, or ARM), and the target architecture (such as 32-bit or 64-bit).","icon":"$(file-code)","when":"(config.C_Cpp.experimentalFeatures =~ /^[eE]nabled$/)"}]},"scripts":{"scripts":"ts-node -T .scripts/scripts.ts","show":"ts-node -T .scripts/clean.ts show","clean":"ts-node -T .scripts/clean.ts","test":"yarn install && (yarn verify prep --quiet || yarn prep) && (yarn verify compiled --quiet || yarn build) && ts-node -T .scripts/test.ts","code":"yarn install && (yarn verify compiled --quiet || yarn build) && yarn verify binaries && ts-node -T .scripts/code.ts","verify":"ts-node -T .scripts/verify.ts","prep":"yarn prep:dts && yarn copy-walkthrough-media && yarn generate-native-strings && yarn translations-generate","lint":"yarn install && eslint -c .eslintrc.js --report-unused-disable-directives src test ui .scripts","compile":"yarn install && (yarn verify prep --quiet || yarn prep) && yarn build","watch":"yarn install && (yarn verify prep --quiet || yarn prep) && tsc --build tsconfig.json --watch","rebuild":"yarn install && yarn clean && yarn prep && yarn build","vsix-prepublish":"yarn install && yarn clean && yarn webpack","webpack":"yarn install && (yarn verify prep --quiet || yarn prep) && tsc --build ui.tsconfig.json && webpack --mode production --env vscode_nls","generate-native-strings":"ts-node -T ./.scripts/generateNativeStrings.ts","generate-options-schema":"ts-node -T ./.scripts/generateOptionsSchema.ts","copy-walkthrough-media":"ts-node -T ./.scripts/copyWalkthruMedia.ts","translations-export":"yarn install && yarn prep && yarn generate-native-strings && gulp translations-export","translations-generate":"set NODE_OPTIONS=--no-experimental-fetch && gulp translations-generate","translations-import":"gulp translations-import","import-edge-strings":"ts-node -T ./.scripts/import_edge_strings.ts","prep:dts":"yarn verify dts --quiet || (npx vscode-dts dev && npx vscode-dts main)","build":"yarn prep:dts && echo [Building TypeScript code] && tsc --build tsconfig.json"},"devDependencies":{"@octokit/rest":"^20.1.1","@types/glob":"^7.2.0","@types/minimatch":"^3.0.5","@types/mocha":"^10.0.6","@types/node":"^20.14.2","@types/node-fetch":"^2.6.11","@types/plist":"^3.0.5","@types/semver":"^7.5.8","@types/shell-quote":"^1.7.5","@types/tmp":"^0.2.6","@types/which":"^2.0.2","@types/yauzl":"^2.10.3","@typescript-eslint/eslint-plugin":"^6.1.0","@typescript-eslint/parser":"^6.1.0","@vscode/debugadapter":"^1.65.0","@vscode/debugprotocol":"^1.65.0","@vscode/dts":"^0.4.0","@vscode/test-electron":"^2.3.10","async-child-process":"^1.1.1","await-notify":"^1.0.1","eslint":"^8.45.0","eslint-plugin-header":"^3.1.1","eslint-plugin-import":"^2.29.1","eslint-plugin-jsdoc":"^48.2.8","event-stream":"^4.0.1","fs-extra":"^11.2.0","gulp":"^5.0.0","gulp-env":"^0.4.0","gulp-filter":"^7.0.0","gulp-sourcemaps":"^3.0.0","gulp-typescript":"^5.0.1","minimist":"^1.2.8","mocha":"^10.4.0","parse-git-config":"^3.0.0","parse5":"^7.1.2","parse5-traverse":"^1.0.3","ts-loader":"^9.5.1","ts-node":"^10.9.2","typescript":"^5.4.5","vscode-nls-dev":"^4.0.4","webpack":"^5.94.0","webpack-cli":"^5.1.4","xml2js":"^0.6.2"},"dependencies":{"@vscode/extension-telemetry":"^0.9.6","chokidar":"^3.6.0","comment-json":"^4.2.3","escape-string-regexp":"^2.0.0","glob":"^7.2.3","minimatch":"^3.0.5","mkdirp":"^3.0.1","node-fetch":"^2.7.0","node-loader":"^2.0.0","node-stream-zip":"^1.15.0","plist":"^3.1.0","posix-getopt":"^1.2.1","shell-quote":"^1.8.1","ssh-config":"^4.4.4","tmp":"^0.2.3","vscode-cpptools":"^6.1.0","vscode-languageclient":"^8.1.0","vscode-nls":"^5.2.0","vscode-tas-client":"^0.1.84","which":"^2.0.2"},"resolutions":{"postcss":"^8.4.31","gulp-typescript/**/glob-parent":"^5.1.2"}},"location":{"$mid":1,"path":"/Users/andytran/.vscode/extensions/ms-vscode.cpptools-1.22.11-darwin-arm64","scheme":"file"},"isBuiltin":false,"targetPlatform":"darwin-arm64","publisherDisplayName":"Microsoft","metadata":{"installedTimestamp":1733083326471,"pinned":false,"source":"gallery","id":"690b692e-e8a9-493f-b802-8089d50ac1b2","publisherId":"5f5636e7-69ed-4afe-b5d6-8d231fb3d3ee","publisherDisplayName":"Microsoft","targetPlatform":"darwin-arm64","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"vscjava.vscode-maven","uuid":"b0f06c6b-24fb-4d7b-bd79-bc5e2fa17312"},"manifest":{"name":"vscode-maven","displayName":"Maven for Java","description":"Manage Maven projects, execute goals, generate project from archetype, improve user experience for Java developers.","version":"0.44.0","icon":"resources/logo.png","publisher":"vscjava","preview":false,"aiKey":"0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255","engines":{"vscode":"^1.75.0"},"enabledApiProposals":[],"capabilities":{"virtualWorkspaces":false,"untrustedWorkspaces":{"supported":"limited","restrictedConfigurations":["maven.executable.options","maven.terminal.customEnv"]}},"categories":["Programming Languages","Other"],"keywords":["Maven","Java"],"license":"MIT","homepage":"https://github.com/Microsoft/vscode-maven/","repository":{"type":"git","url":"https://github.com/Microsoft/vscode-maven.git"},"activationEvents":["workspaceContains:**/pom.xml"],"main":"./dist/extension","contributes":{"javaExtensions":["./jdtls.ext/com.microsoft.java.maven.plugin/target/com.microsoft.java.maven.plugin-0.39.0.jar"],"commands":[{"command":"maven.explorer.refresh","title":"Refresh","category":"Maven","icon":"$(refresh)"},{"command":"maven.goal.clean","title":"clean","category":"Maven"},{"command":"maven.goal.validate","title":"validate","category":"Maven"},{"command":"maven.goal.compile","title":"compile","category":"Maven"},{"command":"maven.goal.test","title":"test","category":"Maven"},{"command":"maven.goal.test-compile","title":"test-compile","category":"Maven"},{"command":"maven.goal.package","title":"package","category":"Maven"},{"command":"maven.goal.verify","title":"verify","category":"Maven"},{"command":"maven.goal.install","title":"install","category":"Maven"},{"command":"maven.goal.site","title":"site","category":"Maven"},{"command":"maven.goal.deploy","title":"deploy","category":"Maven"},{"command":"maven.goal.custom","title":"Custom... ","category":"Maven"},{"command":"maven.project.effectivePom","title":"Show Effective POM","category":"Maven"},{"command":"maven.project.openPom","title":"Open POM file","category":"Maven","icon":"$(go-to-file)"},{"command":"maven.archetype.generate","title":"New Project...","category":"Maven","icon":"$(add)"},{"command":"maven.archetype.update","title":"Update Maven Archetype Catalog","category":"Maven"},{"command":"maven.history","title":"History...","category":"Maven"},{"command":"maven.goal.execute","title":"Execute Commands...","category":"Maven"},{"command":"maven.goal.execute.fromProjectManager","title":"Run Maven Commands...","category":"Maven"},{"command":"maven.goal.execute.fromLifecycleMenu","title":"Run","category":"Maven","icon":"$(play)"},{"command":"maven.goal.execute.fromFavoritesMenu","title":"Run","category":"Maven","icon":"$(play)"},{"command":"maven.plugin.execute","title":"Run","category":"Maven","icon":"$(play)"},{"command":"maven.plugin.debug","title":"Debug","category":"Maven"},{"command":"maven.view.flat","title":"Switch to flat view","category":"Maven","icon":"$(list-flat)"},{"command":"maven.view.hierarchical","title":"Switch to hierarchical view","category":"Maven","icon":"$(list-tree)"},{"command":"maven.project.addDependency","title":"Add a dependency...","category":"Maven","icon":"$(add)"},{"command":"maven.project.showDependencies","title":"Show Dependencies","category":"Maven"},{"command":"maven.project.excludeDependency","title":"Exclude Dependency","category":"Maven"},{"command":"maven.project.setDependencyVersion","title":"Resolve Conflict...","category":"Maven","icon":"$(wrench)"},{"command":"maven.project.addFavorite","title":"Add a favorite...","category":"Maven","icon":"$(add)"},{"command":"maven.dependency.goToEffective","title":"Go to Effective Dependency","category":"Maven"},{"command":"maven.project.goToDefinition","title":"Go to Definition","category":"Maven"},{"command":"maven.favorites","title":"Favorites...","category":"Maven"},{"command":"maven.java.projectConfiguration.update","title":"Reload All Maven Projects","icon":"$(sync)","category":"Maven"},{"command":"maven.profile.select","title":"Select","icon":"$(add)","category":"Maven"},{"command":"maven.profile.deselect","title":"Deselect","icon":"$(remove)","category":"Maven"},{"command":"maven.new.module","title":"New Module...","category":"Maven"}],"views":{"explorer":[{"id":"mavenProjects","name":"Maven","when":"workbenchState == empty || vscode-maven:activated","contextualTitle":"Maven","icon":"resources/icons/dark/project.svg"}]},"viewsWelcome":[{"view":"mavenProjects","contents":"Advanced features (e.g. executing lifecycle phases and plugin goals) are disabled in Restricted Mode for security concern.\nPOM editing assistance (e.g. [add a dependency](command:maven.project.addDependency)) is still available.\nLearn more about [Workspace Trust](https://aka.ms/vscode-workspace-trust).\n[Manage Workspace Trust](command:workbench.trust.manage)","when":"!isWorkspaceTrusted"}],"submenus":[{"id":"maven/run","label":"Run Maven Commands..."},{"id":"explorer/maven","label":"Maven"}],"menus":{"commandPalette":[{"command":"maven.goal.clean","when":"never"},{"command":"maven.goal.validate","when":"never"},{"command":"maven.goal.compile","when":"never"},{"command":"maven.goal.test","when":"never"},{"command":"maven.goal.test-compile","when":"never"},{"command":"maven.goal.package","when":"never"},{"command":"maven.goal.verify","when":"never"},{"command":"maven.goal.install","when":"never"},{"command":"maven.goal.site","when":"never"},{"command":"maven.goal.deploy","when":"never"},{"command":"maven.goal.custom","when":"never"},{"command":"maven.project.effectivePom","when":"never"},{"command":"maven.explorer.refresh","when":"never"},{"command":"maven.project.openPom","when":"never"},{"command":"maven.goal.execute.fromProjectManager","when":"never"},{"command":"maven.goal.execute.fromLifecycleMenu","when":"never"},{"command":"maven.goal.execute.fromFavoritesMenu","when":"never"},{"command":"maven.plugin.execute","when":"never"},{"command":"maven.plugin.debug","when":"never"},{"command":"maven.project.showDependencies","when":"never"},{"command":"maven.project.excludeDependency","when":"never"},{"command":"maven.project.setDependencyVersion","when":"never"},{"command":"maven.dependency.goToEffective","when":"never"},{"command":"maven.project.goToDefinition","when":"never"},{"command":"maven.archetype.generate","when":"!java:projectManagerActivated"},{"command":"maven.favorites","when":"isWorkspaceTrusted"},{"command":"maven.history","when":"isWorkspaceTrusted"},{"command":"maven.goal.execute","when":"isWorkspaceTrusted"},{"command":"maven.java.projectConfiguration.update","when":"false"},{"command":"maven.profile.select","when":"false"},{"command":"maven.profile.deselect","when":"false"}],"explorer/context":[{"submenu":"explorer/maven","group":"1_javaactions@100"}],"view/title":[{"command":"maven.java.projectConfiguration.update","when":"view == mavenProjects && javaLSReady","group":"navigation@05"},{"command":"maven.view.flat","when":"view == mavenProjects && config.maven.view != flat","group":"navigation@0a"},{"command":"maven.view.hierarchical","when":"view == mavenProjects && config.maven.view != hierarchical","group":"navigation@0b"},{"command":"maven.archetype.generate","when":"view == mavenProjects","group":"navigation@1"}],"view/item/context":[{"submenu":"maven/run","when":"view == mavenProjects && viewItem == maven:project"},{"command":"maven.project.effectivePom","when":"view == mavenProjects && viewItem == maven:project","group":"0-pom@1"},{"command":"maven.project.showDependencies","when":"view == mavenProjects && viewItem == maven:project","group":"0-pom@0"},{"command":"maven.project.excludeDependency","when":"view == mavenProjects && viewItem =~ /maven:dependency(?!.*?\\b\\+root\\b)/","group":"0-dependency@0"},{"command":"maven.project.setDependencyVersion","when":"view == mavenProjects && viewItem =~ /maven:dependency(?=.*?\\b\\+conflict\\b)/","group":"inline"},{"command":"maven.dependency.goToEffective","when":"view == mavenProjects && viewItem =~ /maven:dependency(?=.*?\\b\\+conflict\\b)/","group":"0-dependency@2"},{"command":"maven.project.goToDefinition","when":"view == mavenProjects && viewItem =~ /maven:dependency/","group":"0-dependency@1"},{"command":"maven.project.openPom","when":"view == mavenProjects && viewItem == maven:project","group":"inline"},{"command":"maven.plugin.execute","when":"view == mavenProjects && viewItem == maven:pluginGoal","group":"inline"},{"command":"maven.plugin.execute","when":"view == mavenProjects && viewItem == maven:pluginGoal","group":"1@1"},{"command":"maven.plugin.debug","when":"view == mavenProjects && viewItem == maven:pluginGoal","group":"1@2"},{"command":"maven.explorer.refresh","when":"view == mavenProjects && viewItem == maven:plugin","group":"1@1"},{"command":"maven.explorer.refresh","when":"view == mavenProjects && viewItem == maven:menu","group":"inline"},{"command":"maven.project.addDependency","when":"view == javaProjectExplorer && viewItem =~ /java:container(?=.*?\\b\\+maven\\b)/","group":"inline"},{"command":"maven.project.addDependency","when":"view == mavenProjects && viewItem == maven:dependenciesMenu","group":"inline@0"},{"command":"maven.project.addFavorite","when":"view == mavenProjects && viewItem == maven:favoritesMenu","group":"inline@0"},{"command":"maven.explorer.refresh","when":"view == mavenProjects && viewItem == maven:dependenciesMenu","group":"inline@1"},{"command":"maven.goal.execute.fromLifecycleMenu","when":"view == mavenProjects && viewItem == maven:lifecycle","group":"inline"},{"command":"maven.goal.execute.fromLifecycleMenu","when":"view == mavenProjects && viewItem == maven:lifecycle","group":"1@1"},{"command":"maven.goal.execute.fromFavoritesMenu","when":"view == mavenProjects && viewItem == maven:favorites","group":"inline"},{"command":"maven.goal.execute.fromFavoritesMenu","when":"view == mavenProjects && viewItem == maven:favorites","group":"1@1"},{"command":"maven.profile.select","when":"view == mavenProjects && viewItem == maven:profile+unchecked","group":"inline"},{"command":"maven.profile.deselect","when":"view == mavenProjects && viewItem == maven:profile+checked","group":"inline"}],"javaProject.maven":[{"command":"maven.project.openPom","group":"maven@20"},{"command":"maven.goal.execute.fromProjectManager","group":"maven@30"}],"explorer/maven":[{"command":"maven.archetype.generate","when":"config.maven.showInExplorerContextMenu && explorerResourceIsFolder","group":"maven@1"},{"command":"maven.new.module","group":"maven@2"},{"command":"maven.project.effectivePom","when":"resourceFilename == pom.xml","group":"maven@3"}],"maven/run":[{"command":"maven.goal.custom","group":"5-custom@5"},{"command":"maven.favorites","group":"5-custom@3"},{"command":"maven.history","group":"5-custom@0"},{"command":"maven.goal.clean","group":"1-lifecycle@10"},{"command":"maven.goal.package","group":"1-lifecycle@20"},{"command":"maven.goal.install","group":"1-lifecycle@30"},{"command":"maven.goal.compile","group":"1-lifecycle@40"},{"command":"maven.goal.validate","group":"3-lifecycle@50"},{"command":"maven.goal.verify","group":"3-lifecycle@60"},{"command":"maven.goal.test","group":"3-lifecycle@70"},{"command":"maven.goal.test-compile","group":"3-lifecycle@75"},{"command":"maven.goal.site","group":"4-lifecycle@80"},{"command":"maven.goal.deploy","group":"4-lifecycle@90"}]},"configuration":[{"title":"Maven for Java","properties":{"maven.settingsFile":{"type":["string","null"],"default":null,"description":"Specifies the absolute path of your maven configuration file, the default value is ~/.m2/settings.xml","scope":"machine"},"maven.excludedFolders":{"type":"array","default":["**/.*","**/node_modules","**/target","**/bin","**/archetype-resources"],"description":"Specifies file path pattern of folders to exclude while searching for Maven projects.","scope":"resource"},"maven.executable.preferMavenWrapper":{"type":"boolean","default":"true","description":"Specifies whether you prefer to use Maven wrapper. If true, it tries using 'mvnw' by walking up the parent folders. If false, or 'mvnw' is not found, it tries 'mvn' in PATH instead.","scope":"resource"},"maven.executable.path":{"type":"string","default":"","description":"Specifies absolute path of your 'mvn' executable. When this value is empty, it tries using 'mvn' or 'mvnw' according to the value of 'maven.executable.preferMavenWrapper'.","scope":"machine"},"maven.executable.options":{"type":"string","default":"","description":"Specifies default options for all mvn commands.","scope":"machine-overridable"},"maven.terminal.useJavaHome":{"type":"boolean","default":false,"description":"If this value is true, and if the setting java.home has a value, then the environment variable JAVA_HOME will be set to the value of java.home when a new terminal window is created.","scope":"window"},"maven.terminal.customEnv":{"type":"array","items":{"type":"object","title":"environment setting","required":["environmentVariable","value"],"properties":{"environmentVariable":{"type":"string","minLength":1,"description":"Name of the environment variable to set."},"value":{"type":"string","description":"Value of the environment variable to set."}}},"default":[],"description":"Specifies an array of environment variable names and values. These environment variable values will be added to the terminal session before Maven is first executed.","scope":"resource"},"maven.terminal.favorites":{"type":"array","items":{"type":"object","title":"Favorite commands","required":["command"],"properties":{"alias":{"type":"string","minLength":1,"description":"A short name for the command."},"command":{"type":"string","minLength":1,"description":"Content of the favorite command."},"debug":{"type":"boolean","default":false,"description":"Whether to execute in debug mode."}}},"default":[],"description":"Specify pre-defined favorite commands to execute.","scope":"resource"},"maven.view":{"type":"string","enum":["flat","hierarchical"],"default":"flat","scope":"window","description":"Specifies the way of viewing Maven projects."},"maven.showInExplorerContextMenu":{"type":"boolean","default":"true","description":"If this value is true, add a command to create Maven Projects in the Explorer context menu for folders.","scope":"resource"},"maven.pomfile.globPattern":{"type":"string","default":"**/pom.xml","description":"Specifies the glob pattern used to look for pom.xml files.","scope":"window"},"maven.pomfile.autoUpdateEffectivePOM":{"type":"boolean","default":false,"description":"Specifies whether to update effective-pom automatically whenever changes detected.","scope":"window"},"maven.pomfile.prefetchEffectivePom":{"type":"boolean","default":false,"description":"Specifies whether to prefetch effective pom on startup.","scope":"application"},"maven.dependency.enableConflictDiagnostics":{"type":"boolean","default":"true","description":"Specify whether to show diagnostics for conflict dependencies.","scope":"window"},"maven.projectOpenBehavior":{"default":"Interactive","type":"string","scope":"window","description":"Default method of opening newly created project.","enum":["Interactive","Open","Add to Workspace","None"]},"maven.explorer.projectName":{"default":"${project.name}","type":"string","scope":"window","description":"Format of project node name shown in Maven explorer.","enum":["${project.name}","${project.artifactId}","${project.artifactId}-${project.version}","${project.groupId}.${project.artifactId}","${project.groupId}.${project.artifactId}-${project.version}"]}}}]},"scripts":{"vscode:prepublish":"webpack --mode production","build-plugin":"node scripts/build-jdtls-ext.js","compile":"tsc -p ./","tslint":"eslint .","watch":"webpack --mode development --watch --progress","test":"tsc -p ./ && node ./out/test/index.js","webpack":"webpack --mode development","update-tpn":"node scripts/update-third-party-notice.js","update-xsd":"tsc scripts/generate-maven-xsd.ts && node scripts/generate-maven-xsd.js"},"devDependencies":{"@types/fs-extra":"^4.0.9","@types/glob":"^7.2.0","@types/lodash":"^4.14.186","@types/lru-cache":"^5.1.0","@types/md5":"^2.3.2","@types/minimatch":"^3.0.4","@types/mocha":"^9.1.1","@types/node":"^16.18.3","@types/semver":"^7.3.12","@types/vscode":"1.75.0","@types/which":"^1.3.2","@types/xml2js":"^0.4.11","@typescript-eslint/eslint-plugin":"^5.48.2","@typescript-eslint/parser":"^5.48.2","@vscode/test-electron":"^2.3.8","eslint":"^8.32.0","glob":"^7.2.3","mocha":"^9.2.2","ts-loader":"^9.4.1","typescript":"^4.8.4","webpack":"^5.76.0","webpack-cli":"^4.10.0"},"dependencies":{"domhandler":"^5.0.3","expand-home-dir":"0.0.3","fast-glob":"^3.2.12","fs-extra":"^4.0.3","get-port":"^4.2.0","htmlparser2":"^8.0.1","jszip":"^3.10.1","lodash":"^4.17.21","lru-cache":"^6.0.0","md5":"^2.2.1","minimatch":"^3.1.2","semver":"^7.5.2","vscode-extension-telemetry-wrapper":"^0.13.2","vscode-languageclient":"^7.0.0","vscode-languageserver-protocol":"^3.17.2","vscode-tas-client":"^0.1.75","which":"^1.3.1","xml2js":"^0.5.0"}},"location":{"$mid":1,"path":"/Users/andytran/.vscode/extensions/vscjava.vscode-maven-0.44.0","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Microsoft","metadata":{"installedTimestamp":1733083352908,"pinned":false,"source":"gallery","id":"b0f06c6b-24fb-4d7b-bd79-bc5e2fa17312","publisherId":"bae08b87-578e-41ec-ab1c-0b036e7add88","publisherDisplayName":"Microsoft","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"visualstudioexptteam.vscodeintellicode","uuid":"876e8f93-74d0-4f4f-91b7-34a09f19f444"},"manifest":{"name":"vscodeintellicode","displayName":"IntelliCode","description":"AI-assisted development","version":"1.3.2","publisher":"VisualStudioExptTeam","author":{"name":"Microsoft"},"engines":{"vscode":"^1.94.0"},"repository":{"url":"https://github.com/MicrosoftDocs/intellicode"},"bugs":{"url":"https://go.microsoft.com/fwlink/?linkid=2005855"},"icon":"images/icon.png","categories":["Other"],"aiKey":"0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255","activationEvents":["onLanguage:python","onLanguage:sql","onLanguage:typescript","onLanguage:typescriptreact","onLanguage:javascript","onLanguage:javascriptreact","onLanguage:java"],"main":"./dist/intellicode","contributes":{"configuration":{"type":"object","title":"IntelliCode","properties":{"vsintellicode.python.completionsEnabled":{"type":"boolean","default":true,"description":"Enable Visual Studio IntelliCode completions for Python"},"vsintellicode.sql.completionsEnabled":{"type":"boolean","default":true,"description":"Enable Visual Studio IntelliCode completions for MSSQL"},"vsintellicode.java.completionsEnabled":{"type":"boolean","default":true,"description":"Enable Visual Studio IntelliCode completions for Java"},"vsintellicode.typescript.completionsEnabled":{"type":"boolean","default":true,"description":"Enable Visual Studio IntelliCode completions for TypeScript and JavaScript"},"vsintellicode.modify.editor.suggestSelection":{"type":"string","default":"enabled","markdownDescription":"Control whether Visual Studio IntelliCode will modify `editor.suggestSelection` if it is set to a value (`recentlyUsed`) that will result in IntelliCode suggested completion items not being visible.","enum":["enabled","disabled","automaticallyOverrodeDefaultValue","choseToUpdateConfiguration"],"enumDescriptions":["Allows IntelliCode to modify the editor.suggestSelection setting on your behalf.","You've explicitly opted out of having this configuration controlled by IntelliCode.","(DO NOT SET THIS MANUALLY) IntelliCode will set this to record that configuration has been automatically modified to override a default value.","(DO NOT SET THIS MANUALLY) IntelliCode will set this to record that you've chosen to let IntelliCode change the configuration from a value that was explicitly set."]}}},"typescriptServerPlugins":[{"name":"@vsintellicode/typescript-intellicode-plugin","languages":[],"enableForWorkspaceTypeScriptVersions":true},{"name":"ms-vsintellicode-typescript"}],"javaExtensions":["dist/com.microsoft.jdtls.intellicode.core-0.7.1.jar"]},"importSort":{".js, .jsx, .ts, .tsx":{"style":"module"}},"capabilities":{"untrustedWorkspaces":{"supported":true},"virtualWorkspaces":{"supported":"limited","description":"Only typescript and javascript completions are supported. Settings do not work."}},"scripts":{"vscode:prepublish":"gulp prodBuild","build":"gulp devBuild","eslint":"eslint src --ext ts","format":"prettier --write \"src/**/*.{ts,tsx}\"","test":"node ./out/test/runTests.js","server-test":"node ./out/test/runServerTests.js","pretest":"npm run build","posttest":"rmdir /s /q .vscode-test","vscode:uninstall":"node ./dist/uninstall","compile-web":"webpack --config web.webpack.config.js","watch-web":"webpack --config web.webpack.config.js --watch","package-web":"webpack --mode production --devtool hidden-source-map --config web.webpack.config.js","run-in-web":"vscode-test-web --browserType=chromium --extensionDevelopmentPath=. .","build:tsplugin":"npm run install:tsplugin && npm run compile-web --prefix ../ms-intellicode-typescript-plugin","install:tsplugin":"cd ../ms-intellicode-typescript-plugin && npm install","pack:tsplugin":"cd ../ms-intellicode-typescript-plugin/dist/web && npm pack","format:package-lock":"prettier package-lock.json -w --tab-width 4 --parser json"},"devDependencies":{"@types/chai":"^4.1.7","@types/mocha":"^8.2.3","@types/node":"^12.20.15","@types/request":"^2.48.5","@types/rimraf":"^2.0.2","@types/semver":"^5.5.0","@types/sinon":"^7.0.2","@types/sinon-chai":"^3.2.2","@types/vscode":"^1.94.0","@types/webpack-env":"^1.16.3","@typescript-eslint/eslint-plugin":"^6.3.0","@typescript-eslint/parser":"^6.0.0","@vscode/test-electron":"^2.3.9","@vscode/test-web":"^0.0.22","assert":"^2.0.0","chai":"^4.2.0","copy-webpack-plugin":"^11.0.0","del":"^4.1.1","eslint":"^7.32.0","eslint-config-prettier":"^7.1.0","eslint-plugin-prettier":"^3.4.1","gulp":"^4.0.0","gulp-filter":"^5.0.1","gulp-sourcemaps":"^2.6.5","gulp-typescript":"^5.0.0","import-sort-style-module":"^6.0.0","mocha":"^9.2.2","prettier":"^2.7.1","process":"^0.11.10","rimraf":"^2.6.3","sinon":"^7.2.2","sinon-chai":"^3.3.0","ts-loader":"^9.2.8","typemoq":"^2.1.0","typescript":"^4.4.3","vsce":"^2.10.2","vscode-nls-dev":"^3.2.6","webpack":"^5.72.0","webpack-cli":"^4.9.2","webpack-merge":"^5.8.0","webpack-stream":"^7.0.0"},"dependencies":{"@vscode/extension-telemetry":"^0.9.6","@vsintellicode/typescript-intellicode-plugin":"0.26.0","@vsintellicode/vscode-intellicode-api":"0.1.0-ci-main-20210923.1","@vsintellicode/vscode-intellicode-java":"0.7.1","@vsintellicode/vscode-intellicode-sql":"1.0.0-ci-master-4292976","request":"^2.88.2","request-progress":"3.0.0","semver":"5.5.0","tslib":"^2.0.0","vscode-nls":"4.1.1","vscode-tas-client":"^0.1.63"},"extensionPack":["visualstudioexptteam.intellicode-api-usage-examples"]},"location":{"$mid":1,"path":"/Users/andytran/.vscode/extensions/visualstudioexptteam.vscodeintellicode-1.3.2","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Microsoft","metadata":{"installedTimestamp":1733083352906,"pinned":false,"source":"gallery","id":"876e8f93-74d0-4f4f-91b7-34a09f19f444","publisherId":"e8db1608-52e8-4d8d-92a6-779c5db302a9","publisherDisplayName":"Microsoft","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"vscjava.vscode-gradle","uuid":"a226f06e-9b5e-493b-b92a-553d3572f969"},"manifest":{"name":"vscode-gradle","displayName":"Gradle for Java","description":"Manage Gradle Projects, run Gradle tasks and provide better Gradle file authoring experience in VS Code","version":"3.16.4","private":true,"publisher":"vscjava","aiKey":"0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255","icon":"resources/icon.png","readme":"README.md","bugs":{"url":"https://github.com/microsoft/vscode-gradle/issues"},"repository":{"type":"git","url":"https://github.com/microsoft/vscode-gradle/"},"license":"SEE LICENSE IN LICENSE.md","engines":{"vscode":"^1.76.0","node":"^18.20.4","npm":"^10.7.0"},"categories":["Programming Languages","Other"],"keywords":["java","gradle","compile","build","tasks"],"activationEvents":["workspaceContains:**/gradlew","workspaceContains:**/gradlew.bat","workspaceContains:build.gradle","workspaceContains:*/build.gradle","workspaceContains:settings.gradle","workspaceContains:*/settings.gradle","workspaceContains:build.gradle.kts","workspaceContains:*/build.gradle.kts","workspaceContains:settings.gradle.kts","workspaceContains:*/settings.gradle.kts","onCommand:_gradle.onWillImporterConnect"],"main":"./dist/index.js","contributes":{"javaExtensions":["./server/com.microsoft.gradle.bs.importer-0.5.3.jar"],"languages":[{"id":"gradle","extensions":[".gradle"],"aliases":["Gradle"],"configuration":"./gradle-language-configuration.json"},{"id":"gradle-build"}],"grammars":[{"language":"gradle","scopeName":"source.groovy","path":"./syntaxes/groovy.tmLanguage.json"},{"language":"gradle-build","scopeName":"source.gradle-build","path":"./syntaxes/GradleBuild.tmLanguage.json"}],"problemMatchers":[{"owner":"gradle","name":"gradle","fileLocation":["relative","${workspaceFolder}"],"pattern":{"regexp":"^.*(FAILURE):\\s*(.*)$","severity":1,"message":2}}],"views":{"gradleContainerView":[{"id":"gradleTasksView","name":"Gradle Projects","when":"gradle:activated && !gradle:defaultView"},{"id":"gradleDefaultProjectsView","name":"Gradle Projects","when":"gradle:activated && gradle:defaultView"},{"id":"recentTasksView","name":"Recent Tasks","when":"gradle:activated","visibility":"collapsed"},{"id":"gradleDaemonsView","name":"Gradle Daemons","when":"gradle:activated","visibility":"collapsed"}]},"viewsContainers":{"activitybar":[{"id":"gradleContainerView","title":"Gradle","icon":"resources/icon-transparency.png"}]},"commands":[{"command":"gradle.runTask","title":"Run Task","icon":{"light":"resources/light/run.svg","dark":"resources/dark/run.svg"}},{"command":"gradle.runBuild","category":"Gradle","title":"Run a Gradle Build","icon":{"light":"resources/light/console.svg","dark":"resources/dark/console.svg"}},{"command":"gradle.pinTask","title":"Pin Task"},{"command":"gradle.pinTaskWithArgs","title":"Pin Task With Args"},{"command":"gradle.unpinTask","title":"Unpin Task"},{"command":"gradle.debugTask","title":"Debug Task","icon":{"light":"resources/light/debug-and-run.svg","dark":"resources/dark/debug-and-run.svg"}},{"command":"gradle.restartTask","title":"Restart Task","icon":{"light":"resources/light/refresh.svg","dark":"resources/dark/refresh.svg"}},{"command":"gradle.showTaskTerminal","title":"Show Terminal","icon":{"light":"resources/light/console.svg","dark":"resources/dark/console.svg"}},{"command":"gradle.closeTaskTerminals","title":"Close Terminal/s","icon":{"light":"resources/light/close-all.svg","dark":"resources/dark/close-all.svg"}},{"command":"gradle.closeAllTaskTerminals","title":"Close All Terminals","icon":{"light":"resources/light/close-all.svg","dark":"resources/dark/close-all.svg"}},{"command":"gradle.clearAllRecentTasks","title":"Clear Recent Tasks","icon":{"light":"resources/light/clear-all.svg","dark":"resources/dark/clear-all.svg"}},{"command":"gradle.unpinAllTasks","title":"Unpin all Tasks","icon":{"light":"resources/light/clear-all.svg","dark":"resources/dark/clear-all.svg"}},{"command":"gradle.removeRecentTask","title":"Remove Recent Task"},{"command":"gradle.showLogs","title":"Show logs"},{"command":"gradle.showTasks","title":"Show Gradle Tasks"},{"command":"gradle.runTaskWithArgs","title":"Run Task With Args"},{"command":"gradle.debugTaskWithArgs","title":"Debug Task With Args"},{"command":"gradle.openBuildFile","title":"Open Build File"},{"command":"gradle.cancelBuild","title":"Cancel Task"},{"command":"gradle.stopDaemon","title":"Stop Daemon","icon":{"light":"resources/light/stop.svg","dark":"resources/dark/stop.svg"}},{"command":"gradle.cancelTreeItemTask","title":"Cancel Task","icon":{"light":"resources/light/stop.svg","dark":"resources/dark/stop.svg"}},{"command":"gradle.explorerFlat","title":"Show Flat Tasks","icon":{"light":"resources/light/list-flat.svg","dark":"resources/dark/list-flat.svg"}},{"command":"gradle.explorerTree","title":"Show Hierarchical Tasks","icon":{"light":"resources/light/list-tree.svg","dark":"resources/dark/list-tree.svg"}},{"command":"gradle.showProcessMessage","title":"Show Gradle process information message box"},{"command":"gradle.refresh","category":"Gradle","title":"Refresh Gradle Projects View","icon":{"light":"resources/light/refresh.svg","dark":"resources/dark/refresh.svg"}},{"command":"gradle.refreshDaemonStatus","title":"Refresh Daemon Status","icon":{"light":"resources/light/refresh.svg","dark":"resources/dark/refresh.svg"}},{"command":"gradle.stopDaemons","enablement":"gradle:hasValidDaemons","title":"Stop Daemons","icon":{"light":"resources/light/stop-daemons.svg","dark":"resources/dark/stop-daemons.svg"}},{"command":"gradle.openSettings","title":"Open Settings","icon":{"light":"resources/light/gear.svg","dark":"resources/dark/gear.svg"}},{"command":"gradle.findTask","category":"Gradle","title":"Find Gradle Task"},{"command":"gradle.cancellingTreeItemTask","title":"Cancelling Task","icon":{"light":"resources/light/loading.svg","dark":"resources/dark/loading.svg"}},{"command":"gradle.dependency.reveal","title":"Go to Dependency","icon":"$(references)"},{"command":"gradle.showStoppedDaemons","title":"Show Stopped Daemons"},{"command":"gradle.hideStoppedDaemons","title":"Hide Stopped Daemons"},{"command":"gradle.createProject","category":"Gradle","title":"Create a Gradle Java Project..."},{"command":"gradle.createProjectAdvanced","category":"Gradle","title":"Create a Gradle Java Project... (Advanced)"},{"command":"gradle.runTasks","category":"Gradle","title":"Run Gradle Tasks..."},{"command":"gradle.java.projectConfiguration.update","category":"Gradle","title":"Reload All Gradle Projects","icon":"$(sync)"}],"submenus":[{"id":"explorer/gradle","label":"Gradle"}],"menus":{"commandPalette":[{"command":"gradle.showTasks","when":"false"},{"command":"gradle.runTask","when":"false"},{"command":"gradle.showLogs","when":"false"},{"command":"gradle.debugTask","when":"false"},{"command":"gradle.restartTask","when":"false"},{"command":"gradle.showTaskTerminal","when":"false"},{"command":"gradle.closeTaskTerminals","when":"false"},{"command":"gradle.closeAllTaskTerminals","when":"false"},{"command":"gradle.clearAllRecentTasks","when":"false"},{"command":"gradle.unpinAllTasks","when":"false"},{"command":"gradle.refreshDaemonStatus","when":"false"},{"command":"gradle.stopDaemons","when":"false"},{"command":"gradle.openBuildFile","when":"false"},{"command":"gradle.runTaskWithArgs","when":"false"},{"command":"gradle.debugTaskWithArgs","when":"false"},{"command":"gradle.cancelBuild","when":"false"},{"command":"gradle.stopDaemon","when":"false"},{"command":"gradle.cancelTreeItemTask","when":"false"},{"command":"gradle.explorerFlat","when":"false"},{"command":"gradle.explorerTree","when":"false"},{"command":"gradle.showProcessMessage","when":"false"},{"command":"gradle.openSettings","when":"false"},{"command":"gradle.cancellingTreeItemTask","when":"false"},{"command":"gradle.pinTask","when":"false"},{"command":"gradle.pinTaskWithArgs","when":"false"},{"command":"gradle.removeRecentTask","when":"false"},{"command":"gradle.dependency.reveal","when":"false"},{"command":"gradle.showStoppedDaemons","when":"false"},{"command":"gradle.hideStoppedDaemons","when":"false"},{"command":"gradle.unpinTask","when":"false"},{"command":"gradle.refresh","when":"gradle:extensionActivated"},{"command":"gradle.runBuild","when":"gradle:extensionActivated"},{"command":"gradle.findTask","when":"gradle:extensionActivated"},{"command":"gradle.createProject","when":"!java:projectManagerActivated"},{"command":"gradle.runTasks","when":"false"},{"command":"gradle.java.projectConfiguration.update","when":"false"}],"view/title":[{"command":"gradle.unpinAllTasks","when":"view == gradleTasksView","group":"overflow_0@0"},{"command":"gradle.openSettings","when":"view == gradleTasksView || view == gradleDefaultProjectsView"},{"command":"gradle.findTask","when":"view == gradleTasksView"},{"command":"gradle.runBuild","when":"view == gradleTasksView || view == gradleDefaultProjectsView","group":"navigation@0"},{"command":"gradle.explorerFlat","when":"view == gradleTasksView && !gradle:gradleTasksCollapsed","group":"navigation@1"},{"command":"gradle.explorerTree","when":"view == gradleTasksView && gradle:gradleTasksCollapsed","group":"navigation@2"},{"command":"gradle.refresh","when":"view == gradleTasksView || view == gradleDefaultProjectsView","group":"overflow@3"},{"command":"gradle.java.projectConfiguration.update","when":"view == gradleTasksView && javaLSReady","group":"navigation@3"},{"command":"gradle.stopDaemons","when":"view == gradleDaemonsView","group":"navigation@1"},{"command":"gradle.refreshDaemonStatus","when":"view == gradleDaemonsView","group":"navigation@2"},{"command":"gradle.showStoppedDaemons","when":"view == gradleDaemonsView && config.gradle.showStoppedDaemons == false","group":"overflow_0@0"},{"command":"gradle.hideStoppedDaemons","when":"view == gradleDaemonsView && config.gradle.showStoppedDaemons == true","group":"overflow_0@0"},{"command":"gradle.clearAllRecentTasks","when":"view == recentTasksView","group":"navigation@0"},{"command":"gradle.closeAllTaskTerminals","when":"view == recentTasksView","group":"navigation@1"}],"view/item/context":[{"command":"gradle.runTask","when":"view =~ /^gradleTasksView$|^recentTasksView$|^gradleDefaultProjectsView$/ && viewItem =~ /^(pinned)?debugTask.*$|^(pinned)?task.*$/","group":"contextGroup1@0"},{"command":"gradle.runTaskWithArgs","when":"view =~ /^gradleTasksView$|^recentTasksView$|^gradleDefaultProjectsView$/ && viewItem =~ /^(pinned)?debugTask(WithTerminals)?$|^(pinned)?task(WithTerminals)?$/","group":"contextGroup1@1"},{"command":"gradle.debugTask","when":"view =~ /^gradleTasksView$|^recentTasksView$/ && viewItem =~ /^(pinned)?debugTask.*$/","group":"contextGroup2@0"},{"command":"gradle.debugTaskWithArgs","when":"view =~ /^gradleTasksView$|^recentTasksView$/ && viewItem =~ /^(pinned)?debugTask(WithTerminals)?$/","group":"contextGroup2@1"},{"command":"gradle.showTaskTerminal","when":"view == recentTasksView && viewItem =~ /^(pinned)?debugTask(WithArgs)?WithTerminals.*$|^(pinned)?task(WithArgs)?WithTerminals.*$|^(pinned)?runningTask(WithArgs)?WithTerminals.*$|^(pinned)?runningDebugTask(WithArgs)?WithTerminals.*$/","group":"inline@0"},{"command":"gradle.closeTaskTerminals","when":"view == recentTasksView  && viewItem =~ /^(pinned)?debugTask(WithArgs)?WithTerminals.*$|^(pinned)?task(WithArgs)?WithTerminals.*$|^(pinned)?runningTask(WithArgs)?WithTerminals.*$|^(pinned)?runningDebugTask(WithArgs)?WithTerminals.*$/","group":"inline@1"},{"command":"gradle.debugTask","when":"view =~ /^gradleTasksView$|^recentTasksView$/ && viewItem =~ /^(pinned)?debugTask.*$/ || viewItem =~ /^(pinned)?runningDebugTask.*$/ && allowParallelRun == true","group":"inline@2"},{"command":"gradle.runTask","when":"view =~ /^gradleTasksView$|^recentTasksView$|^gradleDefaultProjectsView$/ && viewItem =~ /^(pinned)?debugTask.*$|^(pinned)?task.*$/ || viewItem =~ /^(pinned)?runningTask.*$|^(pinned)?runningDebugTask.*$/ && allowParallelRun == true","group":"inline@3"},{"command":"gradle.restartTask","when":"view =~ /^gradleTasksView$|^recentTasksView$/ && viewItem =~ /^(pinned)?runningTask.*$|^(pinned)?runningDebugTask.*$/ && !allowParallelRun","group":"inline@4"},{"command":"gradle.cancelTreeItemTask","when":"view =~ /^gradleTasksView$|^recentTasksView$/ && viewItem =~ /^(pinned)?runningTask.*$|^(pinned)?runningDebugTask.*$/ && !allowParallelRun","group":"inline@5"},{"command":"gradle.cancellingTreeItemTask","when":"view =~ /^gradleTasksView$|^recentTasksView$/ && viewItem =~ /^cancellingTask.*$/","group":"inline@6"},{"command":"gradle.pinTask","when":"view =~ /^gradleTasksView$|^recentTasksView$/ && viewItem =~ /^debugTask(WithTerminals)?.*$|^task(WithTerminals)?.*$/","group":"contextGroup3@0"},{"command":"gradle.pinTaskWithArgs","when":"view =~ /^gradleTasksView$|^recentTasksView$/ && viewItem =~ /^(pinned)?debugTask(WithTerminals)?$|^(pinned)?task(WithTerminals)?$/","group":"contextGroup3@1"},{"command":"gradle.unpinTask","when":"view == gradleTasksView && viewItem =~ /^pinned.*$/","group":"contextGroup3@2"},{"command":"gradle.unpinAllTasks","when":"view == gradleTasksView && viewItem == PinnedTasks","group":"contextGroup3@3"},{"command":"gradle.removeRecentTask","when":"view == recentTasksView && viewItem =~ /^debugTask.*$|^task.*$/","group":"contextGroup4@0"},{"command":"gradle.stopDaemon","when":"view == gradleDaemonsView && viewItem =~ /^busy$|^idle$/","group":"inline@0"},{"command":"gradle.dependency.reveal","when":"view == gradleTasksView && viewItem == omitted","group":"inline@0"},{"command":"gradle.stopDaemon","when":"view == gradleDaemonsView && viewItem =~ /^busy$|^idle$/","group":"contextGroup1@0"},{"command":"gradle.openBuildFile","when":"view =~ /^gradleTasksView$$|^recentTasksView$/ && viewItem =~ /^(pinned)?debugTask.*$|^(pinned)?task.*$/","group":"contextGroup5@0"}],"explorer/context":[{"submenu":"explorer/gradle","when":"resourceFilename =~ /^.*\\.gradle(\\.kts)?$/","group":"1_javaactions@200"}],"editor/context":[{"when":"resourceFilename =~ /^((?!settings).)*\\.gradle(\\.kts)?$/","command":"gradle.showTasks","group":"gradle@0"}],"javaProject.gradle":[{"command":"gradle.runTasks","group":"gradle@20"},{"command":"gradle.openBuildFile","group":"gradle@30"}],"explorer/gradle":[{"when":"resourceFilename =~ /^((?!settings).)*\\.gradle(\\.kts)?$/","command":"gradle.showTasks","group":"gradle@10"}]},"configuration":{"id":"gradle","type":"object","title":"Gradle","properties":{"gradle.autoDetect":{"type":"string","enum":["off","on"],"default":"on","scope":"resource","description":"Controls whether Gradle tasks should be automatically detected"},"gradle.nestedProjects":{"anyOf":[{"type":"boolean","description":"Discover all nested projects","default":false},{"type":"array","description":"Discover specific nested projects (by directory name)","default":[]}],"scope":"window","default":false,"description":"Discover Gradle projects in nested sub-directories"},"gradle.reuseTerminals":{"enum":["task","off","all"],"enumDescriptions":["Use a dedicated terminal for a specific task. The terminal is not shared with other tasks.","Create a new terminal when a task is executed.","Share the terminal with other tasks."],"default":"task","scope":"window","markdownDescription":"Reuse task terminals behaviour, will be overridden to `off` if `gradle.allowParallelRun` is true."},"gradle.debug":{"type":"boolean","default":false,"scope":"window","description":"Show extra debug information in the output panel"},"gradle.disableConfirmations":{"type":"boolean","default":false,"scope":"window","description":"Disable the warning confirm messages when performing batch actions"},"gradle.focusTaskInExplorer":{"type":"boolean","default":true,"scope":"window","description":"Focus the task in the explorer when running a task"},"gradle.javaDebug.cleanOutput":{"type":"boolean","default":true,"scope":"window","description":"Clean the task output cache before debugging"},"gradle.javaDebug":{"type":"object","description":"Java debug options","deprecationMessage":"This setting will be removed in the future since the extension can automatically get debug tasks, for clean options, please see `gradle.javaDebug.cleanOutput`.","scope":"resource","properties":{"tasks":{"type":"array","default":["run","runBoot","test","intTest","integration"],"description":"List of JavaExec tasks to debug"},"clean":{"type":"boolean","default":true,"description":"Clean the task output cache before debugging"}},"required":["tasks"],"default":{"tasks":["run","runBoot","test","intTest","integration"]}},"gradle.showStoppedDaemons":{"type":"boolean","default":false,"scope":"application","description":"Show stopped daemons in the Gradle Daemons view"},"gradle.allowParallelRun":{"type":"boolean","default":false,"scope":"window","markdownDescription":"Allow to run tasks in parallel, each running will create a new terminal. This configuration will override `gradle.reuseTerminals` and always create new task terminals when running or debugging a task."},"gradle.projectOpenBehaviour":{"default":"Interactive","type":"string","scope":"window","description":"Default method of opening newly created project.","enum":["Interactive","Open","Add to Workspace"]},"java.gradle.buildServer.enabled":{"type":"string","enum":["on","off"],"markdownDescription":"Whether to use build server to synchronize Gradle project. It will replace the original Buildship to import the Gradle when enabled.","default":"on"},"java.gradle.buildServer.openBuildOutput":{"type":"string","enum":["neverOpen","openOnBuildStart","openOnBuildFailure"],"enumDescriptions":["Never automatically open build output.","Open the build output when the build starts.","Open the build output when the build fails."],"default":"openOnBuildFailure","description":"Controls when the build output should open."}}},"jsonValidation":[{"fileMatch":"package.json","url":"https://schemastore.azurewebsites.net/schemas/json/package.json"}],"taskDefinitions":[{"type":"gradle","required":["id","script","description","group","project","buildFile","rootProject","projectFolder","workspaceFolder","args","javaDebug"],"properties":{"id":{"type":"string","description":"Unique identifier for this task"},"script":{"type":"string","description":"The task script name"},"description":{"type":"string","description":"Description of the task"},"group":{"type":"string","description":"Task group"},"project":{"type":"string","description":"The project this task belongs to"},"buildFile":{"type":"string","description":"The full path to task project build file"},"rootProject":{"type":"string","description":"The root project this task belongs to"},"projectFolder":{"type":"string","description":"The gradle project folder path"},"workspaceFolder":{"type":"string","description":"The workspace folder path"},"args":{"type":"string","description":"Task args"},"javaDebug":{"type":"boolean","description":"Debug JavaExec task when executing"}}}]},"scripts":{"test":"node ./out/test/runTests.js","lint":"npm run lint:prettier && npm run lint:eslint","lint:prettier":"prettier --check \"**/*.{ts,js,json,svg,md,yml}\"","lint:eslint":"eslint . --ext .js,.ts","lint:fix":"npm run lint:fix:prettier && npm run lint:eslint -- --fix","lint:fix:prettier":"prettier --write \"**/*.{ts,js,json,svg,md,yml}\"","compile":"tsc -p . && webpack --config webpack.config.js --mode production","compile:test":"tsc -p .","preinstall:ext":"vsce package","update-tpn":"node scripts/update-third-party-notice.js"},"devDependencies":{"@grpc/grpc-js":"^1.8.22","@types/fs-extra":"^11.0.1","@types/glob":"^8.1.0","@types/google-protobuf":"^3.15.6","@types/lodash":"^4.14.191","@types/mocha":"^10.0.1","@types/node":"^16.11.7","@types/sinon":"^10.0.13","@types/vscode":"^1.76.0","@typescript-eslint/eslint-plugin":"^5.54.0","@typescript-eslint/parser":"^5.54.0","@vscode/test-electron":"^2.3.8","@vscode/vsce":"^2.18.0","eslint":"^8.35.0","eslint-config-prettier":"^8.6.0","eslint-plugin-prettier":"^4.2.1","google-protobuf":"^3.21.2","grpc-tools":"^1.12.4","mocha":"^10.2.0","prettier":"^2.8.4","sinon":"^15.0.1","ts-loader":"^9.4.2","ts-protoc-gen":"^0.15.0","typescript":"^4.9.5","webpack":"^5.76.0","webpack-cli":"^5.0.1"},"dependencies":{"await-lock":"^2.2.2","jdk-utils":"^0.4.4","fs-extra":"^11.1.0","get-port":"^5.1.1","lodash":"^4.17.21","minimatch":"^5.1.1","string-argv":"^0.3.1","tree-kill":"^1.2.2","vscode-extension-telemetry-wrapper":"0.14.0","vscode-languageclient":"7.0.0"}},"location":{"$mid":1,"path":"/Users/andytran/.vscode/extensions/vscjava.vscode-gradle-3.16.4","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Microsoft","metadata":{"installedTimestamp":1733083352909,"pinned":false,"source":"gallery","id":"a226f06e-9b5e-493b-b92a-553d3572f969","publisherId":"bae08b87-578e-41ec-ab1c-0b036e7add88","publisherDisplayName":"Microsoft","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"redhat.java","uuid":"198a707e-28af-4e84-8610-6e2f628dd12d"},"manifest":{"name":"java","displayName":"Language Support for Java(TM) by Red Hat","description":"Java Linting, Intellisense, formatting, refactoring, Maven/Gradle support and more...","author":"Red Hat","icon":"icons/icon128.png","license":"EPL-2.0","version":"1.37.0","publisher":"redhat","bugs":"https://github.com/redhat-developer/vscode-java/issues","preview":false,"capabilities":{"untrustedWorkspaces":{"supported":"limited","restrictedConfigurations":["java.jdt.ls.java.home","java.home","java.jdt.ls.vmargs","java.configuration.runtimes","java.import.gradle.java.home","java.import.gradle.home"]},"virtualWorkspaces":false},"engines":{"vscode":"^1.77.0"},"repository":{"type":"git","url":"https://github.com/redhat-developer/vscode-java"},"categories":["Programming Languages","Linters","Formatters","Snippets"],"keywords":["multi-root ready"],"activationEvents":["onLanguage:java","workspaceContains:pom.xml","workspaceContains:*/pom.xml","workspaceContains:build.gradle","workspaceContains:*/build.gradle","workspaceContains:settings.gradle","workspaceContains:*/settings.gradle","workspaceContains:build.gradle.kts","workspaceContains:*/build.gradle.kts","workspaceContains:settings.gradle.kts","workspaceContains:*/settings.gradle.kts","workspaceContains:.classpath","workspaceContains:*/.classpath","onCommand:_java.templateVariables","onCommand:_java.metadataFilesGeneration"],"main":"./dist/extension","contributes":{"customEditors":[{"viewType":"decompiled.javaClass","displayName":"Decompiled Java Class File","selector":[{"filenamePattern":"file:/**/*.class"}]}],"javaBuildFilePatterns":["^pom\\.xml$",".*\\.gradle(\\.kts)?$"],"javaBuildTools":[{"displayName":"Maven","buildFileNames":["pom.xml"]},{"displayName":"Gradle","buildFileNames":["build.gradle","settings.gradle","build.gradle.kts","settings.gradle.kts"]}],"javaShortcuts":[{"title":"$(settings-gear) Open Java Settings","command":"workbench.action.openSettings","arguments":["java"]},{"title":"$(output) Open Logs","command":"java.open.logs"},{"title":"$(trash) Clean Workspace Cache...","command":"java.clean.workspace"},{"command":"java.change.searchScope","title":"$(search) Search Scope","category":"Java"}],"semanticTokenTypes":[{"id":"annotation","superType":"type","description":"Style for annotations."},{"id":"annotationMember","superType":"method","description":"Style for annotation members."},{"id":"modifier","superType":"keyword","description":"Style for modifier keywords."},{"id":"record","superType":"class","description":"Style for records."},{"id":"recordComponent","superType":"parameter","description":"Style for record components."}],"semanticTokenModifiers":[{"id":"public","description":"Style for symbols with the public access modifier."},{"id":"private","description":"Style for symbols with the private access modifier."},{"id":"protected","description":"Style for symbols with the protected access modifier."},{"id":"native","description":"Style for symbols with the native modifier."},{"id":"generic","description":"Style for symbols that are generic (have type parameters)."},{"id":"typeArgument","description":"Style for symbols that are type arguments for a generic symbol."},{"id":"importDeclaration","description":"Style for symbols that are part of an import declaration."},{"id":"constructor","description":"Style for symbols that are constructors."}],"semanticTokenScopes":[{"language":"java","scopes":{"annotation":["storage.type.annotation.java"],"annotationMember":["entity.name.annotationMember.java","constant.other.key.java"],"modifier":["storage.modifier.java"],"keyword.documentation":["keyword.other.documentation.javadoc.java"],"*.constructor":["entity.name.function.java"]}}],"languages":[{"id":"java","extensions":[".java",".class"],"configuration":"./language-support/java/language-configuration.json"},{"id":"java-properties","aliases":["Java Properties"],"extensions":[".properties"],"configuration":"./language-support/properties/java-properties-configuration.json"},{"id":"gradle-kotlin-dsl","aliases":["Gradle Kotlin DSL"],"extensions":[".gradle.kts"],"configuration":"./language-support/kotlin/language-configuration.json"}],"grammars":[{"language":"java","scopeName":"source.java","path":"./language-support/java/java.tmLanguage.json"},{"language":"java-properties","scopeName":"source.java-properties","path":"./language-support/properties/JavaProperties.tmLanguage.json"},{"language":"gradle-kotlin-dsl","scopeName":"source.gradle-kotlin-dsl","path":"./language-support/kotlin/kotlin.tmLanguage.json"},{"injectTo":["source.java"],"scopeName":"inline.sql","path":"./language-support/sql/inline-sql.json","embeddedLanguages":{"meta.embedded.block.sql":"sql"}},{"injectTo":["source.java"],"scopeName":"inline.json","path":"./language-support/json/inline-json.json","embeddedLanguages":{"meta.embedded.block.json":"json"}},{"injectTo":["source.java"],"scopeName":"inline.xml","path":"./language-support/xml/inline-xml.json","embeddedLanguages":{"meta.embedded.block.xml":"xml"}},{"injectTo":["source.java"],"scopeName":"inline.yaml","path":"./language-support/yaml/inline-yaml.json","embeddedLanguages":{"meta.embedded.block.yaml":"yaml"}},{"injectTo":["source.java"],"scopeName":"inline.html","path":"./language-support/html/inline-html.json","embeddedLanguages":{"meta.embedded.block.html":"html"}}],"jsonValidation":[{"fileMatch":"package.json","url":"./schemas/package.schema.json"}],"configuration":[{"id":"java-startup","title":"Startup","order":10,"properties":{"java.home":{"type":["string","null"],"default":null,"description":"Specifies the folder path to the JDK (17 or more recent) used to launch the Java Language Server.\nOn Windows, backslashes must be escaped, i.e.\n\"java.home\":\"C:\\\\Program Files\\\\Java\\\\jdk-17.0_3\"","scope":"machine-overridable","deprecationMessage":"This setting is deprecated, please use 'java.jdt.ls.java.home' instead.","order":0},"java.jdt.ls.java.home":{"type":["string","null"],"default":null,"description":"Specifies the folder path to the JDK (17 or more recent) used to launch the Java Language Server. This setting will replace the Java extension's embedded JRE to start the Java Language Server. \n\nOn Windows, backslashes must be escaped, i.e.\n\"java.jdt.ls.java.home\":\"C:\\\\Program Files\\\\Java\\\\jdk-17.0_3\"","scope":"machine-overridable","order":10},"java.jdt.ls.vmargs":{"type":["string","null"],"default":"-XX:+UseParallelGC -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Dsun.zip.disableMemoryMapping=true -Xmx1G -Xms100m -Xlog:disable","description":"Specifies extra VM arguments used to launch the Java Language Server. Eg. use `-XX:+UseParallelGC -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Dsun.zip.disableMemoryMapping=true -Xmx1G -Xms100m -Xlog:disable` to optimize memory usage with the parallel garbage collector","scope":"machine-overridable","order":20},"java.server.launchMode":{"type":"string","enum":["Standard","LightWeight","Hybrid"],"enumDescriptions":["Provides full features such as intellisense, refactoring, building, Maven/Gradle support etc.","Starts a syntax server with lower start-up cost. Only provides syntax features such as outline, navigation, javadoc, syntax errors.","Provides full features with better responsiveness. It starts a standard language server and a secondary syntax server. The syntax server provides syntax features until the standard server is ready."],"description":"The launch mode for the Java extension","default":"Hybrid","scope":"window","order":30},"java.configuration.workspaceCacheLimit":{"type":["null","integer"],"default":90,"minimum":1,"description":"The number of days (if enabled) to keep unused workspace cache data. Beyond this limit, cached workspace data may be removed.","scope":"application","order":40},"java.sharedIndexes.enabled":{"type":"string","enum":["auto","on","off"],"default":"auto","markdownDescription":"[Experimental] Specify whether to share indexes between different workspaces. When set to `auto`, shared indexes will be enabled in Visual Studio Code - Insiders.","scope":"window","order":50},"java.sharedIndexes.location":{"type":"string","markdownDescription":"Specifies a common index location for all workspaces. See default values as follows:\n \nWindows: First use `\"$APPDATA\\\\.jdt\\\\index\"`, or `\"~\\\\.jdt\\\\index\"` if it does not exist\n \nmacOS: `\"~/Library/Caches/.jdt/index\"`\n \nLinux: First use `\"$XDG_CACHE_HOME/.jdt/index\"`, or `\"~/.cache/.jdt/index\"` if it does not exist","default":"","scope":"window","order":60},"java.jdt.ls.lombokSupport.enabled":{"type":"boolean","default":true,"description":"Whether to load lombok processors from project classpath","scope":"window","order":70},"java.jdt.ls.protobufSupport.enabled":{"type":"boolean","default":true,"markdownDescription":"Specify whether to automatically add Protobuf output source directories to the classpath.\n\n**Note:** Only works for Gradle `com.google.protobuf` plugin `0.8.4` or higher.","scope":"window","order":80},"java.jdt.ls.androidSupport.enabled":{"type":"string","enum":["auto","on","off"],"default":"auto","markdownDescription":"[Experimental] Specify whether to enable Android project importing. When set to `auto`, the Android support will be enabled in Visual Studio Code - Insiders.\n\n**Note:** Only works for Android Gradle Plugin `3.2.0` or higher.","scope":"window","order":90},"java.jdt.ls.javac.enabled":{"type":"string","enum":["on","off"],"default":"off","markdownDescription":"[Experimental] Specify whether to enable Javac-based compilation in the language server. Requires running this extension with Java 23","scope":"window","order":95},"java.trace.server":{"type":"string","enum":["off","messages","verbose"],"default":"off","description":"Traces the communication between VS Code and the Java language server.","scope":"window"},"redhat.telemetry.enabled":{"type":"boolean","default":null,"markdownDescription":"Enable usage data and errors to be sent to Red Hat servers. Read our [privacy statement](https://developers.redhat.com/article/tool-data-collection).","scope":"window","tags":["usesOnlineServices","telemetry"]}}},{"id":"java-projectimport","title":"Project Import/Update","order":20,"properties":{"java.import.projectSelection":{"type":"string","enum":["manual","automatic"],"enumDescriptions":["Manually select the build configuration files.","Let extension automatically scan and select the build configuration files."],"default":"automatic","markdownDescription":"[Experimental] Specifies how to select build configuration files to import. \nNote: Currently, `Gradle` projects cannot be partially imported.","scope":"window","order":10},"java.configuration.updateBuildConfiguration":{"type":["string"],"enum":["disabled","interactive","automatic"],"default":"interactive","description":"Specifies how modifications on build files update the Java classpath/configuration","scope":"window","order":20},"java.import.exclusions":{"type":"array","description":"Configure glob patterns for excluding folders. Use `!` to negate patterns to allow subfolders imports. You have to include a parent directory. The order is important.","default":["**/node_modules/**","**/.metadata/**","**/archetype-resources/**","**/META-INF/maven/**"],"scope":"window"},"java.project.resourceFilters":{"type":"array","items":{"type":"string","pattern":"^(?!\\*).*"},"default":["node_modules","\\.git"],"markdownDescription":"Excludes files and folders from being refreshed by the Java Language Server, which can improve the overall performance. For example, [\"node_modules\",\"\\.git\"] will exclude all files and folders named `node_modules` or `.git`. Pattern expressions must be compatible with `java.util.regex.Pattern`. Defaults to [\"node_modules\",\"\\.git\"].","scope":"window"},"java.configuration.checkProjectSettingsExclusions":{"deprecationMessage":"Please use 'java.import.generatesMetadataFilesAtProjectRoot' to control whether to generate the project metadata files at the project root. And use 'files.exclude' to control whether to hide the project metadata files from the file explorer.","type":"boolean","default":false,"description":"Controls whether to exclude extension-generated project settings files (.project, .classpath, .factorypath, .settings/) from the file explorer.","scope":"window"},"java.import.generatesMetadataFilesAtProjectRoot":{"type":"boolean","markdownDescription":"Specify whether the project metadata files(.project, .classpath, .factorypath, .settings/) will be generated at the project root. Click [HERE](command:_java.metadataFilesGeneration) to learn how to change the setting to make it take effect.","default":false,"scope":"window"},"java.project.importOnFirstTimeStartup":{"type":"string","enum":["disabled","interactive","automatic"],"default":"automatic","description":"Specifies whether to import the Java projects, when opening the folder in Hybrid mode for the first time.","scope":"application"},"java.project.importHint":{"type":"boolean","description":"Enable/disable the server-mode switch information, when Java projects import is skipped on startup.","default":true,"scope":"application"},"java.showBuildStatusOnStart.enabled":{"anyOf":[{"enum":["notification","terminal","off"],"enumDescriptions":["Show the build status via progress notification on start","Show the build status via terminal on start","Do not show any build status on start"]},"boolean"],"description":"Automatically show build status on startup.","default":"notification","scope":"window"},"java.project.encoding":{"enum":["ignore","warning","setDefault"],"enumDescriptions":["Ignore project encoding settings","Show warning if a project has no explicit encoding set","Set the default workspace encoding settings"],"default":"ignore","markdownDescription":"Project encoding settings","scope":"window"}}},{"id":"java-unmanagedfolder","title":"Unmanaged Folder","order":30,"properties":{"java.project.sourcePaths":{"type":"array","items":{"type":"string"},"markdownDescription":"Relative paths to the workspace where stores the source files. `Only` effective in the `WORKSPACE` scope. The setting will `NOT` affect Maven or Gradle project.","default":[],"scope":"window","order":10},"java.project.outputPath":{"type":["string","null"],"markdownDescription":"A relative path to the workspace where stores the compiled output. `Only` effective in the `WORKSPACE` scope. The setting will `NOT` affect Maven or Gradle project.","default":"","scope":"window","order":20},"java.project.referencedLibraries":{"type":["array","object"],"description":"Configure glob patterns for referencing local libraries to a Java project.","default":["lib/**/*.jar"],"properties":{"include":{"type":"array"},"exclude":{"type":"array"},"sources":{"type":"object"}},"required":["include"],"additionalProperties":false,"scope":"window","order":30}}},{"id":"java-maven","title":"Maven","order":40,"properties":{"java.import.maven.enabled":{"type":"boolean","default":true,"description":"Enable/disable the Maven importer.","scope":"window","order":10},"java.import.maven.offline.enabled":{"type":"boolean","default":false,"description":"Enable/disable the Maven offline mode.","scope":"window","order":20},"java.import.maven.disableTestClasspathFlag":{"type":"boolean","default":false,"description":"Enable/disable test classpath segregation. When enabled, this permits the usage of test resources within a Maven project as dependencies within the compile scope of other projects.","scope":"window","order":30},"java.maven.downloadSources":{"type":"boolean","default":false,"description":"Enable/disable download of Maven source artifacts as part of importing Maven projects.","scope":"window","order":40},"java.maven.updateSnapshots":{"type":"boolean","default":false,"description":"Force update of Snapshots/Releases.","scope":"window","order":50},"java.configuration.maven.userSettings":{"type":"string","default":null,"description":"Path to Maven's user settings.xml","scope":"window","order":60},"java.configuration.maven.globalSettings":{"type":"string","default":null,"description":"Path to Maven's global settings.xml","scope":"window","order":70},"java.configuration.maven.notCoveredPluginExecutionSeverity":{"type":"string","enum":["ignore","warning","error"],"default":"warning","description":"Specifies severity if the plugin execution is not covered by Maven build lifecycle.","scope":"window","order":80},"java.configuration.maven.defaultMojoExecutionAction":{"type":"string","enum":["ignore","warn","error","execute"],"default":"ignore","description":"Specifies default mojo execution action when no associated metadata can be detected.","scope":"window","order":90},"java.configuration.maven.lifecycleMappings":{"type":"string","default":null,"description":"Path to Maven's lifecycle mappings xml","scope":"window","order":100}}},{"id":"java-gradle","title":"Gradle","order":50,"properties":{"java.import.gradle.enabled":{"type":"boolean","default":true,"description":"Enable/disable the Gradle importer.","scope":"window","order":10},"java.import.gradle.wrapper.enabled":{"type":"boolean","default":true,"description":"Use Gradle from the 'gradle-wrapper.properties' file.","scope":"window","order":20},"java.import.gradle.version":{"type":"string","default":null,"description":"Use Gradle from the specific version if the Gradle wrapper is missing or disabled.","scope":"window","order":30},"java.import.gradle.home":{"type":"string","default":null,"description":"Use Gradle from the specified local installation directory or GRADLE_HOME if the Gradle wrapper is missing or disabled and no 'java.import.gradle.version' is specified.","scope":"machine-overridable","order":40},"java.import.gradle.java.home":{"type":"string","default":null,"description":"The location to the JVM used to run the Gradle daemon.","scope":"machine-overridable","order":50},"java.import.gradle.user.home":{"type":"string","default":null,"description":"Setting for GRADLE_USER_HOME.","scope":"machine-overridable","order":55},"java.import.gradle.offline.enabled":{"type":"boolean","default":false,"description":"Enable/disable the Gradle offline mode.","scope":"window","order":60},"java.import.gradle.arguments":{"type":"string","default":null,"description":"Arguments to pass to Gradle.","scope":"machine","order":70},"java.import.gradle.jvmArguments":{"type":"string","default":null,"description":"JVM arguments to pass to Gradle.","scope":"machine","order":80},"java.import.gradle.annotationProcessing.enabled":{"type":"boolean","default":true,"description":"Enable/disable the annotation processing on Gradle projects and delegate Annotation Processing to JDT APT. Only works for Gradle 5.2 or higher.","scope":"window","order":90},"java.imports.gradle.wrapper.checksums":{"type":"array","items":{"type":"object","default":{},"required":["sha256"],"properties":{"sha256":{"type":"string","label":"SHA-256 checksum."},"allowed":{"type":"boolean","default":true,"label":"Is allowed?"}},"additionalProperties":false,"uniqueItems":true},"description":"Defines allowed/disallowed SHA-256 checksums of Gradle Wrappers","default":[],"scope":"application"}}},{"id":"java-build","title":"Build","order":60,"properties":{"java.autobuild.enabled":{"type":"boolean","default":true,"description":"Enable/disable the 'auto build'","scope":"window","order":10},"java.maxConcurrentBuilds":{"type":"integer","default":1,"description":"Max simultaneous project builds","scope":"window","minimum":1,"order":20},"java.settings.url":{"type":"string","markdownDescription":"Specifies the url or file path to the workspace Java settings. See [Setting Global Preferences](https://github.com/redhat-developer/vscode-java/wiki/Settings-Global-Preferences)","default":null,"scope":"window","order":30},"java.compile.nullAnalysis.nonnull":{"type":"array","default":["javax.annotation.Nonnull","org.eclipse.jdt.annotation.NonNull","org.springframework.lang.NonNull"],"markdownDescription":"Specify the Nonnull annotation types to be used for null analysis. If more than one annotation is specified, then the topmost annotation will be used first if it exists in project dependencies. This setting will be ignored if `java.compile.nullAnalysis.mode` is set to `disabled`","scope":"window"},"java.compile.nullAnalysis.nullable":{"type":"array","default":["javax.annotation.Nullable","org.eclipse.jdt.annotation.Nullable","org.springframework.lang.Nullable"],"markdownDescription":"Specify the Nullable annotation types to be used for null analysis. If more than one annotation is specified, then the topmost annotation will be used first if it exists in project dependencies. This setting will be ignored if `java.compile.nullAnalysis.mode` is set to `disabled`","scope":"window"},"java.compile.nullAnalysis.nonnullbydefault":{"type":"array","default":["javax.annotation.ParametersAreNonnullByDefault","org.eclipse.jdt.annotation.NonNullByDefault","org.springframework.lang.NonNullApi"],"markdownDescription":"Specify the NonNullByDefault annotation types to be used for null analysis. If more than one annotation is specified, then the topmost annotation will be used first if it exists in project dependencies. This setting will be ignored if `java.compile.nullAnalysis.mode` is set to `disabled`","scope":"window"},"java.compile.nullAnalysis.mode":{"type":"string","enum":["disabled","interactive","automatic"],"default":"interactive","markdownDescription":"Specify how to enable the annotation-based null analysis.","scope":"window"},"java.errors.incompleteClasspath.severity":{"type":["string"],"enum":["ignore","info","warning","error"],"default":"warning","description":"Specifies the severity of the message when the classpath is incomplete for a Java file","scope":"window"}}},{"id":"java-jdks","title":"Installed JDKs","order":70,"properties":{"java.configuration.runtimes":{"type":"array","description":"Map Java Execution Environments to local JDKs.","items":{"type":"object","default":{},"required":["path","name"],"properties":{"name":{"type":"string","enum":["J2SE-1.5","JavaSE-1.6","JavaSE-1.7","JavaSE-1.8","JavaSE-9","JavaSE-10","JavaSE-11","JavaSE-12","JavaSE-13","JavaSE-14","JavaSE-15","JavaSE-16","JavaSE-17","JavaSE-18","JavaSE-19","JavaSE-20","JavaSE-21","JavaSE-22","JavaSE-23"],"description":"Java Execution Environment name. Must be unique."},"path":{"type":"string","pattern":".*(?<!\\/bin|\\/bin\\/|\\\\bin|\\\\bin\\\\)$","description":"JDK home path. Should be the JDK installation directory, not the Java bin path.\n On Windows, backslashes must be escaped, i.e.\n\"path\":\"C:\\\\Program Files\\\\Java\\\\jdk1.8.0_161\"."},"sources":{"type":"string","description":"JDK sources path."},"javadoc":{"type":"string","description":"JDK javadoc path."},"default":{"type":"boolean","description":"Is default runtime? Only one runtime can be default."}},"additionalProperties":false},"default":[],"scope":"machine-overridable"},"java.configuration.detectJdksAtStart":{"type":"boolean","default":true,"markdownDescription":"Automatically detect JDKs installed on local machine at startup. If you have specified the same JDK version in `#java.configuration.runtimes#`, the extension will use that version first."}}},{"id":"java-formatting","title":"Formatting","order":80,"properties":{"java.format.enabled":{"type":"boolean","default":true,"description":"Enable/disable default Java formatter","scope":"window","order":10},"java.format.settings.url":{"type":"string","markdownDescription":"Specifies the url or file path to the [Eclipse formatter xml settings](https://github.com/redhat-developer/vscode-java/wiki/Formatter-settings).","default":null,"scope":"window","order":20},"java.format.settings.profile":{"type":"string","description":"Optional formatter profile name from the Eclipse formatter settings.","default":null,"scope":"window","order":30},"java.format.comments.enabled":{"type":"boolean","description":"Includes the comments during code formatting.","default":true,"scope":"window"},"java.format.onType.enabled":{"type":"boolean","description":"Enable/disable automatic block formatting when typing `;`, `<enter>` or `}`","default":true,"scope":"window"}}},{"id":"java-codecompletion","title":"Code Completion","order":90,"properties":{"java.completion.enabled":{"type":"boolean","default":true,"description":"Enable/disable code completion support","scope":"window","order":10},"java.completion.engine":{"type":"string","default":"ecj","description":"[Experimental] Select code completion engine","scope":"window","enum":["ecj","dom"],"markdownEnumDescriptions":["Use ECJ-based code completion engine (default)","Use (highly experimental) JDT DOM-based code completion engine (requires `java.jdt.ls.javac.enabled` to be `on`)"],"order":1000},"java.completion.postfix.enabled":{"type":"boolean","default":true,"markdownDescription":"Enable/disable postfix completion support. `#editor.snippetSuggestions#` can be used to customize how postfix snippets are sorted.","scope":"window","order":20},"java.completion.chain.enabled":{"type":"boolean","default":false,"markdownDescription":"Enable/disable chain completion support. Chain completions are only available when completions are invoked by the completions shortcut","scope":"window","order":30},"java.completion.favoriteStaticMembers":{"type":"array","description":"Defines a list of static members or types with static members. Content assist will propose those static members even if the import is missing.","default":["org.junit.Assert.*","org.junit.Assume.*","org.junit.jupiter.api.Assertions.*","org.junit.jupiter.api.Assumptions.*","org.junit.jupiter.api.DynamicContainer.*","org.junit.jupiter.api.DynamicTest.*","org.mockito.Mockito.*","org.mockito.ArgumentMatchers.*","org.mockito.Answers.*"],"scope":"window","order":40},"java.completion.filteredTypes":{"type":"array","description":"Defines the type filters. All types whose fully qualified name matches the selected filter strings will be ignored in content assist or quick fix proposals and when organizing imports. For example 'java.awt.*' will hide all types from the awt packages.","default":["java.awt.*","com.sun.*","sun.*","jdk.*","org.graalvm.*","io.micrometer.shaded.*"],"scope":"window","order":50},"java.completion.guessMethodArguments":{"type":["boolean","string"],"enum":["auto","off","insertParameterNames","insertBestGuessedArguments"],"enumDescriptions":["Use 'off' only when using Visual Studio Code - Insiders, other platform will defaults to 'insertBestGuessedArguments'.","Method arguments will not be inserted during completion.","The parameter names will be inserted during completion.","The best guessed arguments will be inserted during completion according to the code context."],"default":"auto","description":"Specify how the arguments will be filled during completion.","scope":"window","order":60},"java.completion.matchCase":{"type":"string","enum":["firstLetter","off"],"enumDescriptions":["Match case for the first letter when doing completion.","Do not match case when doing completion."],"default":"firstLetter","markdownDescription":"Specify whether to match case for code completion.","scope":"window","order":70},"java.completion.importOrder":{"type":"array","description":"Defines the sorting order of import statements. A package or type name prefix (e.g. 'org.eclipse') is a valid entry. An import is always added to the most specific group. As a result, the empty string (e.g. '') can be used to group all other imports. Static imports are prefixed with a '#'","default":["#","java","javax","org","com",""],"scope":"window","order":80},"java.completion.lazyResolveTextEdit.enabled":{"type":"boolean","default":true,"description":"[Experimental] Enable/disable lazily resolving text edits for code completion.","scope":"window"},"java.completion.maxResults":{"type":"integer","default":0,"markdownDescription":"Maximum number of completion results (not including snippets).\n`0` (the default value) disables the limit, all results are returned. In case of performance problems, consider setting a sensible limit.","scope":"window"},"java.signatureHelp.enabled":{"type":"boolean","default":true,"description":"Enable/disable the signature help.","scope":"window"},"java.signatureHelp.description.enabled":{"type":"boolean","default":false,"description":"Enable/disable to show the description in signature help.","scope":"window"},"java.completion.collapseCompletionItems":{"type":"boolean","default":false,"markdownDescription":"Enable/disable the collapse of overloaded methods in completion items. Overrides `#java.completion.guessMethodArguments#`.","scope":"window"}}},{"id":"java-codegeneration","title":"Code Generation","order":100,"properties":{"java.templates.fileHeader":{"type":"array","markdownDescription":"Specifies the file header comment for new Java file. Supports configuring multi-line comments with an array of strings, and using ${variable} to reference the [predefined variables](command:_java.templateVariables).","scope":"window","default":[],"order":10},"java.templates.typeComment":{"type":"array","markdownDescription":"Specifies the type comment for new Java type. Supports configuring multi-line comments with an array of strings, and using ${variable} to reference the [predefined variables](command:_java.templateVariables).","scope":"window","default":[],"order":20},"java.codeGeneration.insertionLocation":{"type":"string","enum":["afterCursor","beforeCursor","lastMember"],"enumDescriptions":["Insert the generated code after the member where the cursor is located.","Insert the generated code before the member where the cursor is located.","Insert the generated code as the last member of the target type."],"description":"Specifies the insertion location of the code generated by source actions.","default":"afterCursor","scope":"window","order":30},"java.codeGeneration.addFinalForNewDeclaration":{"type":"string","enum":["none","fields","variables","all"],"enumDescriptions":["Do not generate final modifier.","Generate 'final' modifier only for new field declarations.","Generate 'final' modifier only for new variable declarations.","Generate 'final' modifier for all new declarations."],"description":"Whether to generate the 'final' modifer for code actions that create new declarations.","default":"none","scope":"window"},"java.codeGeneration.hashCodeEquals.useJava7Objects":{"type":"boolean","description":"Use Objects.hash and Objects.equals when generating the hashCode and equals methods. This setting only applies to Java 7 and higher.","default":false,"scope":"window"},"java.codeGeneration.hashCodeEquals.useInstanceof":{"type":"boolean","description":"Use 'instanceof' to compare types when generating the hashCode and equals methods.","default":false,"scope":"window"},"java.codeGeneration.useBlocks":{"type":"boolean","description":"Use blocks in 'if' statements when generating the methods.","default":false,"scope":"window"},"java.codeGeneration.generateComments":{"type":"boolean","description":"Generate method comments when generating the methods.","default":false,"scope":"window"},"java.codeGeneration.toString.template":{"type":"string","description":"The template for generating the toString method.","default":"${object.className} [${member.name()}=${member.value}, ${otherMembers}]"},"java.codeGeneration.toString.codeStyle":{"type":"string","enum":["STRING_CONCATENATION","STRING_BUILDER","STRING_BUILDER_CHAINED","STRING_FORMAT"],"enumDescriptions":["String concatenation","StringBuilder/StringBuffer","StringBuilder/StringBuffer - chained call","String.format/MessageFormat"],"description":"The code style for generating the toString method.","default":"STRING_CONCATENATION"},"java.codeGeneration.toString.skipNullValues":{"type":"boolean","description":"Skip null values when generating the toString method.","default":false,"scope":"window"},"java.codeGeneration.toString.listArrayContents":{"type":"boolean","description":"List contents of arrays instead of using native toString().","default":true,"scope":"window"},"java.codeGeneration.toString.limitElements":{"type":"integer","description":"Limit number of items in arrays/collections/maps to list, if 0 then list all.","default":0,"scope":"window"},"java.edit.smartSemicolonDetection.enabled":{"type":"boolean","default":false,"markdownDescription":"Defines the `smart semicolon` detection. Defaults to `false`.","scope":"window"}}},{"id":"java-codeaction","title":"Code Action","order":110,"properties":{"java.cleanup.actions":{"type":"array","markdownDescription":"The list of clean ups to be run on the current document when it's saved or when the cleanup command is issued. Clean ups can automatically fix code style or programming mistakes. Click [HERE](command:_java.learnMoreAboutCleanUps) to learn more about what each clean up does.","items":{"type":"string","enum":["qualifyMembers","qualifyStaticMembers","addOverride","addDeprecated","stringConcatToTextBlock","invertEquals","addFinalModifier","instanceofPatternMatch","lambdaExpressionFromAnonymousClass","lambdaExpression","switchExpression","tryWithResource","renameFileToType","organizeImports","renameUnusedLocalVariables"]},"default":["renameFileToType"],"scope":"window","order":10},"java.cleanup.actionsOnSave":{"type":"array","deprecationMessage":"Deprecated, please use 'java.cleanup.actions' instead.","items":{"type":"string","enum":["qualifyMembers","qualifyStaticMembers","addOverride","addDeprecated","stringConcatToTextBlock","invertEquals","addFinalModifier","instanceofPatternMatch","lambdaExpressionFromAnonymousClass","lambdaExpression","switchExpression","tryWithResource"]},"default":[],"scope":"window"},"java.saveActions.cleanup":{"type":"boolean","default":true,"description":"Enable/disable cleanup actions on save."},"java.saveActions.organizeImports":{"type":"boolean","default":false,"description":"Enable/disable auto organize imports on save action","scope":"window","order":20},"java.sources.organizeImports.starThreshold":{"type":"integer","description":"Specifies the number of imports added before a star-import declaration is used.","default":99,"scope":"window","minimum":1,"order":30},"java.sources.organizeImports.staticStarThreshold":{"type":"integer","description":"Specifies the number of static imports added before a star-import declaration is used.","default":99,"scope":"window","minimum":1,"order":40},"java.quickfix.showAt":{"type":"string","enum":["line","problem"],"default":"line","description":"Show quickfixes at the problem or line level.","scope":"window"},"java.codeAction.sortMembers.avoidVolatileChanges":{"type":"boolean","default":true,"description":"Reordering of fields, enum constants, and initializers can result in semantic and runtime changes due to different initialization and persistence order. This setting prevents this from occurring.","scope":"window"},"java.refactoring.extract.interface.replace":{"type":"boolean","markdownDescription":"Specify whether to replace all the occurrences of the subtype with the new extracted interface.","default":true}}},{"id":"java-codenagivation","title":"Code Navigation","order":120,"properties":{"java.referencesCodeLens.enabled":{"type":"boolean","default":false,"description":"Enable/disable the references code lens.","scope":"window","order":10},"java.implementationsCodeLens.enabled":{"type":"boolean","default":false,"description":"Enable/disable the implementations code lens.","scope":"window","order":20},"java.references.includeAccessors":{"type":"boolean","default":true,"description":"Include getter, setter and builder/constructor when finding references.","scope":"window","order":30},"java.references.includeDeclarations":{"type":"boolean","default":true,"description":"Include declarations when finding references.","scope":"window","order":40},"java.references.includeDecompiledSources":{"type":"boolean","default":true,"description":"Include the decompiled sources when finding references.","scope":"window","order":50},"java.symbols.includeSourceMethodDeclarations":{"type":"boolean","markdownDescription":"Include method declarations from source files in symbol search.","default":false,"scope":"window","order":60},"java.typeHierarchy.lazyLoad":{"type":"boolean","default":false,"description":"Enable/disable lazy loading the content in type hierarchy. Lazy loading could save a lot of loading time but every type should be expanded manually to load its content.","scope":"window","order":70},"java.inlayHints.parameterNames.enabled":{"type":"string","enum":["none","literals","all"],"enumDescriptions":["Disable parameter name hints","Enable parameter name hints only for literal arguments","Enable parameter name hints for literal and non-literal arguments"],"default":"literals","markdownDescription":"Enable/disable inlay hints for parameter names:\n```java\n\nInteger.valueOf(/* s: */ '123', /* radix: */ 10)\n \n```\n `#java.inlayHints.parameterNames.exclusions#` can be used to disable the inlay hints for methods.","scope":"window","order":80},"java.inlayHints.parameterNames.exclusions":{"type":"array","items":{"type":"string"},"default":[],"markdownDescription":"The patterns for the methods that will be disabled to show the inlay hints. Supported pattern examples:\n - `java.lang.Math.*` - All the methods from java.lang.Math.\n - `*.Arrays.asList` - Methods named as 'asList' in the types named as 'Arrays'.\n - `*.println(*)` - Methods named as 'println'.\n - `(from, to)` - Methods with two parameters named as 'from' and 'to'.\n - `(arg*)` - Methods with one parameter whose name starts with 'arg'.","scope":"window","order":90},"java.search.scope":{"type":"string","enum":["all","main"],"enumDescriptions":["Search on all classpath entries including reference libraries and projects.","All classpath entries excluding test classpath entries."],"default":"all","markdownDescription":"Specifies the scope which must be used for search operation like \n - Find Reference\n - Call Hierarchy\n - Workspace Symbols","scope":"window","order":100}}},{"id":"java-others","title":"Others","order":130,"properties":{"java.eclipse.downloadSources":{"type":"boolean","default":false,"description":"Enable/disable download of Maven source artifacts for Eclipse projects.","scope":"window"},"java.contentProvider.preferred":{"type":"string","description":"Preferred content provider (a 3rd party decompiler id, usually)","default":null,"scope":"window"},"java.foldingRange.enabled":{"type":"boolean","default":true,"description":"Enable/disable smart folding range support. If disabled, it will use the default indentation-based folding range provided by VS Code.","scope":"window"},"java.selectionRange.enabled":{"type":"boolean","default":true,"description":"Enable/disable Smart Selection support for Java. Disabling this option will not affect the VS Code built-in word-based and bracket-based smart selection.","scope":"window"},"java.edit.validateAllOpenBuffersOnChanges":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to recheck all open Java files for diagnostics when editing a Java file.","scope":"window"},"java.diagnostic.filter":{"type":"array","items":{"type":"string"},"default":[],"description":"Specifies a list of file patterns for which matching documents should not have their diagnostics reported (eg. '**/Foo.java').","scope":"window"},"java.editor.reloadChangedSources":{"type":"string","enum":["ask","auto","manual"],"enumDescriptions":["Ask to reload the sources of the open class files","Automatically reload the sources of the open class files","Manually reload the sources of the open class files"],"default":"ask","markdownDescription":"Specifies whether to reload the sources of the open class files when their source jar files are changed.","scope":"window"}}}],"configurationDefaults":{"[java]":{"editor.suggest.snippetsPreventQuickSuggestions":false}},"commands":[{"command":"java.server.mode.switch","title":"Switch to Standard Mode","category":"Java"},{"command":"java.projectConfiguration.update","title":"Reload Projects","category":"Java"},{"command":"java.project.import.command","title":"Import Java Projects into Workspace","category":"Java"},{"command":"java.open.serverLog","title":"Open Java Language Server Log File","category":"Java"},{"command":"java.open.serverStdoutLog","title":"Open Java Language Server Output Log File"},{"command":"java.open.serverStderrLog","title":"Open Java Language Server Error Log File"},{"command":"java.open.clientLog","title":"Open Java Extension Log File","category":"Java"},{"command":"java.open.logs","title":"Open All Log Files","category":"Java"},{"command":"java.workspace.compile","title":"Force Java Compilation","category":"Java"},{"command":"java.project.build","title":"Rebuild Projects","category":"Java"},{"command":"java.open.formatter.settings","title":"Open Java Formatter Settings","category":"Java"},{"command":"java.clean.workspace","title":"Clean Java Language Server Workspace","category":"Java"},{"command":"java.project.updateSourceAttachment.command","title":"Attach Source...","category":"Java"},{"command":"java.project.addToSourcePath.command","title":"Add Folder to Java Source Path","category":"Java"},{"command":"java.project.removeFromSourcePath.command","title":"Remove Folder from Java Source Path","category":"Java"},{"command":"java.project.listSourcePaths.command","title":"List All Java Source Paths","category":"Java"},{"command":"java.show.server.task.status","title":"Show Build Job Status","category":"Java"},{"command":"java.action.navigateToSuperImplementation","title":"Go to Super Implementation","category":"Java"},{"command":"java.action.showTypeHierarchy","title":"Show Type Hierarchy","category":"Java"},{"command":"java.action.showClassHierarchy","title":"Show Class Hierarchy","icon":"$(type-hierarchy)","enablement":"typeHierarchyDirection != both && typeHierarchySymbolKind != 10","category":"Java"},{"command":"java.action.showSupertypeHierarchy","title":"Show Supertype Hierarchy","icon":"$(type-hierarchy-super)","enablement":"typeHierarchyDirection != parents","category":"Java"},{"command":"java.action.showSubtypeHierarchy","title":"Show Subtype Hierarchy","icon":"$(type-hierarchy-sub)","enablement":"typeHierarchyDirection != children","category":"Java"},{"command":"java.action.changeBaseType","title":"Base on this Type","category":"Java"},{"command":"java.project.createModuleInfo.command","title":"Create module-info.java","category":"Java"},{"command":"_java.learnMoreAboutCleanUps","title":"Learn more about Java Clean Ups","category":"Java"},{"command":"java.clean.sharedIndexes","title":"Clean Shared Indexes","category":"Java"},{"command":"java.server.restart","title":"Restart Java Language Server","category":"Java"},{"command":"java.action.filesExplorerPasteAction","title":"Paste Clipboard Text Into a File","category":"Java"},{"command":"java.action.doCleanup","title":"Performs Cleanup Actions","category":"Java"},{"command":"java.change.searchScope","title":"Change Search Scope","category":"Java"}],"keybindings":[{"command":"java.projectConfiguration.update","key":"shift+alt+u","when":"editorFocus"},{"command":"java.workspace.compile","key":"shift+alt+b"},{"command":"java.action.clipboardPasteAction","key":"ctrl+shift+v","mac":"cmd+shift+v","when":"javaLSReady && editorLangId == java"},{"command":"java.action.filesExplorerPasteAction","key":"ctrl+shift+v","mac":"cmd+shift+v","when":"explorerViewletFocus && config.editor.pasteAs.enabled"},{"command":"java.action.doCleanup","key":"ctrl+shift+alt+s","when":"javaLSReady && editorLangId == java"}],"menus":{"explorer/context":[{"command":"java.projectConfiguration.update","when":"resourceFilename =~ /(.*\\.gradle)|(.*\\.gradle\\.kts)|(pom\\.xml)$/","group":"1_javaactions"},{"when":"explorerResourceIsFolder&&javaLSReady","command":"java.project.addToSourcePath.command","group":"1_javaactions@1"},{"when":"explorerResourceIsFolder&&javaLSReady","command":"java.project.removeFromSourcePath.command","group":"1_javaactions@2"}],"editor/context":[{"command":"java.project.updateSourceAttachment.command","when":"editorReadonly && editorLangId == java","group":"1_javaactions"},{"command":"java.projectConfiguration.update","when":"resourceFilename =~ /(.*\\.gradle)|(.*\\.gradle\\.kts)|(pom\\.xml)$/","group":"1_javaactions"},{"command":"java.action.navigateToSuperImplementation","when":"javaLSReady && editorTextFocus && editorLangId == java","group":"navigation@90"},{"command":"java.action.showTypeHierarchy","when":"javaLSReady && editorTextFocus && editorLangId == java","group":"0_navigation@3"}],"commandPalette":[{"command":"java.projectConfiguration.update","when":"javaLSReady"},{"command":"java.project.import.command","when":"javaLSReady"},{"command":"java.open.serverStdoutLog","when":"false"},{"command":"java.open.serverStderrLog","when":"false"},{"command":"java.action.navigateToSuperImplementation","when":"javaLSReady && editorLangId == java"},{"command":"java.workspace.compile","when":"javaLSReady"},{"command":"java.project.build","when":"javaLSReady"},{"command":"java.project.listSourcePaths.command","when":"javaLSReady"},{"command":"java.action.showTypeHierarchy","when":"javaLSReady && editorIsOpen"},{"command":"java.action.showClassHierarchy","when":"false"},{"command":"java.action.showSubtypeHierarchy","when":"false"},{"command":"java.action.showSupertypeHierarchy","when":"false"},{"command":"java.action.changeBaseType","when":"false"},{"command":"java.project.updateSourceAttachment.command","when":"false"},{"command":"java.project.addToSourcePath.command","when":"false"},{"command":"java.project.removeFromSourcePath.command","when":"false"},{"command":"java.show.server.task.status","when":"java:serverMode != LightWeight"},{"command":"java.server.mode.switch","when":"java:serverMode == LightWeight"},{"command":"java.server.restart","when":"javaLSReady"},{"command":"java.action.filesExplorerPasteAction","when":"false"},{"command":"java.action.doCleanup","when":"false"}],"view/title":[{"command":"java.action.showClassHierarchy","group":"navigation@-1","when":"view == references-view.tree && reference-list.hasResult && reference-list.source == javaTypeHierarchy && typeHierarchySymbolKind != 10"},{"command":"java.action.showSupertypeHierarchy","group":"navigation@0","when":"view == references-view.tree && reference-list.hasResult && reference-list.source == javaTypeHierarchy"},{"command":"java.action.showSubtypeHierarchy","group":"navigation@1","when":"view == references-view.tree && reference-list.hasResult && reference-list.source == javaTypeHierarchy"}],"view/item/context":[{"command":"java.action.changeBaseType","group":"1","when":"view == references-view.tree && reference-list.hasResult && reference-list.source == javaTypeHierarchy && viewItem != 'false'"}]}},"scripts":{"vscode:prepublish":"webpack --mode production","compile":"tsc -p ./&webpack --mode development","watch":"webpack --mode development --watch","pretest":"npm run compile","test":"node ./out/test/runtest.js","build-server":"./node_modules/.bin/gulp build_server","build":"./node_modules/.bin/gulp build_or_download","fast-build-server":"./node_modules/.bin/gulp dev_server","watch-server":"./node_modules/.bin/gulp watch_server","eslint":"eslint --ignore-path .eslintignore --ext .js,.ts,.tsx .","repo:check":"./node_modules/.bin/gulp repo_check","repo:fix":"./node_modules/.bin/gulp repo_fix"},"devDependencies":{"@types/fs-extra":"^8.0.0","@types/glob":"5.0.30","@types/lodash.findindex":"^4.6.6","@types/mocha":"^5.2.5","@types/node":"^18.17.1","@types/react":"^17.0.37","@types/react-dom":"^17.0.11","@types/semver":"^7.3.8","@types/sinon":"^10.0.12","@types/vscode":"^1.77.0","@types/vscode-webview":"^1.57.0","@types/winreg":"^1.2.30","@types/winston":"^2.4.4","@typescript-eslint/eslint-plugin":"^5.18.0","@typescript-eslint/parser":"^5.18.0","@vscode/test-electron":"^2.3.8","css-loader":"^6.7.3","eslint":"^8.13.0","eslint-webpack-plugin":"^3.2.0","gulp":"^5.0.0","gulp-decompress":"^3.0.0","gulp-download":"0.0.1","lodash.findindex":"^4.6.0","lodash.template":">=4.5.0","minimist":">=1.2.6","mocha":"^9.2.2","request":"^2.88.2","sinon":"^14.0.0","style-loader":"^3.3.1","ts-loader":"^9.4.2","typescript":"^4.6.4","webpack":"^5.94.0","webpack-cli":"^4.6.0"},"dependencies":{"@redhat-developer/vscode-extension-proposals":"0.0.23","@redhat-developer/vscode-redhat-telemetry":"^0.9.0","@vscode/codicons":"^0.0.32","@vscode/webview-ui-toolkit":"1.2.2","chokidar":"^3.5.3","expand-home-dir":"^0.0.3","fmtr":"^1.1.2","fs-extra":"^8.1.0","glob":"^7.1.3","htmlparser2":"6.0.1","jdk-utils":"^0.5.1","react":"^17.0.2","react-dom":"^17.0.2","semver":"^7.5.2","vscode-languageclient":"8.2.0-next.3","winreg-utf8":"^0.1.1","winston":"^3.2.1","winston-daily-rotate-file":"^4.7.1"},"overrides":{"vscode-languageserver-protocol":"3.17.6-next.1"},"segmentWriteKey":"Y7Y5Xk8dKEhVZHTmAkFZkqgdN4d7c4lt","segmentWriteKeyDebug":"BflPll7uuKOCm3y0g7JpfXLVBVFBivDE"},"location":{"$mid":1,"path":"/Users/andytran/.vscode/extensions/redhat.java-1.37.0-darwin-arm64","scheme":"file"},"isBuiltin":false,"targetPlatform":"darwin-arm64","publisherDisplayName":"Red Hat","metadata":{"installedTimestamp":1733083352907,"pinned":false,"source":"gallery","id":"198a707e-28af-4e84-8610-6e2f628dd12d","publisherId":"eed56242-9699-4317-8bc7-e9f4b9bdd3ff","publisherDisplayName":"Red Hat","targetPlatform":"darwin-arm64","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"ms-python.vscode-pylance","uuid":"364d2426-116a-433a-a5d8-a5098dc3afbd"},"manifest":{"name":"vscode-pylance","displayName":"Pylance","description":"A performant, feature-rich language server for Python in VS Code","version":"2024.12.1","license":"SEE LICENSE IN LICENSE.txt","author":{"name":"Microsoft Corporation"},"publisher":"ms-python","private":true,"bugs":{"url":"https://github.com/microsoft/pylance-release/issues"},"repository":{"type":"git","url":"https://github.com/microsoft/pylance-release"},"engines":{"vscode":"^1.91.0"},"keywords":["python"],"categories":["Programming Languages"],"icon":"images/icon.png","main":"./dist/extension.bundle.js","browser":"./dist/browser.extension.bundle.js","activationEvents":["onLanguage:python","workspaceContains:pyrightconfig.json"],"extensionDependencies":["ms-python.python"],"capabilities":{"untrustedWorkspaces":{"supported":"limited","description":"Python will not be executed; the latest Python version will be used for analysis and installed libraries will not be available.","restrictedConfigurations":["python.analysis.nodeExecutable"]},"virtualWorkspaces":{"supported":"limited","description":"Analysis is limited to opened files."}},"contributes":{"commands":[{"command":"pylance.reportIssue","title":"Pylance: Report Issue..."},{"command":"pylance.indexing.clearPersistedIndices","title":"Pylance: Clear All Persisted Indices"},{"command":"pylance.profiling.start","title":"Pylance: Start Profiling"},{"command":"pylance.profiling.stop","title":"Pylance: Stop Profiling"},{"command":"pylance.logging.start","title":"Pylance: Start Logging"},{"command":"pylance.logging.stop","title":"Pylance: Stop Logging"},{"command":"pylance.gotoOutputChannel","title":"Pylance: Go to output channel"},{"command":"pylance.dumpTokens","title":"Dump token streams ...","category":"Pylance debugging","enablement":"editorLangId == python && config.pyright.development"},{"command":"pylance.dumpNodes","title":"Dump parse tree ...","category":"Pylance debugging","enablement":"editorLangId == python && config.pyright.development"},{"command":"pylance.dumpTypes","title":"Dump type info ...","category":"Pylance debugging","enablement":"editorLangId == python && config.pyright.development"},{"command":"pylance.dumpCachedTypes","title":"Pylance: Dump cached type info ...","category":"Pylance debugging","enablement":"editorLangId == python && config.pyright.development"},{"command":"pylance.dumpCodeFlowGraph","title":"Pylance: Dump code flow graph for node ...","category":"Pylance debugging","enablement":"editorLangId == python && config.pyright.development"},{"command":"pylance.learnMoreAboutImportResolution","title":"Learn more about import resolution","enablement":"false"},{"command":"pylance.foldDocstrings","title":"Pylance: Fold All Docstrings"},{"command":"pylance.unfoldDocstrings","title":"Pylance: Unfold All Docstrings"}],"menus":{"commandPalette":[{"command":"pylance.reportIssue"},{"command":"pylance.indexing.clearPersistedIndices","when":"!isWeb"},{"command":"pylance.profiling.start","when":"!isWeb"},{"command":"pylance.profiling.stop","when":"!isWeb"},{"command":"pylance.logging.start","when":"!isWeb"},{"command":"pylance.logging.stop","when":"!isWeb"},{"command":"pylance.dumpTokens","when":"editorLangId == python && config.pyright.development"},{"command":"pylance.dumpNodes","when":"editorLangId == python && config.pyright.development"},{"command":"pylance.dumpTypes","when":"editorLangId == python && config.pyright.development"},{"command":"pylance.dumpCachedTypes","when":"editorLangId == python && config.pyright.development"},{"command":"pylance.dumpCodeFlowGraph","when":"editorLangId == python && config.pyright.development"},{"command":"pylance.foldDocstrings","when":"!isWeb"},{"command":"pylance.unfoldDocstrings","when":"!isWeb"}]},"configurationDefaults":{"[python]":{"editor.formatOnType":true,"editor.wordBasedSuggestions":"off"}},"configuration":{"type":"object","title":"Pylance","properties":{"python.analysis.inlayHints.variableTypes":{"type":"boolean","default":false,"markdownDescription":"Enable/disable inlay hints for variable types. Hints are not displayed for assignments of literals or constants:\n```python\nfoo':list[str]' = [\"a\"]\n \n```\n","scope":"resource"},"python.analysis.inlayHints.functionReturnTypes":{"type":"boolean","default":false,"markdownDescription":"Enable/disable inlay hints for function return types:\n```python\ndef foo(x:int) '-> int':\n\treturn x\n```\n","scope":"resource"},"python.analysis.inlayHints.callArgumentNames":{"type":"string","default":"off","markdownDescription":"Enable/disable inlay hints for call argument names:\n```python\ndatetime('year='2019, 'month='10, 'day='27)\n```\n","enum":["off","partial","all"],"enumDescriptions":["Disable inlay hints for call argument names.","Enable inlay hints for positional-or-keyword arguments while ignoring positional-only and keyword-only.","Enable inlay hints for positional-or-keyword and positional-only arguments while ignoring keyword-only."],"scope":"resource"},"python.analysis.inlayHints.pytestParameters":{"type":"boolean","default":false,"markdownDescription":"Enable/disable inlay hints for pytest function parameter types:\n```python\ndef test_foo(my_fixture: 'str'):\n\tassert(my_fixture == 'foo')\n```\n","scope":"resource"},"python.analysis.completeFunctionParens":{"type":"boolean","default":false,"description":"Add parentheses to function completions.","scope":"resource"},"python.analysis.autoImportCompletions":{"type":"boolean","default":false,"description":"Enable auto-import completions.","scope":"resource"},"python.analysis.showOnlyDirectDependenciesInAutoImport":{"type":"boolean","default":false,"description":"Show only direct dependencies declared in `requirements.txt` or `pyproject.toml` in `auto import` suggestions, if they exist. This only affects `auto import` for completions. The `add import` code action will continue to show all possible imports.","scope":"resource"},"python.analysis.autoFormatStrings":{"type":"boolean","default":false,"description":"When typing a '{' in a string, automatically prefix the string with an 'f'.","scope":"window"},"python.analysis.autoSearchPaths":{"type":"boolean","default":true,"description":"Automatically add common search paths like 'src'.","scope":"resource"},"python.analysis.stubPath":{"type":"string","default":"typings","description":"Path to directory containing custom type stub files.","scope":"resource"},"python.analysis.diagnosticMode":{"type":"string","default":"openFilesOnly","description":"Analysis scope for showing diagnostics.","enum":["openFilesOnly","workspace"],"enumDescriptions":["Analyzes and reports errors on only open files.","Analyzes and reports errors on all files in the workspace."],"scope":"resource"},"python.analysis.extraPaths":{"type":"array","default":[],"items":{"type":"string"},"description":"Additional import search resolution paths","scope":"resource"},"python.analysis.include":{"type":"array","default":[],"items":{"type":"string"},"description":"Paths of directories or files that should be included. If no paths are specified, Pylance defaults to the workspace root directory. Paths may contain wildcard characters ** (a directory or multiple levels of directories), * (a sequence of zero or more characters), or ? (a single character). If the path contains a '${workspaceFolder:<workspaceName>}' variable, the glob pattern will only apply to the corresponding workspace in a multi-root workspace environment.","scope":"resource"},"python.analysis.exclude":{"type":"array","default":[],"items":{"type":"string"},"description":"Paths of directories or files that should not be included. These override the include directories, allowing specific subdirectories to be excluded. Note that files in the exclude paths may still be included in the analysis if they are referenced (imported) by source files that are not excluded. Paths may contain wildcard characters ** (a directory or multiple levels of directories), * (a sequence of zero or more characters), or ? (a single character). If no exclude paths are specified, Pylance automatically excludes the following: `**/node_modules`, `**/__pycache__`, `.git` and any virtual environment directories. If the path contains a '${workspaceFolder:<workspaceName>}' variable, the glob pattern will only apply to the corresponding workspace in a multi-root workspace environment.","scope":"resource"},"python.analysis.ignore":{"type":"array","default":[],"items":{"type":"string"},"description":"Paths of directories or files whose diagnostic output (errors and warnings) should be suppressed even if they are an included file or within the transitive closure of an included file. Paths may contain wildcard characters ** (a directory or multiple levels of directories), * (a sequence of zero or more characters), or ? (a single character). If the path contains a '${workspaceFolder:<workspaceName>}' variable, the glob pattern will only apply to the corresponding workspace in a multi-root workspace environment.","scope":"resource"},"python.analysis.indexing":{"type":"boolean","default":true,"description":"Enable indexing of installed third party libraries and user files for language features such as auto-import, add import, workspace symbols and etc.","scope":"resource"},"python.analysis.userFileIndexingLimit":{"type":"number","default":2000,"description":"Maximum number of user files to index in the workspace. Indexing files is a performance-intensive task. Please use this setting to limit the number of files you want us to index. If you enter -1, we will index all files.","scope":"resource"},"python.analysis.persistAllIndices":{"type":"boolean","default":true,"description":"Indices for all third party libraries will be persisted to disk.","scope":"resource"},"python.analysis.includeAliasesFromUserFiles":{"type":"boolean","default":false,"description":"Include alias symbols from user files. This will make alias symbols to show up in features such as `add import`, `auto import`","scope":"resource"},"python.analysis.extraCommitChars":{"type":"boolean","default":false,"description":"Allow using '.', '(' as commit characters when applicable.","scope":"resource"},"python.analysis.useLibraryCodeForTypes":{"type":"boolean","default":true,"description":"Use library implementations to extract type information when type stub is not present.","scope":"resource"},"python.analysis.autoIndent":{"type":"boolean","default":true,"description":"Automatically adjust indentation based on language semantics when typing Python code.","scope":"window"},"python.analysis.typeCheckingMode":{"type":"string","default":"off","enum":["off","basic","standard","strict"],"description":"Defines the default rule set for type checking.","enumDescriptions":["Show diagnostics for invalid syntax, unresolved imports, undefined variables.","All rules from \"off\" + \"basic\" type checking rules.","All rules from \"basic\" + \"standard\" type checking rules.","All rules from \"standard\" + \"strict\" type checking rules."],"scope":"resource"},"python.analysis.fixAll":{"type":"array","default":[],"items":{"enum":["source.unusedImports","source.convertImportFormat"],"enumDescriptions":["Remove unused imports.","Convert import format following python.analysis.importFormat."]},"description":"source fixes to run in fix all.","scope":"resource"},"python.analysis.packageIndexDepths":{"type":"array","default":[{"name":"sklearn","depth":2},{"name":"matplotlib","depth":2},{"name":"scipy","depth":2},{"name":"django","depth":2},{"name":"flask","depth":2},{"name":"fastapi","depth":2}],"items":{"type":"object","label":"Per package settings","required":["name"],"properties":{"name":{"type":"string","label":"Package name to configure. Empty name means all packages.","default":""},"depth":{"type":"integer","label":"Depth to scan modules.","default":1},"includeAllSymbols":{"type":"boolean","label":"'true' means include all symbols. 'false' means only symbols in __all__.","default":false}}},"markdownDescription":"Used to override how many levels under installed packages to index on a per package basis. By default, only top-level modules are indexed (depth = 1). To index submodules, increase depth by 1 for each level of submodule you want to index. Accepted values are:\n```JSON\n{\"name\": \"package name (str)\",\n \"depth\": \"depth to scan (int)\",\n \"includeAllSymbols\": \"whether to include all symbols (bool)\"}\n\n```\nIf `includeAllSymbols` is set to `false`, only symbols in each package's `__all__` are included. When it's set to `true`, Pylance will index every module/top level symbol declarations in the file.  \n  \nUsage example: \n```JSON\n[\n\t{\"name\": \"sklearn\", \"depth\": 2, \"includeAllSymbols\": true},\n\t{\"name\": \"matplotlib\", \"depth\": 3, \"includeAllSymbols\": false}\n]\n\n```\n","scope":"resource"},"python.analysis.typeEvaluation.strictListInference":{"type":"boolean","markdownDescription":"When inferring the type of a list, use strict type assumptions. For example, the expression `[1, 'a', 3.4]` could be inferred to be of type `list[Any]` or `list[int | str | float]`. If this setting is true, it will use the latter (stricter) type. The default value for this setting is `false`.","default":false,"scope":"resource"},"python.analysis.typeEvaluation.strictDictionaryInference":{"type":"boolean","markdownDescription":"When inferring the type of a dictionary’s keys and values, use strict type assumptions. For example, the expression `{'a': 1, 'b': 'a'}` could be inferred to be of type `dict[str, Any]` or `dict[str, int | str]`. If this setting is true, it will use the latter (stricter) type. The default value for this setting is `false`.","default":false,"scope":"resource"},"python.analysis.typeEvaluation.strictSetInference":{"type":"boolean","markdownDescription":"When inferring the type of a set, use strict type assumptions. For example, the expression `{1, 'a', 3.4}` could be inferred to be of type `set[Any]` or `set[int | str | float]`. If this setting is true, it will use the latter (stricter) type. The default value for this setting is `false`.","default":false,"scope":"resource"},"python.analysis.typeEvaluation.analyzeUnannotatedFunctions":{"type":"boolean","markdownDescription":"Analyze and report errors for functions and methods that have no type annotations for input parameters or return types. The default value for this setting is `true`.","default":true,"scope":"resource"},"python.analysis.typeEvaluation.strictParameterNoneValue":{"type":"boolean","markdownDescription":"PEP 484 indicates that when a function parameter is assigned a default value of None, its type should implicitly be Optional even if the explicit type is not. When enabled, this rule requires that parameter type annotations use Optional explicitly in this case. The default value for this setting is `true`.","default":true,"scope":"resource"},"python.analysis.typeEvaluation.enableTypeIgnoreComments":{"type":"boolean","markdownDescription":"PEP 484 defines support for `# type: ignore` comments. This switch enables or disables support for these comments. The default value for this setting is `true`. This does not affect `# pyright: ignore` comments.","default":true,"scope":"resource"},"python.analysis.typeEvaluation.deprecateTypingAliases":{"type":"boolean","markdownDescription":"PEP 585 indicates that aliases to types in standard collections that were introduced solely to support generics are deprecated as of Python 3.9. This switch controls whether these are treated as deprecated. This applies only when pythonVersion is 3.9 or newer. The default value for this setting is `false` but may be switched to `true` in the future.","default":false,"scope":"resource"},"python.analysis.typeEvaluation.enableReachabilityAnalysis":{"type":"boolean","markdownDescription":"If enabled, code that is determined to be unreachable by type analysis is reported using a tagged hint. This setting does not affect code that is determined to be unreachable regardless of type analysis; such code is always reported as unreachable. This setting also has no effect when when using the command-line version of pyright because it never emits tagged hints for unreachable code.","default":false,"scope":"resource"},"python.analysis.typeEvaluation.enableExperimentalFeatures":{"type":"boolean","markdownDescription":"Enables a set of experimental (mostly undocumented) features that correspond to proposed or exploratory changes to the Python typing standard. These features will likely change or be removed, so they should not be used except for experimentation purposes. The default value for this setting is `false`.","default":false,"scope":"resource"},"python.analysis.typeEvaluation.disableBytesTypePromotions":{"type":"boolean","markdownDescription":"Disables legacy behavior where `bytearray` and `memoryview` are considered subtypes of `bytes`. [PEP 688](https://peps.python.org/pep-0688/#no-special-meaning-for-bytes) deprecates this behavior, but this switch is provided to restore the older behavior. The default value for this setting is `false`.","default":false,"scope":"resource"},"python.analysis.diagnosticSeverityOverrides":{"type":"object","markdownDescription":"Allows a user to override the severity levels for individual diagnostics. Use the rule name as a key and one of \"error\", \"warning\", \"information\", \"none\", `true` (alias for \"error\") or `false` (alias for \"none\") as value. The default value shown for each diagnostic is the default when \"python.analysis.typeCheckingMode\" is set to \"off\". See [here](https://github.com/microsoft/pyright/blob/main/docs/configuration.md#diagnostic-rule-defaults) for defaults for each type checking mode (\"off\", \"basic\" and \"strict\").","scope":"resource","properties":{"reportGeneralTypeIssues":{"type":["string","boolean"],"description":"Diagnostics for general type inconsistencies, unsupported operations, argument/parameter mismatches, etc. Covers all of the basic type-checking rules not covered by other rules. Does not include syntax errors.","default":"none","enum":["none","information","warning","error",true,false]},"reportPropertyTypeMismatch":{"type":["string","boolean"],"description":"Diagnostics for property whose setter and getter have mismatched types.","default":"none","enum":["none","information","warning","error",true,false]},"reportFunctionMemberAccess":{"type":["string","boolean"],"description":"Diagnostics for member accesses on functions.","default":"none","enum":["none","information","warning","error",true,false]},"reportMissingImports":{"type":["string","boolean"],"description":"Diagnostics for imports that have no corresponding imported python file or type stub file.","default":"warning","enum":["none","information","warning","error",true,false]},"reportMissingModuleSource":{"type":["string","boolean"],"description":"Diagnostics for imports that have no corresponding source file. This happens when a type stub is found, but the module source file was not found, indicating that the code may fail at runtime when using this execution environment. Type checking will be done using the type stub.","default":"warning","enum":["none","information","warning","error",true,false]},"reportInvalidTypeForm":{"type":["string","boolean"],"description":"Diagnostics for type expression that uses an invalid form.","default":"error","enum":["none","information","warning","error",true,false]},"reportMissingTypeStubs":{"type":["string","boolean"],"description":"Diagnostics for imports that have no corresponding type stub file (either a typeshed file or a custom type stub). The type checker requires type stubs to do its best job at analysis.","default":"none","enum":["none","information","warning","error",true,false]},"reportImportCycles":{"type":["string","boolean"],"description":"Diagnostics for cyclical import chains. These are not errors in Python, but they do slow down type analysis and often hint at architectural layering issues. Generally, they should be avoided.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnusedImport":{"type":["string","boolean"],"description":"Diagnostics for an imported symbol that is not referenced within that file.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnusedClass":{"type":["string","boolean"],"description":"Diagnostics for a class with a private name (starting with an underscore) that is not accessed.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnusedFunction":{"type":["string","boolean"],"description":"Diagnostics for a function or method with a private name (starting with an underscore) that is not accessed.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnusedVariable":{"type":["string","boolean"],"description":"Diagnostics for a variable that is not accessed.","default":"none","enum":["none","information","warning","error",true,false]},"reportDuplicateImport":{"type":["string","boolean"],"description":"Diagnostics for an imported symbol or module that is imported more than once.","default":"none","enum":["none","information","warning","error",true,false]},"reportWildcardImportFromLibrary":{"type":["string","boolean"],"description":"Diagnostics for an wildcard import from an external library.","default":"none","enum":["none","information","warning","error",true,false]},"reportAbstractUsage":{"type":["string","boolean"],"description":"Diagnostics for an attempt to instantiate an abstract or protocol class or use an abstract method.","default":"error","enum":["none","information","warning","error",true,false]},"reportArgumentType":{"type":["string","boolean"],"description":"Diagnostics for a type incompatibility for an argument to a call.","default":"error","enum":["none","information","warning","error",true,false]},"reportAssertTypeFailure":{"type":["string","boolean"],"description":"Diagnostics for a type incompatibility detected by a typing.assert_type call.","default":"error","enum":["none","information","warning","error",true,false]},"reportAssignmentType":{"type":["string","boolean"],"description":"Diagnostics for type incompatibilities for assignments.","default":"error","enum":["none","information","warning","error",true,false]},"reportAttributeAccessIssue":{"type":["string","boolean"],"description":"Diagnostics for issues involving attribute accesses.","default":"error","enum":["none","information","warning","error",true,false]},"reportCallIssue":{"type":["string","boolean"],"description":"Diagnostics for issues involving call expressions and arguments.","default":"error","enum":["none","information","warning","error",true,false]},"reportInconsistentOverload":{"type":["string","boolean"],"description":"Diagnostics for inconsistencies between function overload signatures and implementation.","default":"error","enum":["none","information","warning","error",true,false]},"reportIndexIssue":{"type":["string","boolean"],"description":"Diagnostics related to index operations and expressions.","default":"error","enum":["none","information","warning","error",true,false]},"reportInvalidTypeArguments":{"type":["string","boolean"],"description":"Diagnostics for invalid type argument usage.","default":"error","enum":["none","information","warning","error",true,false]},"reportNoOverloadImplementation":{"type":["string","boolean"],"description":"Diagnostics for an overloaded function or method with a missing implementation.","default":"error","enum":["none","information","warning","error",true,false]},"reportOperatorIssue":{"type":["string","boolean"],"description":"Diagnostics for related to unary or binary operators.","default":"error","enum":["none","information","warning","error",true,false]},"reportOptionalSubscript":{"type":["string","boolean"],"description":"Diagnostics for an attempt to subscript (index) a variable with an Optional type.","default":"none","enum":["none","information","warning","error",true,false]},"reportOptionalMemberAccess":{"type":["string","boolean"],"description":"Diagnostics for an attempt to access a member of a variable with an Optional type.","default":"none","enum":["none","information","warning","error",true,false]},"reportOptionalCall":{"type":["string","boolean"],"description":"Diagnostics for an attempt to call a variable with an Optional type.","default":"none","enum":["none","information","warning","error",true,false]},"reportOptionalIterable":{"type":["string","boolean"],"description":"Diagnostics for an attempt to use an Optional type as an iterable value (e.g. within a for statement).","default":"none","enum":["none","information","warning","error",true,false]},"reportOptionalContextManager":{"type":["string","boolean"],"description":"Diagnostics for an attempt to use an Optional type as a context manager (as a parameter to a with statement).","default":"none","enum":["none","information","warning","error",true,false]},"reportOptionalOperand":{"type":["string","boolean"],"description":"Diagnostics for an attempt to use an Optional type as an operand to a binary or unary operator (like '+', '==', 'or', 'not').","default":"none","enum":["none","information","warning","error",true,false]},"reportRedeclaration":{"type":["string","boolean"],"description":"Diagnostics for an attempt to declare the type of a symbol multiple times.","default":"error","enum":["none","information","warning","error",true,false]},"reportReturnType":{"type":["string","boolean"],"description":"Diagnostics related to function return type compatibility.","default":"error","enum":["none","information","warning","error",true,false]},"reportTypedDictNotRequiredAccess":{"type":["string","boolean"],"description":"Diagnostics for an attempt to access a non-required key within a TypedDict without a check for its presence.","default":"none","enum":["none","information","warning","error",true,false]},"reportUntypedFunctionDecorator":{"type":["string","boolean"],"description":"Diagnostics for function decorators that have no type annotations. These obscure the function type, defeating many type analysis features.","default":"none","enum":["none","information","warning","error",true,false]},"reportUntypedClassDecorator":{"type":["string","boolean"],"description":"Diagnostics for class decorators that have no type annotations. These obscure the class type, defeating many type analysis features.","default":"none","enum":["none","information","warning","error",true,false]},"reportUntypedBaseClass":{"type":["string","boolean"],"description":"Diagnostics for base classes whose type cannot be determined statically. These obscure the class type, defeating many type analysis features.","default":"none","enum":["none","information","warning","error",true,false]},"reportUntypedNamedTuple":{"type":["string","boolean"],"description":"Diagnostics when “namedtuple” is used rather than “NamedTuple”. The former contains no type information, whereas the latter does.","default":"none","enum":["none","information","warning","error",true,false]},"reportPrivateUsage":{"type":["string","boolean"],"description":"Diagnostics for incorrect usage of private or protected variables or functions. Protected class members begin with a single underscore _ and can be accessed only by subclasses. Private class members begin with a double underscore but do not end in a double underscore and can be accessed only within the declaring class. Variables and functions declared outside of a class are considered private if their names start with either a single or double underscore, and they cannot be accessed outside of the declaring module.","default":"none","enum":["none","information","warning","error",true,false]},"reportTypeCommentUsage":{"type":["string","boolean"],"description":"Diagnostics for usage of deprecated type comments.","default":"none","enum":["none","information","warning","error",true,false]},"reportPrivateImportUsage":{"type":["string","boolean"],"description":"Diagnostics for incorrect usage of symbol imported from a \"py.typed\" module that is not re-exported from that module.","default":"none","enum":["none","information","warning","error",true,false]},"reportConstantRedefinition":{"type":["string","boolean"],"description":"Diagnostics for attempts to redefine variables whose names are all-caps with underscores and numerals.","default":"none","enum":["none","information","warning","error",true,false]},"reportDeprecated":{"type":["string","boolean"],"description":"Diagnostics for use of deprecated classes or functions.","default":"none","enum":["none","information","warning","error",true,false]},"reportIncompatibleMethodOverride":{"type":["string","boolean"],"description":"Diagnostics for methods that override a method of the same name in a base class in an incompatible manner (wrong number of parameters, incompatible parameter types, or incompatible return type).","default":"none","enum":["none","information","warning","error",true,false]},"reportIncompatibleVariableOverride":{"type":["string","boolean"],"description":"Diagnostics for overrides in subclasses that redefine a variable in an incompatible way.","default":"none","enum":["none","information","warning","error",true,false]},"reportInconsistentConstructor":{"type":["string","boolean"],"description":"Diagnostics for __init__ and __new__ methods whose signatures are inconsistent.","default":"none","enum":["none","information","warning","error",true,false]},"reportOverlappingOverload":{"type":["string","boolean"],"description":"Diagnostics for function overloads that overlap in signature and obscure each other or have incompatible return types.","default":"none","enum":["none","information","warning","error",true,false]},"reportPossiblyUnboundVariable":{"type":["string","boolean"],"description":"Diagnostics for the use of variables that may be unbound on some code paths.","default":"error","enum":["none","information","warning","error",true,false]},"reportMissingSuperCall":{"type":["string","boolean"],"description":"Diagnostics for missing call to parent class for inherited `__init__` methods.","default":"none","enum":["none","information","warning","error",true,false]},"reportUninitializedInstanceVariable":{"type":["string","boolean"],"description":"Diagnostics for instance variables that are not declared or initialized within class body or `__init__` method.","default":"none","enum":["none","information","warning","error",true,false]},"reportInvalidStringEscapeSequence":{"type":["string","boolean"],"description":"Diagnostics for invalid escape sequences used within string literals. The Python specification indicates that such sequences will generate a syntax error in future versions.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnknownParameterType":{"type":["string","boolean"],"description":"Diagnostics for input or return parameters for functions or methods that have an unknown type.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnknownArgumentType":{"type":["string","boolean"],"description":"Diagnostics for call arguments for functions or methods that have an unknown type.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnknownLambdaType":{"type":["string","boolean"],"description":"Diagnostics for input or return parameters for lambdas that have an unknown type.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnknownVariableType":{"type":["string","boolean"],"description":"Diagnostics for variables that have an unknown type..","default":"none","enum":["none","information","warning","error",true,false]},"reportUnknownMemberType":{"type":["string","boolean"],"description":"Diagnostics for class or instance variables that have an unknown type.","default":"none","enum":["none","information","warning","error",true,false]},"reportMissingParameterType":{"type":["string","boolean"],"description":"Diagnostics for parameters that are missing a type annotation.","default":"none","enum":["none","information","warning","error",true,false]},"reportMissingTypeArgument":{"type":["string","boolean"],"description":"Diagnostics for generic class reference with missing type arguments.","default":"none","enum":["none","information","warning","error",true,false]},"reportInvalidTypeVarUse":{"type":["string","boolean"],"description":"Diagnostics for improper use of type variables in a function signature.","default":"none","enum":["none","information","warning","error",true,false]},"reportCallInDefaultInitializer":{"type":["string","boolean"],"description":"Diagnostics for function calls within a default value initialization expression. Such calls can mask expensive operations that are performed at module initialization time.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnnecessaryIsInstance":{"type":["string","boolean"],"description":"Diagnostics for 'isinstance' or 'issubclass' calls where the result is statically determined to be always true. Such calls are often indicative of a programming error.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnnecessaryCast":{"type":["string","boolean"],"description":"Diagnostics for 'cast' calls that are statically determined to be unnecessary. Such calls are sometimes indicative of a programming error.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnnecessaryComparison":{"type":["string","boolean"],"description":"Diagnostics for '==' and '!=' comparisons that are statically determined to be unnecessary. Such calls are sometimes indicative of a programming error.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnnecessaryContains":{"type":["string","boolean"],"description":"Diagnostics for 'in' operation that is statically determined to be unnecessary. Such operations are sometimes indicative of a programming error.","default":"none","enum":["none","information","warning","error",true,false]},"reportAssertAlwaysTrue":{"type":["string","boolean"],"description":"Diagnostics for 'assert' statement that will provably always assert. This can be indicative of a programming error.","default":"none","enum":["none","information","warning","error",true,false]},"reportSelfClsParameterName":{"type":["string","boolean"],"description":"Diagnostics for a missing or misnamed “self” parameter in instance methods and “cls” parameter in class methods. Instance methods in metaclasses (classes that derive from “type”) are allowed to use “cls” for instance methods.","default":"none","enum":["none","information","warning","error",true,false]},"reportImplicitStringConcatenation":{"type":["string","boolean"],"description":"Diagnostics for two or more string literals that follow each other, indicating an implicit concatenation. This is considered a bad practice and often masks bugs such as missing commas.","default":"none","enum":["none","information","warning","error",true,false]},"reportInvalidStubStatement":{"type":["string","boolean"],"description":"Diagnostics for type stub statements that do not conform to PEP 484.","default":"none","enum":["none","information","warning","error",true,false]},"reportIncompleteStub":{"type":["string","boolean"],"description":"Diagnostics for the use of a module-level “__getattr__” function, indicating that the stub is incomplete.","default":"none","enum":["none","information","warning","error",true,false]},"reportUndefinedVariable":{"type":["string","boolean"],"description":"Diagnostics for undefined variables.","default":"warning","enum":["none","information","warning","error",true,false]},"reportUnboundVariable":{"type":["string","boolean"],"description":"Diagnostics for the use of unbound variables.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnhashable":{"type":["string","boolean"],"description":"Diagnostics for the use of an unhashable object in a container that requires hashability.","default":"error","enum":["none","information","warning","error",true,false]},"reportUnusedCallResult":{"type":["string","boolean"],"description":"Diagnostics for call expressions whose results are not consumed and are not None.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnusedCoroutine":{"type":["string","boolean"],"description":"Diagnostics for call expressions that return a Coroutine and whose results are not consumed.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnusedExcept":{"type":["string","boolean"],"description":"Diagnostics for unreachable except clause.","default":"error","enum":["none","information","warning","error",true,false]},"reportUnusedExpression":{"type":["string","boolean"],"description":"Diagnostics for simple expressions whose value is not used in any way.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnsupportedDunderAll":{"type":["string","boolean"],"description":"Diagnostics for unsupported operations performed on __all__.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnnecessaryTypeIgnoreComment":{"type":["string","boolean"],"description":"Diagnostics for '# type: ignore' comments that have no effect.","default":"none","enum":["none","information","warning","error",true,false]},"reportMatchNotExhaustive":{"type":["string","boolean"],"description":"Diagnostics for 'match' statements that do not exhaustively match all possible values.","default":"none","enum":["none","information","warning","error",true,false]},"reportShadowedImports":{"type":["string","boolean"],"description":"Diagnostics for files that are overriding a module in the stdlib.","default":"none","enum":["none","information","warning","error",true,false]},"reportImplicitOverride":{"type":["string","boolean"],"description":"Diagnostics for overridden methods that do not include an `@override` decorator.","default":"none","enum":["none","information","warning","error",true,false]}}},"python.analysis.disableTaggedHints":{"type":"boolean","default":false,"scope":"resource","description":"Disable hint diagnostics with special hints for grayed-out or strike-through text."},"python.analysis.logLevel":{"type":"string","default":"Information","description":"Specifies the level of logging for the Output panel","enum":["Error","Warning","Information","Trace"],"scope":"window"},"python.analysis.typeshedPaths":{"type":"array","default":[],"items":{"type":"string"},"description":"Paths to look for typeshed modules.","scope":"resource"},"python.analysis.importFormat":{"type":"string","default":"absolute","enum":["absolute","relative"],"description":"Defines the default format for importing modules.","enumDescriptions":["Use absolute import format when creating new import statement.","Use relative import format when creating new import statement."],"scope":"resource"},"python.analysis.enableSyncServer":{"type":"boolean","default":false,"scope":"window","description":"Use sync server mode [Experimental]. For internal use only, may cause Pylance to stop working.","tags":["experimental","onExP"]},"python.analysis.reportExtraTelemetry":{"type":"boolean","default":false,"scope":"window","description":"Report extra telemetry [Experimental]. For internal use only, may cause Pylance to slow down.","tags":["experimental","onExP"]},"python.analysis.enablePytestSupport":{"type":"boolean","default":true,"description":"Enables pytest support in Pylance.","scope":"resource"},"python.analysis.gotoDefinitionInStringLiteral":{"type":"boolean","default":true,"description":"For string literals that look like module names, enables go to definition to go to the module.","scope":"resource"},"python.analysis.nodeExecutable":{"type":"string","default":"","markdownDescription":"Path to a Node.js executable to use for running the language server. If not specified, the language server will use the Node.js executable that ships with VS Code. Set this option if you're having trouble with Pylance running out of memory. See [here](https://aka.ms/AApf7ox) for more information.","scope":"machine"},"python.analysis.supportRestructuredText":{"type":"boolean","default":false,"markdownDescription":"Enable/disable support for reStructuredText in docstrings.","scope":"window","tags":["preview"]},"python.analysis.cacheLSPData":{"type":"boolean","default":false,"description":"Cache LSP data for faster completions. Experimental, may cause Pylance to stop working.","scope":"machine","tags":["experimental","onExP"]},"python.analysis.regenerateStdLibIndices":{"type":"boolean","default":false,"markdownDescription":"Instead of relying on the shared stdlib.json indices for all Python versions, generate unique indices tailored to each workspace's specific Python version and platform. This regeneration process will affect performance, unlike using the prebuilt stdlib indices.","scope":"resource"},"python.analysis.aiCodeActions":{"type":"object","default":{},"description":"Enable/disable AI-assisted code actions. Requires the Copilot Chat extension to be enabled.","scope":"resource","properties":{"implementAbstractClasses":{"type":"boolean","default":false,"description":"Enable/disable AI assistance for implementing inherited abstract classes."}}},"python.analysis.generateWithTypeAnnotation":{"type":"boolean","default":false,"description":"Add type annotations when generating code. Defaults to `false` for type checking mode `off`, and `true` for other modes.","scope":"resource"},"python.analysis.languageServerMode":{"type":"string","default":"default","enum":["light","default","full"],"markdownDescription":"Select a predefined set of values for settings. Please check [this link](https://aka.ms/languageserver-mode) for more details.","enumDescriptions":["Set Pylance to do only essential work to make it light weight. See the link at the description to find out exactly what settings are set to what value.","Leave Pylance with default settings.","Enable most Pylance features by default. See the link at the description to find out exactly what settings are set to what value."],"scope":"resource"},"python.analysis.supportDocstringTemplate":{"type":"boolean","default":false,"description":"Enable/disable support for docstring generation. In a blank docstring, use `Ctrl+Space` to generate a docstring.","scope":"resource","tags":["experimental","onExP"]},"python.analysis.displayEnglishDiagnostics":{"type":"boolean","default":false,"description":"Display diagnostics in English regardless of VS Code's display language.","scope":"resource"}}},"jsonValidation":[{"fileMatch":"pyrightconfig.json","url":"./dist/schemas/pyrightconfig.schema.json"}],"semanticTokenTypes":[{"id":"module","description":"module","superType":"namespace"},{"id":"intrinsic","description":"intrinsic","superType":"operator"},{"id":"selfParameter","description":"self parameter","superType":"parameter"},{"id":"clsParameter","description":"cls parameter","superType":"parameter"},{"id":"magicFunction","description":"magic aka dunder function","superType":"function"},{"id":"builtinConstant","description":"constants like True, False, None, or __debug__","superType":"constant"},{"id":"parenthesis","description":"() parenthesis"},{"id":"bracket","description":"[] bracket"},{"id":"curlybrace","description":"{} curly brace"},{"id":"colon","description":"colon token"},{"id":"semicolon","description":"semicolon token"},{"id":"arrow","description":"arrow token"}],"semanticTokenModifiers":[{"id":"typeHint","description":"inside a type annotation"},{"id":"typeHintComment","description":"inside a comment style type annotation"},{"id":"decorator","description":"inside a decorator"},{"id":"builtin","description":"built-in identifier"},{"id":"overridden","description":"overridden token"}],"semanticTokenScopes":[{"language":"python","scopes":{"selfParameter":["variable.parameter.function.language.special.self.python"],"clsParameter":["variable.parameter.function.language.special.cls.python"],"magicFunction":["support.function.magic.python"],"*.typeHintComment":["comment.typehint.type.notation.python"],"*.overridden":["support.function.magic.python"],"function.decorator":["meta.function.decorator.python"],"class.decorator":["meta.function.decorator.python"],"builtinConstant":["constant.language.python"],"parenthesis":["source.python"],"bracket":["source.python"],"curlybrace":["source.python"],"colon":["punctuation.separator.colon.python"],"semicolon":["source.python"],"arrow":["punctuation.separator.annotation.result.python"]}}]},"scripts":{"clean":"shx rm -rf ./dist ./out NOTICE.txt","package":"vsce package --githubBranch main","vscode:prepublish":"npm run clean && shx cp ../../NOTICE.txt . && node --max_old_space_size=8192 ./node_modules/webpack-cli/bin/cli.js --mode production --progress","webpack":"node --max_old_space_size=8192 ./node_modules/webpack-cli/bin/cli.js --mode development --progress","webpack-dev":"npm run clean && node --max_old_space_size=8192 ./node_modules/webpack-cli/bin/cli.js --mode development --watch --progress","webpack-dev-fast":"npm run clean && webpack --env fast --mode development --watch --progress","build:tests":"tsc","watch:tests":"tsc --watch","encryptText":"ts-node --project ./tsconfig.json -r tsconfig-paths/register ./src/encryptText.ts","test":"npm run webpack && npm run test:extension && npm run test:web","test:extension":"npm run build:tests && node ./src/tests/runTests.js extension","test:smoke":"npm run build:tests && node ./src/tests/runTests.js smoke","test:web":"npm run webpack && node ./build/launchWebTests.js","test:copytestbundle":"shx cp ./dist/browser.tests/web/index.bundle.js ./test-web/ms-python.vscode-pylance/dist/browser.tests/web/index.bundle.js","test:web:exists":"vscode-test-web --coi --extensionDevelopmentPath=./test-web --extensionTestsPath=./test-web/ms-python.vscode-pylance/dist/browser.tests/web/index.bundle.js --verbose","test:web:exists:nocoi":"vscode-test-web --extensionDevelopmentPath=./test-web --extensionTestsPath=./test-web/ms-python.vscode-pylance/dist/browser.tests/web/index.bundle.js --verbose"},"devDependencies":{"@types/jest":"^29.5.13","@types/mocha":"^10.0.8","@types/node":"^22.7.0","@types/source-map-support":"^0.5.10","@types/vscode":"^1.90.0","@types/webpack":"^5.28.5","@types/webpack-env":"^1.18.5","@types/which":"^3.0.4","@vscode/test-electron":"^2.4.1","@vscode/test-web":"^0.0.60","@vscode/vsce":"^2.32.0","copy-webpack-plugin":"^11.0.0","esbuild-loader":"^3.2.0","javascript-obfuscator":"4.1.1","jest":"^29.7.0","jest-cli":"^29.7.0","jest-environment-node":"^29.7.0","jest-junit":"^16.0.0","mocha":"^10.7.3","shx":"^0.3.4","source-map-support":"^0.5.21","terser-webpack-plugin":"^5.3.10","ts-jest":"^29.2.5","ts-loader":"^9.5.1","ts-mockito":"^2.6.1","ts-node":"^10.9.2","typescript":"~5.5.4","webpack":"^5.94.0","webpack-cli":"^5.1.4","webpack-env":"^0.8.0","webpack-obfuscator":"^3.5.1"},"dependencies":{"@vscode/extension-telemetry":"^0.9.7","@vscode/sync-api-common":"^0.9.0","@vscode/sync-api-service":"^0.9.0","buffer":"^6.0.3","events":"^3.3.0","path-browserify":"^1.0.1","semver":"^7.6.3","stream-browserify":"^3.0.0","typescript-char":"^0.0.0","vscode-jsonrpc":"^9.0.0-next.5","vscode-languageclient":"^10.0.0-next.12","vscode-languageserver":"^10.0.0-next.10","vscode-languageserver-protocol":"^3.17.6-next.10","vscode-languageserver-types":"^3.17.6-next.5","vscode-tas-client":"^0.1.84","which":"^4.0.0"}},"location":{"$mid":1,"path":"/Users/andytran/.vscode/extensions/ms-python.vscode-pylance-2024.12.1","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Microsoft","metadata":{"isApplicationScoped":false,"isMachineScoped":false,"isBuiltin":false,"installedTimestamp":1733520449668,"pinned":false,"source":"gallery","id":"364d2426-116a-433a-a5d8-a5098dc3afbd","publisherId":"998b010b-e2af-44a5-a6cd-0b5fd3b9b6f8","publisherDisplayName":"Microsoft","targetPlatform":"undefined","updated":true,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"preRelease":false},"isValid":true,"validations":[]}]}